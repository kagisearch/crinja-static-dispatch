Dump of assembler code for function ->:
/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
190	  Crinja.filter(:selectattr) do
   0x00000000001c8930 <+0>:	push   r15
   0x00000000001c8932 <+2>:	push   r14
   0x00000000001c8934 <+4>:	push   rbx
   0x00000000001c8935 <+5>:	sub    rsp,0x4aa0
   0x00000000001c893c <+12>:	mov    rax,rdi
   0x00000000001c893f <+15>:	mov    QWORD PTR [rsp+0x580],rax
   0x00000000001c8947 <+23>:	mov    rax,QWORD PTR [rsp+0x4ad8]
   0x00000000001c894f <+31>:	mov    QWORD PTR [rsp+0x588],rax
   0x00000000001c8957 <+39>:	mov    rax,QWORD PTR [rsp+0x4ad0]
   0x00000000001c895f <+47>:	mov    QWORD PTR [rsp+0x590],rax
   0x00000000001c8967 <+55>:	mov    rax,QWORD PTR [rsp+0x4ac8]
   0x00000000001c896f <+63>:	mov    QWORD PTR [rsp+0x598],rax
   0x00000000001c8977 <+71>:	mov    rax,QWORD PTR [rsp+0x4ac0]
   0x00000000001c897f <+79>:	mov    QWORD PTR [rsp+0x5a0],rax
   0x00000000001c8987 <+87>:	mov    QWORD PTR [rsp+0x5a8],r9
   0x00000000001c898f <+95>:	mov    QWORD PTR [rsp+0x5b0],r8
   0x00000000001c8997 <+103>:	mov    QWORD PTR [rsp+0x5b8],rcx
   0x00000000001c899f <+111>:	mov    DWORD PTR [rsp+0x5c4],edx
   0x00000000001c89a6 <+118>:	mov    QWORD PTR [rsp+0x5c8],rsi
   0x00000000001c89ae <+126>:	mov    QWORD PTR [rsp+0x5d0],rdi
   0x00000000001c89b6 <+134>:	mov    rax,QWORD PTR [rsp+0x588]
   0x00000000001c89be <+142>:	mov    rcx,QWORD PTR [rsp+0x590]
   0x00000000001c89c6 <+150>:	mov    rdx,QWORD PTR [rsp+0x598]
   0x00000000001c89ce <+158>:	mov    rsi,QWORD PTR [rsp+0x5a0]
   0x00000000001c89d6 <+166>:	mov    rdi,QWORD PTR [rsp+0x5a8]
   0x00000000001c89de <+174>:	mov    r8,QWORD PTR [rsp+0x5b0]
   0x00000000001c89e6 <+182>:	mov    r9,QWORD PTR [rsp+0x5b8]
   0x00000000001c89ee <+190>:	mov    r10d,DWORD PTR [rsp+0x5c4]
   0x00000000001c89f6 <+198>:	mov    r11,QWORD PTR [rsp+0x5c8]
   0x00000000001c89fe <+206>:	mov    QWORD PTR [rsp+0x4a00],r11
   0x00000000001c8a06 <+214>:	mov    DWORD PTR [rsp+0x4a08],r10d
   0x00000000001c8a0e <+222>:	mov    QWORD PTR [rsp+0x4a10],r9
   0x00000000001c8a16 <+230>:	mov    QWORD PTR [rsp+0x4a18],r8
   0x00000000001c8a1e <+238>:	mov    QWORD PTR [rsp+0x4a20],rdi
   0x00000000001c8a26 <+246>:	mov    QWORD PTR [rsp+0x4a28],rsi
   0x00000000001c8a2e <+254>:	mov    QWORD PTR [rsp+0x4a30],rdx
   0x00000000001c8a36 <+262>:	mov    QWORD PTR [rsp+0x4a38],rcx
   0x00000000001c8a3e <+270>:	mov    QWORD PTR [rsp+0x4a40],rax
   0x00000000001c8a46 <+278>:	mov    rax,QWORD PTR [rsp+0x4a40]
   0x00000000001c8a4e <+286>:	mov    QWORD PTR [rsp+0x4a98],rax
   0x00000000001c8a56 <+294>:	lea    rdi,[rsp+0x2148]
   0x00000000001c8a5e <+302>:	lea    rsi,[rsp+0x4a00]
   0x00000000001c8a66 <+310>:	call   0x4bd150 <target!>
   0x00000000001c8a6b <+315>:	mov    eax,DWORD PTR [rsp+0x2148]
   0x00000000001c8a72 <+322>:	mov    rcx,QWORD PTR [rsp+0x2150]
   0x00000000001c8a7a <+330>:	mov    rdx,QWORD PTR [rsp+0x2158]
   0x00000000001c8a82 <+338>:	mov    rsi,QWORD PTR [rsp+0x2160]
   0x00000000001c8a8a <+346>:	mov    QWORD PTR [rsp+0x49f8],rsi
   0x00000000001c8a92 <+354>:	mov    QWORD PTR [rsp+0x49f0],rdx
   0x00000000001c8a9a <+362>:	mov    QWORD PTR [rsp+0x49e8],rcx
   0x00000000001c8aa2 <+370>:	mov    DWORD PTR [rsp+0x49e0],eax
   0x00000000001c8aa9 <+377>:	mov    eax,DWORD PTR [rsp+0x49e0]
   0x00000000001c8ab0 <+384>:	mov    rcx,QWORD PTR [rsp+0x49e8]
   0x00000000001c8ab8 <+392>:	mov    rdx,QWORD PTR [rsp+0x49f0]
   0x00000000001c8ac0 <+400>:	mov    rsi,QWORD PTR [rsp+0x49f8]
   0x00000000001c8ac8 <+408>:	mov    QWORD PTR [rsp+0x4a90],rsi
   0x00000000001c8ad0 <+416>:	mov    QWORD PTR [rsp+0x4a88],rdx
   0x00000000001c8ad8 <+424>:	mov    QWORD PTR [rsp+0x4a80],rcx
   0x00000000001c8ae0 <+432>:	mov    DWORD PTR [rsp+0x4a78],eax
   0x00000000001c8ae7 <+439>:	mov    rax,QWORD PTR [rsp+0x4a00]

10	    when .responds_to?(:to_a)
   0x00000000001c8aef <+447>:	mov    QWORD PTR [rsp+0x4a70],rax
   0x00000000001c8af7 <+455>:	mov    rsi,QWORD PTR [rsp+0x4a70]
   0x00000000001c8aff <+463>:	lea    rdi,[rsp+0x2128]
   0x00000000001c8b07 <+471>:	call   0x3269a0 <shift>
   0x00000000001c8b0c <+476>:	mov    eax,DWORD PTR [rsp+0x2128]
   0x00000000001c8b13 <+483>:	mov    rcx,QWORD PTR [rsp+0x2130]
   0x00000000001c8b1b <+491>:	mov    rdx,QWORD PTR [rsp+0x2138]
   0x00000000001c8b23 <+499>:	mov    rsi,QWORD PTR [rsp+0x2140]
   0x00000000001c8b2b <+507>:	mov    QWORD PTR [rsp+0x49d8],rsi
   0x00000000001c8b33 <+515>:	mov    QWORD PTR [rsp+0x49d0],rdx
   0x00000000001c8b3b <+523>:	mov    QWORD PTR [rsp+0x49c8],rcx
   0x00000000001c8b43 <+531>:	mov    DWORD PTR [rsp+0x49c0],eax
   0x00000000001c8b4a <+538>:	mov    eax,DWORD PTR [rsp+0x49c0]
   0x00000000001c8b51 <+545>:	mov    rcx,QWORD PTR [rsp+0x49c8]
   0x00000000001c8b59 <+553>:	mov    rdx,QWORD PTR [rsp+0x49d0]
   0x00000000001c8b61 <+561>:	mov    rsi,QWORD PTR [rsp+0x49d8]
   0x00000000001c8b69 <+569>:	mov    QWORD PTR [rsp+0x4a68],rsi
   0x00000000001c8b71 <+577>:	mov    QWORD PTR [rsp+0x4a60],rdx
   0x00000000001c8b79 <+585>:	mov    QWORD PTR [rsp+0x4a58],rcx
   0x00000000001c8b81 <+593>:	mov    DWORD PTR [rsp+0x4a50],eax
   0x00000000001c8b88 <+600>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001c8b90 <+608>:	cmp    DWORD PTR [rax+0x4],0x0
   0x00000000001c8b94 <+612>:	jne    0x1c8bfd <->+717>
   0x00000000001c8b96 <+614>:	mov    edi,0x565

/usr/lib/crystal/enumerable.cr:
1620	    ary = [] of T
   0x00000000001c8b9b <+619>:	call   0x325ff0 <new>
   0x00000000001c8ba0 <+624>:	mov    QWORD PTR [rsp+0x4998],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
240	    case object = @raw
   0x00000000001c8ba8 <+632>:	mov    eax,DWORD PTR [rsp+0x4a78]
   0x00000000001c8baf <+639>:	mov    rcx,QWORD PTR [rsp+0x4a80]
   0x00000000001c8bb7 <+647>:	mov    rdx,QWORD PTR [rsp+0x4a88]
   0x00000000001c8bbf <+655>:	mov    rsi,QWORD PTR [rsp+0x4a90]
   0x00000000001c8bc7 <+663>:	mov    QWORD PTR [rsp+0x4948],rsi
   0x00000000001c8bcf <+671>:	mov    QWORD PTR [rsp+0x4940],rdx
   0x00000000001c8bd7 <+679>:	mov    QWORD PTR [rsp+0x4938],rcx
   0x00000000001c8bdf <+687>:	mov    DWORD PTR [rsp+0x4930],eax

241	    when Hash
   0x00000000001c8be6 <+694>:	mov    eax,0x47
   0x00000000001c8beb <+699>:	cmp    eax,DWORD PTR [rsp+0x4930]
   0x00000000001c8bf2 <+706>:	je     0x1c8cf0 <->+960>
   0x00000000001c8bf8 <+712>:	jmp    0x1c8d08 <->+984>

252	    else
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001c8bfd <+717>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001c8c05 <+725>:	mov    rax,QWORD PTR [rax+0x68]
   0x00000000001c8c09 <+729>:	mov    QWORD PTR [rsp+0x578],rax
   0x00000000001c8c11 <+737>:	mov    rsi,QWORD PTR [rsp+0x4a70]
   0x00000000001c8c19 <+745>:	lea    rdi,[rsp+0x2108]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001c8c21 <+753>:	call   0x3269a0 <shift>
   0x00000000001c8c26 <+758>:	mov    eax,DWORD PTR [rsp+0x2108]
   0x00000000001c8c2d <+765>:	mov    rcx,QWORD PTR [rsp+0x2110]
   0x00000000001c8c35 <+773>:	mov    rdx,QWORD PTR [rsp+0x2118]
   0x00000000001c8c3d <+781>:	mov    rsi,QWORD PTR [rsp+0x2120]
   0x00000000001c8c45 <+789>:	mov    QWORD PTR [rsp+0x3910],rsi
   0x00000000001c8c4d <+797>:	mov    QWORD PTR [rsp+0x3908],rdx
   0x00000000001c8c55 <+805>:	mov    QWORD PTR [rsp+0x3900],rcx
   0x00000000001c8c5d <+813>:	mov    DWORD PTR [rsp+0x38f8],eax
   0x00000000001c8c64 <+820>:	lea    rdi,[rsp+0x38f8]
   0x00000000001c8c6c <+828>:	call   0x34b290 <as_s>
   0x00000000001c8c71 <+833>:	mov    rdi,QWORD PTR [rsp+0x578]
   0x00000000001c8c79 <+841>:	mov    rsi,rax
   0x00000000001c8c7c <+844>:	call   0x509080 <[]>
   0x00000000001c8c81 <+849>:	mov    QWORD PTR [rsp+0x4a48],rax
   0x00000000001c8c89 <+857>:	mov    edi,0x565

/usr/lib/crystal/enumerable.cr:
1620	    ary = [] of T
   0x00000000001c8c8e <+862>:	call   0x325ff0 <new>
   0x00000000001c8c93 <+867>:	mov    QWORD PTR [rsp+0x3888],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
240	    case object = @raw
   0x00000000001c8c9b <+875>:	mov    eax,DWORD PTR [rsp+0x4a78]
   0x00000000001c8ca2 <+882>:	mov    rcx,QWORD PTR [rsp+0x4a80]
   0x00000000001c8caa <+890>:	mov    rdx,QWORD PTR [rsp+0x4a88]
   0x00000000001c8cb2 <+898>:	mov    rsi,QWORD PTR [rsp+0x4a90]
   0x00000000001c8cba <+906>:	mov    QWORD PTR [rsp+0x3838],rsi
   0x00000000001c8cc2 <+914>:	mov    QWORD PTR [rsp+0x3830],rdx
   0x00000000001c8cca <+922>:	mov    QWORD PTR [rsp+0x3828],rcx
   0x00000000001c8cd2 <+930>:	mov    DWORD PTR [rsp+0x3820],eax

241	    when Hash
   0x00000000001c8cd9 <+937>:	mov    eax,0x47
   0x00000000001c8cde <+942>:	cmp    eax,DWORD PTR [rsp+0x3820]
   0x00000000001c8ce5 <+949>:	je     0x1cdf25 <->+22005>
   0x00000000001c8ceb <+955>:	jmp    0x1cdf3d <->+22029>
   0x00000000001c8cf0 <+960>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001c8cf8 <+968>:	mov    QWORD PTR [rsp+0x570],rax

/usr/lib/crystal/hash.cr:
916	    return if @size == 0
   0x00000000001c8d00 <+976>:	cmp    DWORD PTR [rax+0x18],0x0
   0x00000000001c8d04 <+980>:	je     0x1c8d21 <->+1009>
   0x00000000001c8d06 <+982>:	jmp    0x1c8d23 <->+1011>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
243	    when Iterable(Value), ::Iterator(Value)
   0x00000000001c8d08 <+984>:	mov    edi,DWORD PTR [rsp+0x4930]
   0x00000000001c8d0f <+991>:	call   0x182a10 <~match<(Array(Crinja::Value) | Crinja::Tuple)>>
   0x00000000001c8d14 <+996>:	test   al,0x1
   0x00000000001c8d16 <+998>:	jne    0x1c9532 <->+3074>
   0x00000000001c8d1c <+1004>:	jmp    0x1c953d <->+3085>

/usr/lib/crystal/hash.cr:
916	    return if @size == 0
   0x00000000001c8d21 <+1009>:	jmp    0x1c8d4c <->+1052>
   0x00000000001c8d23 <+1011>:	mov    rdi,QWORD PTR [rsp+0x570]
   0x00000000001c8d2b <+1019>:	mov    eax,DWORD PTR [rdi+0x4]
   0x00000000001c8d2e <+1022>:	mov    DWORD PTR [rsp+0x568],eax

917	
918	    @first.upto(entries_size - 1) do |i|
   0x00000000001c8d35 <+1029>:	call   0x327930 <entries_size>
   0x00000000001c8d3a <+1034>:	dec    eax
   0x00000000001c8d3c <+1036>:	mov    DWORD PTR [rsp+0x56c],eax
   0x00000000001c8d43 <+1043>:	seto   al
   0x00000000001c8d46 <+1046>:	test   al,0x1
   0x00000000001c8d48 <+1048>:	jne    0x1c8d51 <->+1057>
   0x00000000001c8d4a <+1050>:	jmp    0x1c8d56 <->+1062>

/usr/lib/crystal/int.cr:
582	      x += 1
   0x00000000001c8d4c <+1052>:	jmp    0x1c94ed <->+3005>

/usr/lib/crystal/hash.cr:
918	    @first.upto(entries_size - 1) do |i|
   0x00000000001c8d51 <+1057>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001c8d56 <+1062>:	mov    eax,DWORD PTR [rsp+0x568]
   0x00000000001c8d5d <+1069>:	mov    ecx,DWORD PTR [rsp+0x56c]
   0x00000000001c8d64 <+1076>:	mov    DWORD PTR [rsp+0x4854],ecx

/usr/lib/crystal/int.cr:
577	    return unless self <= to
   0x00000000001c8d6b <+1083>:	cmp    eax,DWORD PTR [rsp+0x4854]
   0x00000000001c8d72 <+1090>:	jg     0x1c8d76 <->+1094>
   0x00000000001c8d74 <+1092>:	jmp    0x1c8d78 <->+1096>
   0x00000000001c8d76 <+1094>:	jmp    0x1c8d88 <->+1112>
   0x00000000001c8d78 <+1096>:	mov    eax,DWORD PTR [rsp+0x568]

578	    x = self
   0x00000000001c8d7f <+1103>:	mov    DWORD PTR [rsp+0x4850],eax
   0x00000000001c8d86 <+1110>:	jmp    0x1c8d8a <->+1114>

582	      x += 1
   0x00000000001c8d88 <+1112>:	jmp    0x1c8d4c <->+1052>
   0x00000000001c8d8a <+1114>:	mov    rsi,QWORD PTR [rsp+0x570]

578	    x = self
   0x00000000001c8d92 <+1122>:	mov    eax,DWORD PTR [rsp+0x4850]
   0x00000000001c8d99 <+1129>:	mov    DWORD PTR [rsp+0x48a0],eax
   0x00000000001c8da0 <+1136>:	mov    edx,DWORD PTR [rsp+0x48a0]
   0x00000000001c8da7 <+1143>:	lea    rdi,[rsp+0x678]

/usr/lib/crystal/hash.cr:
919	      entry = get_entry(i)
   0x00000000001c8daf <+1151>:	call   0x327950 <get_entry>
   0x00000000001c8db4 <+1156>:	mov    eax,DWORD PTR [rsp+0x678]
   0x00000000001c8dbb <+1163>:	mov    ecx,DWORD PTR [rsp+0x680]
   0x00000000001c8dc2 <+1170>:	mov    rdx,QWORD PTR [rsp+0x688]
   0x00000000001c8dca <+1178>:	mov    rsi,QWORD PTR [rsp+0x690]
   0x00000000001c8dd2 <+1186>:	mov    rdi,QWORD PTR [rsp+0x698]
   0x00000000001c8dda <+1194>:	mov    r8d,DWORD PTR [rsp+0x6a0]
   0x00000000001c8de2 <+1202>:	mov    r9,QWORD PTR [rsp+0x6a8]
   0x00000000001c8dea <+1210>:	mov    r10,QWORD PTR [rsp+0x6b0]
   0x00000000001c8df2 <+1218>:	mov    r11,QWORD PTR [rsp+0x6b8]
   0x00000000001c8dfa <+1226>:	mov    QWORD PTR [rsp+0x4848],r11
   0x00000000001c8e02 <+1234>:	mov    QWORD PTR [rsp+0x4840],r10
   0x00000000001c8e0a <+1242>:	mov    QWORD PTR [rsp+0x4838],r9
   0x00000000001c8e12 <+1250>:	mov    DWORD PTR [rsp+0x4830],r8d
   0x00000000001c8e1a <+1258>:	mov    QWORD PTR [rsp+0x4828],rdi
   0x00000000001c8e22 <+1266>:	mov    QWORD PTR [rsp+0x4820],rsi
   0x00000000001c8e2a <+1274>:	mov    QWORD PTR [rsp+0x4818],rdx
   0x00000000001c8e32 <+1282>:	mov    DWORD PTR [rsp+0x4810],ecx
   0x00000000001c8e39 <+1289>:	mov    DWORD PTR [rsp+0x4808],eax
   0x00000000001c8e40 <+1296>:	mov    eax,DWORD PTR [rsp+0x4808]
   0x00000000001c8e47 <+1303>:	mov    ecx,DWORD PTR [rsp+0x4810]
   0x00000000001c8e4e <+1310>:	mov    rdx,QWORD PTR [rsp+0x4818]
   0x00000000001c8e56 <+1318>:	mov    rsi,QWORD PTR [rsp+0x4820]
   0x00000000001c8e5e <+1326>:	mov    rdi,QWORD PTR [rsp+0x4828]
   0x00000000001c8e66 <+1334>:	mov    r8d,DWORD PTR [rsp+0x4830]
   0x00000000001c8e6e <+1342>:	mov    r9,QWORD PTR [rsp+0x4838]
   0x00000000001c8e76 <+1350>:	mov    r10,QWORD PTR [rsp+0x4840]
   0x00000000001c8e7e <+1358>:	mov    r11,QWORD PTR [rsp+0x4848]
   0x00000000001c8e86 <+1366>:	mov    QWORD PTR [rsp+0x4898],r11
   0x00000000001c8e8e <+1374>:	mov    QWORD PTR [rsp+0x4890],r10
   0x00000000001c8e96 <+1382>:	mov    QWORD PTR [rsp+0x4888],r9
   0x00000000001c8e9e <+1390>:	mov    DWORD PTR [rsp+0x4880],r8d
   0x00000000001c8ea6 <+1398>:	mov    QWORD PTR [rsp+0x4878],rdi
   0x00000000001c8eae <+1406>:	mov    QWORD PTR [rsp+0x4870],rsi
   0x00000000001c8eb6 <+1414>:	mov    QWORD PTR [rsp+0x4868],rdx
   0x00000000001c8ebe <+1422>:	mov    DWORD PTR [rsp+0x4860],ecx
   0x00000000001c8ec5 <+1429>:	mov    DWORD PTR [rsp+0x4858],eax

920	      yield entry, i unless entry.deleted?
   0x00000000001c8ecc <+1436>:	lea    rdi,[rsp+0x4858]
   0x00000000001c8ed4 <+1444>:	call   0x333c70 <deleted?>
   0x00000000001c8ed9 <+1449>:	test   al,0x1
   0x00000000001c8edb <+1451>:	jne    0x1c8edf <->+1455>
   0x00000000001c8edd <+1453>:	jmp    0x1c8ee4 <->+1460>
   0x00000000001c8edf <+1455>:	jmp    0x1c9176 <->+2118>
   0x00000000001c8ee4 <+1460>:	mov    eax,DWORD PTR [rsp+0x48a0]
   0x00000000001c8eeb <+1467>:	mov    ecx,DWORD PTR [rsp+0x4858]
   0x00000000001c8ef2 <+1474>:	mov    edx,DWORD PTR [rsp+0x4860]
   0x00000000001c8ef9 <+1481>:	mov    rsi,QWORD PTR [rsp+0x4868]
   0x00000000001c8f01 <+1489>:	mov    rdi,QWORD PTR [rsp+0x4870]
   0x00000000001c8f09 <+1497>:	mov    r8,QWORD PTR [rsp+0x4878]
   0x00000000001c8f11 <+1505>:	mov    r9d,DWORD PTR [rsp+0x4880]
   0x00000000001c8f19 <+1513>:	mov    r10,QWORD PTR [rsp+0x4888]
   0x00000000001c8f21 <+1521>:	mov    r11,QWORD PTR [rsp+0x4890]
   0x00000000001c8f29 <+1529>:	mov    rbx,QWORD PTR [rsp+0x4898]
   0x00000000001c8f31 <+1537>:	mov    QWORD PTR [rsp+0x48e8],rbx
   0x00000000001c8f39 <+1545>:	mov    QWORD PTR [rsp+0x48e0],r11
   0x00000000001c8f41 <+1553>:	mov    QWORD PTR [rsp+0x48d8],r10
   0x00000000001c8f49 <+1561>:	mov    DWORD PTR [rsp+0x48d0],r9d
   0x00000000001c8f51 <+1569>:	mov    QWORD PTR [rsp+0x48c8],r8
   0x00000000001c8f59 <+1577>:	mov    QWORD PTR [rsp+0x48c0],rdi
   0x00000000001c8f61 <+1585>:	mov    QWORD PTR [rsp+0x48b8],rsi
   0x00000000001c8f69 <+1593>:	mov    DWORD PTR [rsp+0x48b0],edx
   0x00000000001c8f70 <+1600>:	mov    DWORD PTR [rsp+0x48a8],ecx
   0x00000000001c8f77 <+1607>:	mov    DWORD PTR [rsp+0x48a4],eax
   0x00000000001c8f7e <+1614>:	mov    eax,DWORD PTR [rsp+0x48b0]
   0x00000000001c8f85 <+1621>:	mov    rcx,QWORD PTR [rsp+0x48b8]
   0x00000000001c8f8d <+1629>:	mov    rdx,QWORD PTR [rsp+0x48c0]
   0x00000000001c8f95 <+1637>:	mov    rsi,QWORD PTR [rsp+0x48c8]
   0x00000000001c8f9d <+1645>:	mov    QWORD PTR [rsp+0x47e0],rsi
   0x00000000001c8fa5 <+1653>:	mov    QWORD PTR [rsp+0x47d8],rdx
   0x00000000001c8fad <+1661>:	mov    QWORD PTR [rsp+0x47d0],rcx
   0x00000000001c8fb5 <+1669>:	mov    DWORD PTR [rsp+0x47c8],eax
   0x00000000001c8fbc <+1676>:	mov    eax,DWORD PTR [rsp+0x48d0]
   0x00000000001c8fc3 <+1683>:	mov    rcx,QWORD PTR [rsp+0x48d8]
   0x00000000001c8fcb <+1691>:	mov    rdx,QWORD PTR [rsp+0x48e0]
   0x00000000001c8fd3 <+1699>:	mov    rsi,QWORD PTR [rsp+0x48e8]
   0x00000000001c8fdb <+1707>:	mov    QWORD PTR [rsp+0x4800],rsi
   0x00000000001c8fe3 <+1715>:	mov    QWORD PTR [rsp+0x47f8],rdx
   0x00000000001c8feb <+1723>:	mov    QWORD PTR [rsp+0x47f0],rcx
   0x00000000001c8ff3 <+1731>:	mov    DWORD PTR [rsp+0x47e8],eax
   0x00000000001c8ffa <+1738>:	mov    eax,DWORD PTR [rsp+0x47c8]
   0x00000000001c9001 <+1745>:	mov    rcx,QWORD PTR [rsp+0x47d0]
   0x00000000001c9009 <+1753>:	mov    rdx,QWORD PTR [rsp+0x47d8]
   0x00000000001c9011 <+1761>:	mov    rsi,QWORD PTR [rsp+0x47e0]
   0x00000000001c9019 <+1769>:	mov    QWORD PTR [rsp+0x4928],rsi
   0x00000000001c9021 <+1777>:	mov    QWORD PTR [rsp+0x4920],rdx
   0x00000000001c9029 <+1785>:	mov    QWORD PTR [rsp+0x4918],rcx
   0x00000000001c9031 <+1793>:	mov    DWORD PTR [rsp+0x4910],eax
   0x00000000001c9038 <+1800>:	mov    eax,DWORD PTR [rsp+0x47e8]
   0x00000000001c903f <+1807>:	mov    rcx,QWORD PTR [rsp+0x47f0]
   0x00000000001c9047 <+1815>:	mov    rdx,QWORD PTR [rsp+0x47f8]
   0x00000000001c904f <+1823>:	mov    rsi,QWORD PTR [rsp+0x4800]
   0x00000000001c9057 <+1831>:	mov    QWORD PTR [rsp+0x4908],rsi
   0x00000000001c905f <+1839>:	mov    QWORD PTR [rsp+0x4900],rdx
   0x00000000001c9067 <+1847>:	mov    QWORD PTR [rsp+0x48f8],rcx
   0x00000000001c906f <+1855>:	mov    DWORD PTR [rsp+0x48f0],eax
   0x00000000001c9076 <+1862>:	mov    eax,DWORD PTR [rsp+0x4910]
   0x00000000001c907d <+1869>:	mov    rcx,QWORD PTR [rsp+0x4918]
   0x00000000001c9085 <+1877>:	mov    rdx,QWORD PTR [rsp+0x4920]
   0x00000000001c908d <+1885>:	mov    rsi,QWORD PTR [rsp+0x4928]
   0x00000000001c9095 <+1893>:	mov    QWORD PTR [rsp+0x47a0],rsi
   0x00000000001c909d <+1901>:	mov    QWORD PTR [rsp+0x4798],rdx
   0x00000000001c90a5 <+1909>:	mov    QWORD PTR [rsp+0x4790],rcx
   0x00000000001c90ad <+1917>:	mov    DWORD PTR [rsp+0x4788],eax
   0x00000000001c90b4 <+1924>:	mov    eax,DWORD PTR [rsp+0x48f0]
   0x00000000001c90bb <+1931>:	mov    rcx,QWORD PTR [rsp+0x48f8]
   0x00000000001c90c3 <+1939>:	mov    rdx,QWORD PTR [rsp+0x4900]
   0x00000000001c90cb <+1947>:	mov    rsi,QWORD PTR [rsp+0x4908]
   0x00000000001c90d3 <+1955>:	mov    QWORD PTR [rsp+0x47c0],rsi
   0x00000000001c90db <+1963>:	mov    QWORD PTR [rsp+0x47b8],rdx
   0x00000000001c90e3 <+1971>:	mov    QWORD PTR [rsp+0x47b0],rcx
   0x00000000001c90eb <+1979>:	mov    DWORD PTR [rsp+0x47a8],eax
   0x00000000001c90f2 <+1986>:	mov    r10,QWORD PTR [rsp+0x47c0]
   0x00000000001c90fa <+1994>:	mov    r11,QWORD PTR [rsp+0x47b8]
   0x00000000001c9102 <+2002>:	mov    r9,QWORD PTR [rsp+0x47b0]
   0x00000000001c910a <+2010>:	mov    r8d,DWORD PTR [rsp+0x47a8]
   0x00000000001c9112 <+2018>:	mov    rcx,QWORD PTR [rsp+0x47a0]
   0x00000000001c911a <+2026>:	mov    rdx,QWORD PTR [rsp+0x4798]
   0x00000000001c9122 <+2034>:	mov    rsi,QWORD PTR [rsp+0x4790]
   0x00000000001c912a <+2042>:	mov    edi,DWORD PTR [rsp+0x4788]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
242	      object.each { |key, value| yield Crinja::Tuple.from({key, value}) }
   0x00000000001c9131 <+2049>:	mov    rax,rsp
   0x00000000001c9134 <+2052>:	mov    QWORD PTR [rax],r11
   0x00000000001c9137 <+2055>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001c913b <+2059>:	call   0x3348b0 <from>
   0x00000000001c9140 <+2064>:	mov    DWORD PTR [rsp+0x4950],0x12a
   0x00000000001c914b <+2075>:	mov    QWORD PTR [rsp+0x4958],rax
   0x00000000001c9153 <+2083>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001c915a <+2090>:	mov    DWORD PTR [rsp+0x564],ecx
   0x00000000001c9161 <+2097>:	mov    eax,0x4ed
   0x00000000001c9166 <+2102>:	cmp    eax,ecx
   0x00000000001c9168 <+2104>:	sete   al
   0x00000000001c916b <+2107>:	and    al,0x1
   0x00000000001c916d <+2109>:	test   al,0x1
   0x00000000001c916f <+2111>:	jne    0x1c918f <->+2143>
   0x00000000001c9171 <+2113>:	jmp    0x1c920b <->+2267>

/usr/lib/crystal/int.cr:
581	      return if x == to
   0x00000000001c9176 <+2118>:	mov    eax,DWORD PTR [rsp+0x4850]
   0x00000000001c917d <+2125>:	cmp    eax,DWORD PTR [rsp+0x4854]
   0x00000000001c9184 <+2132>:	je     0x1c94b7 <->+2951>
   0x00000000001c918a <+2138>:	jmp    0x1c94bc <->+2956>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
242	      object.each { |key, value| yield Crinja::Tuple.from({key, value}) }
   0x00000000001c918f <+2143>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001c9197 <+2151>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001c919f <+2159>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001c91a7 <+2167>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001c91ae <+2174>:	lea    rdi,[rsp+0x618]

254	    end
255	  end
256	
257	  # Assumes the underlying value is an `Iterable` and yields each
258	  # of the elements or key/values, always as `Value`.
259	  def each
260	    raw_each do |raw|
261	      yield Value.new raw
   0x00000000001c91b6 <+2182>:	call   0x339d20 <new>
   0x00000000001c91bb <+2187>:	mov    eax,DWORD PTR [rsp+0x618]
   0x00000000001c91c2 <+2194>:	mov    rcx,QWORD PTR [rsp+0x620]
   0x00000000001c91ca <+2202>:	mov    rdx,QWORD PTR [rsp+0x628]
   0x00000000001c91d2 <+2210>:	mov    rsi,QWORD PTR [rsp+0x630]
   0x00000000001c91da <+2218>:	mov    QWORD PTR [rsp+0x4780],rsi
   0x00000000001c91e2 <+2226>:	mov    QWORD PTR [rsp+0x4778],rdx
   0x00000000001c91ea <+2234>:	mov    QWORD PTR [rsp+0x4770],rcx
   0x00000000001c91f2 <+2242>:	mov    DWORD PTR [rsp+0x4768],eax
   0x00000000001c91f9 <+2249>:	lea    rax,[rsp+0x4768]
   0x00000000001c9201 <+2257>:	mov    QWORD PTR [rsp+0x558],rax
   0x00000000001c9209 <+2265>:	jmp    0x1c9226 <->+2294>
   0x00000000001c920b <+2267>:	mov    edi,DWORD PTR [rsp+0x564]
   0x00000000001c9212 <+2274>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001c9217 <+2279>:	and    al,0x1
   0x00000000001c9219 <+2281>:	test   al,0x1
   0x00000000001c921b <+2283>:	jne    0x1c934b <->+2587>
   0x00000000001c9221 <+2289>:	jmp    0x1c93ca <->+2714>
   0x00000000001c9226 <+2294>:	mov    rsi,QWORD PTR [rsp+0x558]
   0x00000000001c922e <+2302>:	mov    eax,DWORD PTR [rsi]
   0x00000000001c9230 <+2304>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001c9234 <+2308>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001c9238 <+2312>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001c923c <+2316>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001c9244 <+2324>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001c924c <+2332>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001c9254 <+2340>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c925b <+2347>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001c9262 <+2354>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001c926a <+2362>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001c9272 <+2370>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001c927a <+2378>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001c9282 <+2386>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001c928a <+2394>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001c9292 <+2402>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001c9299 <+2409>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001c92a1 <+2417>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001c92a9 <+2425>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001c92b1 <+2433>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001c92b8 <+2440>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001c92c0 <+2448>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001c92c8 <+2456>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001c92d0 <+2464>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001c92d8 <+2472>:	mov    rax,rsp
   0x00000000001c92db <+2475>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001c92df <+2479>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001c92e3 <+2483>:	mov    QWORD PTR [rax],rdi
   0x00000000001c92e6 <+2486>:	lea    rdi,[rsp+0x5f8]
   0x00000000001c92ee <+2494>:	call   0x511190 <resolve_getattr>
   0x00000000001c92f3 <+2499>:	mov    eax,DWORD PTR [rsp+0x5f8]
   0x00000000001c92fa <+2506>:	mov    rcx,QWORD PTR [rsp+0x600]
   0x00000000001c9302 <+2514>:	mov    rdx,QWORD PTR [rsp+0x608]
   0x00000000001c930a <+2522>:	mov    rsi,QWORD PTR [rsp+0x610]
   0x00000000001c9312 <+2530>:	mov    QWORD PTR [rsp+0x4720],rsi
   0x00000000001c931a <+2538>:	mov    QWORD PTR [rsp+0x4718],rdx
   0x00000000001c9322 <+2546>:	mov    QWORD PTR [rsp+0x4710],rcx
   0x00000000001c932a <+2554>:	mov    DWORD PTR [rsp+0x4708],eax
   0x00000000001c9331 <+2561>:	lea    rdi,[rsp+0x4708]
   0x00000000001c9339 <+2569>:	call   0x343280 <truthy?>
   0x00000000001c933e <+2574>:	test   al,0x1
   0x00000000001c9340 <+2576>:	jne    0x1c9468 <->+2872>
   0x00000000001c9346 <+2582>:	jmp    0x1c949e <->+2926>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001c934b <+2587>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001c9353 <+2595>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001c935b <+2603>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001c9363 <+2611>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001c936a <+2618>:	lea    rdi,[rsp+0x638]
   0x00000000001c9372 <+2626>:	call   0x340b10 <new>
   0x00000000001c9377 <+2631>:	mov    eax,DWORD PTR [rsp+0x638]
   0x00000000001c937e <+2638>:	mov    rcx,QWORD PTR [rsp+0x640]
   0x00000000001c9386 <+2646>:	mov    rdx,QWORD PTR [rsp+0x648]
   0x00000000001c938e <+2654>:	mov    rsi,QWORD PTR [rsp+0x650]
   0x00000000001c9396 <+2662>:	mov    QWORD PTR [rsp+0x4760],rsi
   0x00000000001c939e <+2670>:	mov    QWORD PTR [rsp+0x4758],rdx
   0x00000000001c93a6 <+2678>:	mov    QWORD PTR [rsp+0x4750],rcx
   0x00000000001c93ae <+2686>:	mov    DWORD PTR [rsp+0x4748],eax
   0x00000000001c93b5 <+2693>:	lea    rax,[rsp+0x4748]
   0x00000000001c93bd <+2701>:	mov    QWORD PTR [rsp+0x558],rax
   0x00000000001c93c5 <+2709>:	jmp    0x1c9226 <->+2294>
   0x00000000001c93ca <+2714>:	mov    edi,DWORD PTR [rsp+0x564]
   0x00000000001c93d1 <+2721>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001c93d6 <+2726>:	and    al,0x1
   0x00000000001c93d8 <+2728>:	test   al,0x1
   0x00000000001c93da <+2730>:	jne    0x1c93e1 <->+2737>
   0x00000000001c93dc <+2732>:	jmp    0x1c9468 <->+2872>
   0x00000000001c93e1 <+2737>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001c93e9 <+2745>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001c93f1 <+2753>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001c93f9 <+2761>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001c9401 <+2769>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001c9408 <+2776>:	lea    rdi,[rsp+0x658]
   0x00000000001c9410 <+2784>:	call   0x340cb0 <new>
   0x00000000001c9415 <+2789>:	mov    eax,DWORD PTR [rsp+0x658]
   0x00000000001c941c <+2796>:	mov    rcx,QWORD PTR [rsp+0x660]
   0x00000000001c9424 <+2804>:	mov    rdx,QWORD PTR [rsp+0x668]
   0x00000000001c942c <+2812>:	mov    rsi,QWORD PTR [rsp+0x670]
   0x00000000001c9434 <+2820>:	mov    QWORD PTR [rsp+0x4740],rsi
   0x00000000001c943c <+2828>:	mov    QWORD PTR [rsp+0x4738],rdx
   0x00000000001c9444 <+2836>:	mov    QWORD PTR [rsp+0x4730],rcx
   0x00000000001c944c <+2844>:	mov    DWORD PTR [rsp+0x4728],eax
   0x00000000001c9453 <+2851>:	lea    rax,[rsp+0x4728]
   0x00000000001c945b <+2859>:	mov    QWORD PTR [rsp+0x558],rax
   0x00000000001c9463 <+2867>:	jmp    0x1c9226 <->+2294>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001c9468 <+2872>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001c9470 <+2880>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001c9478 <+2888>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001c9480 <+2896>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001c9488 <+2904>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c948f <+2911>:	call   0x326080 <<<>
   0x00000000001c9494 <+2916>:	mov    QWORD PTR [rsp+0x550],rax
   0x00000000001c949c <+2924>:	jmp    0x1c94aa <->+2938>
   0x00000000001c949e <+2926>:	xor    eax,eax
   0x00000000001c94a0 <+2928>:	mov    QWORD PTR [rsp+0x550],rax
   0x00000000001c94a8 <+2936>:	jmp    0x1c94aa <->+2938>
   0x00000000001c94aa <+2938>:	mov    rax,QWORD PTR [rsp+0x550]
   0x00000000001c94b2 <+2946>:	jmp    0x1c9176 <->+2118>

/usr/lib/crystal/int.cr:
581	      return if x == to
   0x00000000001c94b7 <+2951>:	jmp    0x1c8d88 <->+1112>
   0x00000000001c94bc <+2956>:	mov    eax,DWORD PTR [rsp+0x4850]
   0x00000000001c94c3 <+2963>:	inc    eax
   0x00000000001c94c5 <+2965>:	mov    DWORD PTR [rsp+0x54c],eax
   0x00000000001c94cc <+2972>:	seto   al
   0x00000000001c94cf <+2975>:	test   al,0x1
   0x00000000001c94d1 <+2977>:	jne    0x1c94d5 <->+2981>
   0x00000000001c94d3 <+2979>:	jmp    0x1c94da <->+2986>

582	      x += 1
   0x00000000001c94d5 <+2981>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001c94da <+2986>:	mov    eax,DWORD PTR [rsp+0x54c]
   0x00000000001c94e1 <+2993>:	mov    DWORD PTR [rsp+0x4850],eax
   0x00000000001c94e8 <+3000>:	jmp    0x1c8d8a <->+1114>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001c94ed <+3005>:	mov    rax,QWORD PTR [rsp+0x4998]
   0x00000000001c94f5 <+3013>:	mov    QWORD PTR [rsp+0x540],rax
   0x00000000001c94fd <+3021>:	jmp    0x1cde88 <->+21848>

243	    when Iterable(Value), ::Iterator(Value)
   0x00000000001c9502 <+3026>:	mov    ecx,DWORD PTR [rsp+0x4930]
   0x00000000001c9509 <+3033>:	mov    DWORD PTR [rsp+0x53c],ecx
   0x00000000001c9510 <+3040>:	mov    eax,0x3
   0x00000000001c9515 <+3045>:	cmp    eax,ecx
   0x00000000001c9517 <+3047>:	je     0x1c955d <->+3117>
   0x00000000001c9519 <+3049>:	jmp    0x1c957a <->+3146>

245	    when Iterable, ::Iterator
   0x00000000001c951b <+3051>:	mov    eax,0x12a
   0x00000000001c9520 <+3056>:	cmp    eax,DWORD PTR [rsp+0x4930]
   0x00000000001c9527 <+3063>:	je     0x1cc7f8 <->+16072>
   0x00000000001c952d <+3069>:	jmp    0x1cc803 <->+16083>

243	    when Iterable(Value), ::Iterator(Value)
   0x00000000001c9532 <+3074>:	mov    al,0x1
   0x00000000001c9534 <+3076>:	mov    BYTE PTR [rsp+0x53b],al
   0x00000000001c953b <+3083>:	jmp    0x1c9550 <->+3104>
   0x00000000001c953d <+3085>:	mov    edi,DWORD PTR [rsp+0x4930]
   0x00000000001c9544 <+3092>:	call   0x182990 <~match<(Crinja::Function::Cycler | Iterator(Crinja::Value))>>
   0x00000000001c9549 <+3097>:	mov    BYTE PTR [rsp+0x53b],al
   0x00000000001c9550 <+3104>:	mov    al,BYTE PTR [rsp+0x53b]
   0x00000000001c9557 <+3111>:	test   al,0x1
   0x00000000001c9559 <+3113>:	jne    0x1c9502 <->+3026>
   0x00000000001c955b <+3115>:	jmp    0x1c951b <->+3051>
   0x00000000001c955d <+3117>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001c9565 <+3125>:	mov    QWORD PTR [rsp+0x530],rax

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001c956d <+3133>:	mov    DWORD PTR [rsp+0x46e0],0x0
   0x00000000001c9578 <+3144>:	jmp    0x1c9593 <->+3171>
   0x00000000001c957a <+3146>:	mov    ecx,DWORD PTR [rsp+0x53c]

575	      yield i
576	      i += 1
   0x00000000001c9581 <+3153>:	mov    eax,0x193
   0x00000000001c9586 <+3158>:	cmp    eax,ecx
   0x00000000001c9588 <+3160>:	je     0x1c99f6 <->+4294>
   0x00000000001c958e <+3166>:	jmp    0x1c9a08 <->+4312>
   0x00000000001c9593 <+3171>:	mov    rcx,QWORD PTR [rsp+0x530]

574	    while i < size
   0x00000000001c959b <+3179>:	mov    eax,DWORD PTR [rsp+0x46e0]
   0x00000000001c95a2 <+3186>:	cmp    eax,DWORD PTR [rcx+0x4]
   0x00000000001c95a5 <+3189>:	jge    0x1c96b2 <->+3458>
   0x00000000001c95ab <+3195>:	mov    rsi,QWORD PTR [rsp+0x530]
   0x00000000001c95b3 <+3203>:	mov    eax,DWORD PTR [rsp+0x46e0]
   0x00000000001c95ba <+3210>:	mov    DWORD PTR [rsp+0x46e4],eax
   0x00000000001c95c1 <+3217>:	mov    edx,DWORD PTR [rsp+0x46e4]
   0x00000000001c95c8 <+3224>:	lea    rdi,[rsp+0x740]

495	      yield unsafe_fetch(i)
   0x00000000001c95d0 <+3232>:	call   0x324f10 <unsafe_fetch>
   0x00000000001c95d5 <+3237>:	mov    eax,DWORD PTR [rsp+0x740]
   0x00000000001c95dc <+3244>:	mov    rcx,QWORD PTR [rsp+0x748]
   0x00000000001c95e4 <+3252>:	mov    rdx,QWORD PTR [rsp+0x750]
   0x00000000001c95ec <+3260>:	mov    rsi,QWORD PTR [rsp+0x758]
   0x00000000001c95f4 <+3268>:	mov    QWORD PTR [rsp+0x46d8],rsi
   0x00000000001c95fc <+3276>:	mov    QWORD PTR [rsp+0x46d0],rdx
   0x00000000001c9604 <+3284>:	mov    QWORD PTR [rsp+0x46c8],rcx
   0x00000000001c960c <+3292>:	mov    DWORD PTR [rsp+0x46c0],eax
   0x00000000001c9613 <+3299>:	mov    eax,DWORD PTR [rsp+0x46c0]
   0x00000000001c961a <+3306>:	mov    rcx,QWORD PTR [rsp+0x46c8]
   0x00000000001c9622 <+3314>:	mov    rdx,QWORD PTR [rsp+0x46d0]
   0x00000000001c962a <+3322>:	mov    rsi,QWORD PTR [rsp+0x46d8]
   0x00000000001c9632 <+3330>:	mov    QWORD PTR [rsp+0x4700],rsi
   0x00000000001c963a <+3338>:	mov    QWORD PTR [rsp+0x46f8],rdx
   0x00000000001c9642 <+3346>:	mov    QWORD PTR [rsp+0x46f0],rcx
   0x00000000001c964a <+3354>:	mov    DWORD PTR [rsp+0x46e8],eax
   0x00000000001c9651 <+3361>:	mov    eax,DWORD PTR [rsp+0x46e8]
   0x00000000001c9658 <+3368>:	mov    rcx,QWORD PTR [rsp+0x46f0]
   0x00000000001c9660 <+3376>:	mov    rdx,QWORD PTR [rsp+0x46f8]
   0x00000000001c9668 <+3384>:	mov    rsi,QWORD PTR [rsp+0x4700]
   0x00000000001c9670 <+3392>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001c9678 <+3400>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001c9680 <+3408>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001c9688 <+3416>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001c968f <+3423>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001c9696 <+3430>:	mov    DWORD PTR [rsp+0x52c],ecx
   0x00000000001c969d <+3437>:	mov    eax,0x4ed
   0x00000000001c96a2 <+3442>:	cmp    eax,ecx
   0x00000000001c96a4 <+3444>:	sete   al
   0x00000000001c96a7 <+3447>:	and    al,0x1
   0x00000000001c96a9 <+3449>:	test   al,0x1
   0x00000000001c96ab <+3451>:	jne    0x1c96b7 <->+3463>
   0x00000000001c96ad <+3453>:	jmp    0x1c9733 <->+3587>

575	      yield i
576	      i += 1
   0x00000000001c96b2 <+3458>:	jmp    0x1c99f1 <->+4289>

495	      yield unsafe_fetch(i)
   0x00000000001c96b7 <+3463>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001c96bf <+3471>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001c96c7 <+3479>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001c96cf <+3487>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001c96d6 <+3494>:	lea    rdi,[rsp+0x6e0]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001c96de <+3502>:	call   0x339d20 <new>
   0x00000000001c96e3 <+3507>:	mov    eax,DWORD PTR [rsp+0x6e0]
   0x00000000001c96ea <+3514>:	mov    rcx,QWORD PTR [rsp+0x6e8]
   0x00000000001c96f2 <+3522>:	mov    rdx,QWORD PTR [rsp+0x6f0]
   0x00000000001c96fa <+3530>:	mov    rsi,QWORD PTR [rsp+0x6f8]
   0x00000000001c9702 <+3538>:	mov    QWORD PTR [rsp+0x46b8],rsi
   0x00000000001c970a <+3546>:	mov    QWORD PTR [rsp+0x46b0],rdx
   0x00000000001c9712 <+3554>:	mov    QWORD PTR [rsp+0x46a8],rcx
   0x00000000001c971a <+3562>:	mov    DWORD PTR [rsp+0x46a0],eax
   0x00000000001c9721 <+3569>:	lea    rax,[rsp+0x46a0]
   0x00000000001c9729 <+3577>:	mov    QWORD PTR [rsp+0x520],rax
   0x00000000001c9731 <+3585>:	jmp    0x1c974e <->+3614>
   0x00000000001c9733 <+3587>:	mov    edi,DWORD PTR [rsp+0x52c]
   0x00000000001c973a <+3594>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001c973f <+3599>:	and    al,0x1
   0x00000000001c9741 <+3601>:	test   al,0x1
   0x00000000001c9743 <+3603>:	jne    0x1c9873 <->+3907>
   0x00000000001c9749 <+3609>:	jmp    0x1c98f2 <->+4034>
   0x00000000001c974e <+3614>:	mov    rsi,QWORD PTR [rsp+0x520]
   0x00000000001c9756 <+3622>:	mov    eax,DWORD PTR [rsi]
   0x00000000001c9758 <+3624>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001c975c <+3628>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001c9760 <+3632>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001c9764 <+3636>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001c976c <+3644>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001c9774 <+3652>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001c977c <+3660>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c9783 <+3667>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001c978a <+3674>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001c9792 <+3682>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001c979a <+3690>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001c97a2 <+3698>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001c97aa <+3706>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001c97b2 <+3714>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001c97ba <+3722>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001c97c1 <+3729>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001c97c9 <+3737>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001c97d1 <+3745>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001c97d9 <+3753>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001c97e0 <+3760>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001c97e8 <+3768>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001c97f0 <+3776>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001c97f8 <+3784>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001c9800 <+3792>:	mov    rax,rsp
   0x00000000001c9803 <+3795>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001c9807 <+3799>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001c980b <+3803>:	mov    QWORD PTR [rax],rdi
   0x00000000001c980e <+3806>:	lea    rdi,[rsp+0x6c0]
   0x00000000001c9816 <+3814>:	call   0x511190 <resolve_getattr>
   0x00000000001c981b <+3819>:	mov    eax,DWORD PTR [rsp+0x6c0]
   0x00000000001c9822 <+3826>:	mov    rcx,QWORD PTR [rsp+0x6c8]
   0x00000000001c982a <+3834>:	mov    rdx,QWORD PTR [rsp+0x6d0]
   0x00000000001c9832 <+3842>:	mov    rsi,QWORD PTR [rsp+0x6d8]
   0x00000000001c983a <+3850>:	mov    QWORD PTR [rsp+0x4658],rsi
   0x00000000001c9842 <+3858>:	mov    QWORD PTR [rsp+0x4650],rdx
   0x00000000001c984a <+3866>:	mov    QWORD PTR [rsp+0x4648],rcx
   0x00000000001c9852 <+3874>:	mov    DWORD PTR [rsp+0x4640],eax
   0x00000000001c9859 <+3881>:	lea    rdi,[rsp+0x4640]
   0x00000000001c9861 <+3889>:	call   0x343280 <truthy?>
   0x00000000001c9866 <+3894>:	test   al,0x1
   0x00000000001c9868 <+3896>:	jne    0x1c9990 <->+4192>
   0x00000000001c986e <+3902>:	jmp    0x1c99be <->+4238>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001c9873 <+3907>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001c987b <+3915>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001c9883 <+3923>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001c988b <+3931>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001c9892 <+3938>:	lea    rdi,[rsp+0x700]
   0x00000000001c989a <+3946>:	call   0x340b10 <new>
   0x00000000001c989f <+3951>:	mov    eax,DWORD PTR [rsp+0x700]
   0x00000000001c98a6 <+3958>:	mov    rcx,QWORD PTR [rsp+0x708]
   0x00000000001c98ae <+3966>:	mov    rdx,QWORD PTR [rsp+0x710]
   0x00000000001c98b6 <+3974>:	mov    rsi,QWORD PTR [rsp+0x718]
   0x00000000001c98be <+3982>:	mov    QWORD PTR [rsp+0x4698],rsi
   0x00000000001c98c6 <+3990>:	mov    QWORD PTR [rsp+0x4690],rdx
   0x00000000001c98ce <+3998>:	mov    QWORD PTR [rsp+0x4688],rcx
   0x00000000001c98d6 <+4006>:	mov    DWORD PTR [rsp+0x4680],eax
   0x00000000001c98dd <+4013>:	lea    rax,[rsp+0x4680]
   0x00000000001c98e5 <+4021>:	mov    QWORD PTR [rsp+0x520],rax
   0x00000000001c98ed <+4029>:	jmp    0x1c974e <->+3614>
   0x00000000001c98f2 <+4034>:	mov    edi,DWORD PTR [rsp+0x52c]
   0x00000000001c98f9 <+4041>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001c98fe <+4046>:	and    al,0x1
   0x00000000001c9900 <+4048>:	test   al,0x1
   0x00000000001c9902 <+4050>:	jne    0x1c9909 <->+4057>
   0x00000000001c9904 <+4052>:	jmp    0x1c9990 <->+4192>
   0x00000000001c9909 <+4057>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001c9911 <+4065>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001c9919 <+4073>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001c9921 <+4081>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001c9929 <+4089>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001c9930 <+4096>:	lea    rdi,[rsp+0x720]
   0x00000000001c9938 <+4104>:	call   0x340cb0 <new>
   0x00000000001c993d <+4109>:	mov    eax,DWORD PTR [rsp+0x720]
   0x00000000001c9944 <+4116>:	mov    rcx,QWORD PTR [rsp+0x728]
   0x00000000001c994c <+4124>:	mov    rdx,QWORD PTR [rsp+0x730]
   0x00000000001c9954 <+4132>:	mov    rsi,QWORD PTR [rsp+0x738]
   0x00000000001c995c <+4140>:	mov    QWORD PTR [rsp+0x4678],rsi
   0x00000000001c9964 <+4148>:	mov    QWORD PTR [rsp+0x4670],rdx
   0x00000000001c996c <+4156>:	mov    QWORD PTR [rsp+0x4668],rcx
   0x00000000001c9974 <+4164>:	mov    DWORD PTR [rsp+0x4660],eax
   0x00000000001c997b <+4171>:	lea    rax,[rsp+0x4660]
   0x00000000001c9983 <+4179>:	mov    QWORD PTR [rsp+0x520],rax
   0x00000000001c998b <+4187>:	jmp    0x1c974e <->+3614>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001c9990 <+4192>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001c9998 <+4200>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001c99a0 <+4208>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001c99a8 <+4216>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001c99b0 <+4224>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c99b7 <+4231>:	call   0x326080 <<<>
   0x00000000001c99bc <+4236>:	jmp    0x1c99c0 <->+4240>
   0x00000000001c99be <+4238>:	jmp    0x1c99c0 <->+4240>
   0x00000000001c99c0 <+4240>:	mov    eax,DWORD PTR [rsp+0x46e0]
   0x00000000001c99c7 <+4247>:	inc    eax
   0x00000000001c99c9 <+4249>:	mov    DWORD PTR [rsp+0x51c],eax
   0x00000000001c99d0 <+4256>:	seto   al
   0x00000000001c99d3 <+4259>:	test   al,0x1
   0x00000000001c99d5 <+4261>:	jne    0x1c99d9 <->+4265>
   0x00000000001c99d7 <+4263>:	jmp    0x1c99de <->+4270>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001c99d9 <+4265>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001c99de <+4270>:	mov    eax,DWORD PTR [rsp+0x51c]
   0x00000000001c99e5 <+4277>:	mov    DWORD PTR [rsp+0x46e0],eax
   0x00000000001c99ec <+4284>:	jmp    0x1c9593 <->+3171>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c99f1 <+4289>:	jmp    0x1cc7b8 <->+16008>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001c99f6 <+4294>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001c99fe <+4302>:	mov    QWORD PTR [rsp+0x510],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001c9a06 <+4310>:	jmp    0x1c9a21 <->+4337>
   0x00000000001c9a08 <+4312>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c9a0f <+4319>:	mov    eax,0x12a
   0x00000000001c9a14 <+4324>:	cmp    eax,ecx
   0x00000000001c9a16 <+4326>:	je     0x1c9e5c <->+5420>
   0x00000000001c9a1c <+4332>:	jmp    0x1c9e79 <->+5449>
   0x00000000001c9a21 <+4337>:	mov    rsi,QWORD PTR [rsp+0x510]
   0x00000000001c9a29 <+4345>:	lea    rdi,[rsp+0x7e0]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001c9a31 <+4353>:	call   0x356ed0 <next>
   0x00000000001c9a36 <+4358>:	mov    eax,DWORD PTR [rsp+0x7e0]
   0x00000000001c9a3d <+4365>:	mov    rcx,QWORD PTR [rsp+0x7e8]
   0x00000000001c9a45 <+4373>:	mov    rdx,QWORD PTR [rsp+0x7f0]
   0x00000000001c9a4d <+4381>:	mov    rsi,QWORD PTR [rsp+0x7f8]
   0x00000000001c9a55 <+4389>:	mov    QWORD PTR [rsp+0x45f8],rsi
   0x00000000001c9a5d <+4397>:	mov    QWORD PTR [rsp+0x45f0],rdx
   0x00000000001c9a65 <+4405>:	mov    QWORD PTR [rsp+0x45e8],rcx
   0x00000000001c9a6d <+4413>:	mov    DWORD PTR [rsp+0x45e0],eax
   0x00000000001c9a74 <+4420>:	mov    eax,DWORD PTR [rsp+0x45e0]
   0x00000000001c9a7b <+4427>:	mov    rcx,QWORD PTR [rsp+0x45e8]
   0x00000000001c9a83 <+4435>:	mov    rdx,QWORD PTR [rsp+0x45f0]
   0x00000000001c9a8b <+4443>:	mov    rsi,QWORD PTR [rsp+0x45f8]
   0x00000000001c9a93 <+4451>:	mov    QWORD PTR [rsp+0x4618],rsi
   0x00000000001c9a9b <+4459>:	mov    QWORD PTR [rsp+0x4610],rdx
   0x00000000001c9aa3 <+4467>:	mov    QWORD PTR [rsp+0x4608],rcx
   0x00000000001c9aab <+4475>:	mov    DWORD PTR [rsp+0x4600],eax
   0x00000000001c9ab2 <+4482>:	mov    eax,DWORD PTR [rsp+0x4600]
   0x00000000001c9ab9 <+4489>:	mov    rcx,QWORD PTR [rsp+0x4608]
   0x00000000001c9ac1 <+4497>:	mov    rdx,QWORD PTR [rsp+0x4610]
   0x00000000001c9ac9 <+4505>:	mov    rsi,QWORD PTR [rsp+0x4618]
   0x00000000001c9ad1 <+4513>:	mov    QWORD PTR [rsp+0x4638],rsi
   0x00000000001c9ad9 <+4521>:	mov    QWORD PTR [rsp+0x4630],rdx
   0x00000000001c9ae1 <+4529>:	mov    QWORD PTR [rsp+0x4628],rcx
   0x00000000001c9ae9 <+4537>:	mov    DWORD PTR [rsp+0x4620],eax
   0x00000000001c9af0 <+4544>:	mov    eax,DWORD PTR [rsp+0x4620]
   0x00000000001c9af7 <+4551>:	mov    rcx,QWORD PTR [rsp+0x4628]
   0x00000000001c9aff <+4559>:	mov    rdx,QWORD PTR [rsp+0x4630]
   0x00000000001c9b07 <+4567>:	mov    rsi,QWORD PTR [rsp+0x4638]
   0x00000000001c9b0f <+4575>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001c9b17 <+4583>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001c9b1f <+4591>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001c9b27 <+4599>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001c9b2e <+4606>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001c9b35 <+4613>:	mov    DWORD PTR [rsp+0x50c],ecx
   0x00000000001c9b3c <+4620>:	mov    eax,0x4ed
   0x00000000001c9b41 <+4625>:	cmp    eax,ecx
   0x00000000001c9b43 <+4627>:	sete   al
   0x00000000001c9b46 <+4630>:	and    al,0x1
   0x00000000001c9b48 <+4632>:	test   al,0x1
   0x00000000001c9b4a <+4634>:	jne    0x1c9b4e <->+4638>
   0x00000000001c9b4c <+4636>:	jmp    0x1c9bca <->+4762>
   0x00000000001c9b4e <+4638>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001c9b56 <+4646>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001c9b5e <+4654>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001c9b66 <+4662>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001c9b6d <+4669>:	lea    rdi,[rsp+0x780]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001c9b75 <+4677>:	call   0x339d20 <new>
   0x00000000001c9b7a <+4682>:	mov    eax,DWORD PTR [rsp+0x780]
   0x00000000001c9b81 <+4689>:	mov    rcx,QWORD PTR [rsp+0x788]
   0x00000000001c9b89 <+4697>:	mov    rdx,QWORD PTR [rsp+0x790]
   0x00000000001c9b91 <+4705>:	mov    rsi,QWORD PTR [rsp+0x798]
   0x00000000001c9b99 <+4713>:	mov    QWORD PTR [rsp+0x45d8],rsi
   0x00000000001c9ba1 <+4721>:	mov    QWORD PTR [rsp+0x45d0],rdx
   0x00000000001c9ba9 <+4729>:	mov    QWORD PTR [rsp+0x45c8],rcx
   0x00000000001c9bb1 <+4737>:	mov    DWORD PTR [rsp+0x45c0],eax
   0x00000000001c9bb8 <+4744>:	lea    rax,[rsp+0x45c0]
   0x00000000001c9bc0 <+4752>:	mov    QWORD PTR [rsp+0x500],rax
   0x00000000001c9bc8 <+4760>:	jmp    0x1c9be5 <->+4789>
   0x00000000001c9bca <+4762>:	mov    edi,DWORD PTR [rsp+0x50c]
   0x00000000001c9bd1 <+4769>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001c9bd6 <+4774>:	and    al,0x1
   0x00000000001c9bd8 <+4776>:	test   al,0x1
   0x00000000001c9bda <+4778>:	jne    0x1c9d0a <->+5082>
   0x00000000001c9be0 <+4784>:	jmp    0x1c9d89 <->+5209>
   0x00000000001c9be5 <+4789>:	mov    rsi,QWORD PTR [rsp+0x500]
   0x00000000001c9bed <+4797>:	mov    eax,DWORD PTR [rsi]
   0x00000000001c9bef <+4799>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001c9bf3 <+4803>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001c9bf7 <+4807>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001c9bfb <+4811>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001c9c03 <+4819>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001c9c0b <+4827>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001c9c13 <+4835>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c9c1a <+4842>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001c9c21 <+4849>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001c9c29 <+4857>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001c9c31 <+4865>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001c9c39 <+4873>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001c9c41 <+4881>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001c9c49 <+4889>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001c9c51 <+4897>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001c9c58 <+4904>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001c9c60 <+4912>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001c9c68 <+4920>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001c9c70 <+4928>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001c9c77 <+4935>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001c9c7f <+4943>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001c9c87 <+4951>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001c9c8f <+4959>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001c9c97 <+4967>:	mov    rax,rsp
   0x00000000001c9c9a <+4970>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001c9c9e <+4974>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001c9ca2 <+4978>:	mov    QWORD PTR [rax],rdi
   0x00000000001c9ca5 <+4981>:	lea    rdi,[rsp+0x760]
   0x00000000001c9cad <+4989>:	call   0x511190 <resolve_getattr>
   0x00000000001c9cb2 <+4994>:	mov    eax,DWORD PTR [rsp+0x760]
   0x00000000001c9cb9 <+5001>:	mov    rcx,QWORD PTR [rsp+0x768]
   0x00000000001c9cc1 <+5009>:	mov    rdx,QWORD PTR [rsp+0x770]
   0x00000000001c9cc9 <+5017>:	mov    rsi,QWORD PTR [rsp+0x778]
   0x00000000001c9cd1 <+5025>:	mov    QWORD PTR [rsp+0x4578],rsi
   0x00000000001c9cd9 <+5033>:	mov    QWORD PTR [rsp+0x4570],rdx
   0x00000000001c9ce1 <+5041>:	mov    QWORD PTR [rsp+0x4568],rcx
   0x00000000001c9ce9 <+5049>:	mov    DWORD PTR [rsp+0x4560],eax
   0x00000000001c9cf0 <+5056>:	lea    rdi,[rsp+0x4560]
   0x00000000001c9cf8 <+5064>:	call   0x343280 <truthy?>
   0x00000000001c9cfd <+5069>:	test   al,0x1
   0x00000000001c9cff <+5071>:	jne    0x1c9e27 <->+5367>
   0x00000000001c9d05 <+5077>:	jmp    0x1c9e55 <->+5413>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001c9d0a <+5082>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001c9d12 <+5090>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001c9d1a <+5098>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001c9d22 <+5106>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001c9d29 <+5113>:	lea    rdi,[rsp+0x7a0]
   0x00000000001c9d31 <+5121>:	call   0x340b10 <new>
   0x00000000001c9d36 <+5126>:	mov    eax,DWORD PTR [rsp+0x7a0]
   0x00000000001c9d3d <+5133>:	mov    rcx,QWORD PTR [rsp+0x7a8]
   0x00000000001c9d45 <+5141>:	mov    rdx,QWORD PTR [rsp+0x7b0]
   0x00000000001c9d4d <+5149>:	mov    rsi,QWORD PTR [rsp+0x7b8]
   0x00000000001c9d55 <+5157>:	mov    QWORD PTR [rsp+0x45b8],rsi
   0x00000000001c9d5d <+5165>:	mov    QWORD PTR [rsp+0x45b0],rdx
   0x00000000001c9d65 <+5173>:	mov    QWORD PTR [rsp+0x45a8],rcx
   0x00000000001c9d6d <+5181>:	mov    DWORD PTR [rsp+0x45a0],eax
   0x00000000001c9d74 <+5188>:	lea    rax,[rsp+0x45a0]
   0x00000000001c9d7c <+5196>:	mov    QWORD PTR [rsp+0x500],rax
   0x00000000001c9d84 <+5204>:	jmp    0x1c9be5 <->+4789>
   0x00000000001c9d89 <+5209>:	mov    edi,DWORD PTR [rsp+0x50c]
   0x00000000001c9d90 <+5216>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001c9d95 <+5221>:	and    al,0x1
   0x00000000001c9d97 <+5223>:	test   al,0x1
   0x00000000001c9d99 <+5225>:	jne    0x1c9da0 <->+5232>
   0x00000000001c9d9b <+5227>:	jmp    0x1c9e27 <->+5367>
   0x00000000001c9da0 <+5232>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001c9da8 <+5240>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001c9db0 <+5248>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001c9db8 <+5256>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001c9dc0 <+5264>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001c9dc7 <+5271>:	lea    rdi,[rsp+0x7c0]
   0x00000000001c9dcf <+5279>:	call   0x340cb0 <new>
   0x00000000001c9dd4 <+5284>:	mov    eax,DWORD PTR [rsp+0x7c0]
   0x00000000001c9ddb <+5291>:	mov    rcx,QWORD PTR [rsp+0x7c8]
   0x00000000001c9de3 <+5299>:	mov    rdx,QWORD PTR [rsp+0x7d0]
   0x00000000001c9deb <+5307>:	mov    rsi,QWORD PTR [rsp+0x7d8]
   0x00000000001c9df3 <+5315>:	mov    QWORD PTR [rsp+0x4598],rsi
   0x00000000001c9dfb <+5323>:	mov    QWORD PTR [rsp+0x4590],rdx
   0x00000000001c9e03 <+5331>:	mov    QWORD PTR [rsp+0x4588],rcx
   0x00000000001c9e0b <+5339>:	mov    DWORD PTR [rsp+0x4580],eax
   0x00000000001c9e12 <+5346>:	lea    rax,[rsp+0x4580]
   0x00000000001c9e1a <+5354>:	mov    QWORD PTR [rsp+0x500],rax
   0x00000000001c9e22 <+5362>:	jmp    0x1c9be5 <->+4789>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001c9e27 <+5367>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001c9e2f <+5375>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001c9e37 <+5383>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001c9e3f <+5391>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001c9e47 <+5399>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001c9e4e <+5406>:	call   0x326080 <<<>
   0x00000000001c9e53 <+5411>:	jmp    0x1c9e57 <->+5415>
   0x00000000001c9e55 <+5413>:	jmp    0x1c9e57 <->+5415>
   0x00000000001c9e57 <+5415>:	jmp    0x1c9a21 <->+4337>
   0x00000000001c9e5c <+5420>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001c9e64 <+5428>:	mov    QWORD PTR [rsp+0x4f8],rax

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001c9e6c <+5436>:	mov    DWORD PTR [rsp+0x4538],0x0
   0x00000000001c9e77 <+5447>:	jmp    0x1c9e92 <->+5474>
   0x00000000001c9e79 <+5449>:	mov    ecx,DWORD PTR [rsp+0x53c]

575	      yield i
576	      i += 1
   0x00000000001c9e80 <+5456>:	mov    eax,0x193
   0x00000000001c9e85 <+5461>:	cmp    eax,ecx
   0x00000000001c9e87 <+5463>:	je     0x1ca304 <->+6612>
   0x00000000001c9e8d <+5469>:	jmp    0x1ca316 <->+6630>
   0x00000000001c9e92 <+5474>:	mov    rdi,QWORD PTR [rsp+0x4f8]

574	    while i < size
   0x00000000001c9e9a <+5482>:	mov    eax,DWORD PTR [rsp+0x4538]
   0x00000000001c9ea1 <+5489>:	mov    DWORD PTR [rsp+0x4f4],eax
   0x00000000001c9ea8 <+5496>:	call   0x334030 <size>
   0x00000000001c9ead <+5501>:	mov    ecx,eax
   0x00000000001c9eaf <+5503>:	mov    eax,DWORD PTR [rsp+0x4f4]
   0x00000000001c9eb6 <+5510>:	cmp    eax,ecx
   0x00000000001c9eb8 <+5512>:	jge    0x1c9fc5 <->+5781>
   0x00000000001c9ebe <+5518>:	mov    rsi,QWORD PTR [rsp+0x4f8]
   0x00000000001c9ec6 <+5526>:	mov    eax,DWORD PTR [rsp+0x4538]
   0x00000000001c9ecd <+5533>:	mov    DWORD PTR [rsp+0x453c],eax
   0x00000000001c9ed4 <+5540>:	mov    edx,DWORD PTR [rsp+0x453c]
   0x00000000001c9edb <+5547>:	lea    rdi,[rsp+0x880]

495	      yield unsafe_fetch(i)
   0x00000000001c9ee3 <+5555>:	call   0x334050 <unsafe_fetch>
   0x00000000001c9ee8 <+5560>:	mov    eax,DWORD PTR [rsp+0x880]
   0x00000000001c9eef <+5567>:	mov    rcx,QWORD PTR [rsp+0x888]
   0x00000000001c9ef7 <+5575>:	mov    rdx,QWORD PTR [rsp+0x890]
   0x00000000001c9eff <+5583>:	mov    rsi,QWORD PTR [rsp+0x898]
   0x00000000001c9f07 <+5591>:	mov    QWORD PTR [rsp+0x4530],rsi
   0x00000000001c9f0f <+5599>:	mov    QWORD PTR [rsp+0x4528],rdx
   0x00000000001c9f17 <+5607>:	mov    QWORD PTR [rsp+0x4520],rcx
   0x00000000001c9f1f <+5615>:	mov    DWORD PTR [rsp+0x4518],eax
   0x00000000001c9f26 <+5622>:	mov    eax,DWORD PTR [rsp+0x4518]
   0x00000000001c9f2d <+5629>:	mov    rcx,QWORD PTR [rsp+0x4520]
   0x00000000001c9f35 <+5637>:	mov    rdx,QWORD PTR [rsp+0x4528]
   0x00000000001c9f3d <+5645>:	mov    rsi,QWORD PTR [rsp+0x4530]
   0x00000000001c9f45 <+5653>:	mov    QWORD PTR [rsp+0x4558],rsi
   0x00000000001c9f4d <+5661>:	mov    QWORD PTR [rsp+0x4550],rdx
   0x00000000001c9f55 <+5669>:	mov    QWORD PTR [rsp+0x4548],rcx
   0x00000000001c9f5d <+5677>:	mov    DWORD PTR [rsp+0x4540],eax
   0x00000000001c9f64 <+5684>:	mov    eax,DWORD PTR [rsp+0x4540]
   0x00000000001c9f6b <+5691>:	mov    rcx,QWORD PTR [rsp+0x4548]
   0x00000000001c9f73 <+5699>:	mov    rdx,QWORD PTR [rsp+0x4550]
   0x00000000001c9f7b <+5707>:	mov    rsi,QWORD PTR [rsp+0x4558]
   0x00000000001c9f83 <+5715>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001c9f8b <+5723>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001c9f93 <+5731>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001c9f9b <+5739>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001c9fa2 <+5746>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001c9fa9 <+5753>:	mov    DWORD PTR [rsp+0x4f0],ecx
   0x00000000001c9fb0 <+5760>:	mov    eax,0x4ed
   0x00000000001c9fb5 <+5765>:	cmp    eax,ecx
   0x00000000001c9fb7 <+5767>:	sete   al
   0x00000000001c9fba <+5770>:	and    al,0x1
   0x00000000001c9fbc <+5772>:	test   al,0x1
   0x00000000001c9fbe <+5774>:	jne    0x1c9fca <->+5786>
   0x00000000001c9fc0 <+5776>:	jmp    0x1ca046 <->+5910>

575	      yield i
576	      i += 1
   0x00000000001c9fc5 <+5781>:	jmp    0x1c99f1 <->+4289>

495	      yield unsafe_fetch(i)
   0x00000000001c9fca <+5786>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001c9fd2 <+5794>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001c9fda <+5802>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001c9fe2 <+5810>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001c9fe9 <+5817>:	lea    rdi,[rsp+0x820]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001c9ff1 <+5825>:	call   0x339d20 <new>
   0x00000000001c9ff6 <+5830>:	mov    eax,DWORD PTR [rsp+0x820]
   0x00000000001c9ffd <+5837>:	mov    rcx,QWORD PTR [rsp+0x828]
   0x00000000001ca005 <+5845>:	mov    rdx,QWORD PTR [rsp+0x830]
   0x00000000001ca00d <+5853>:	mov    rsi,QWORD PTR [rsp+0x838]
   0x00000000001ca015 <+5861>:	mov    QWORD PTR [rsp+0x4510],rsi
   0x00000000001ca01d <+5869>:	mov    QWORD PTR [rsp+0x4508],rdx
   0x00000000001ca025 <+5877>:	mov    QWORD PTR [rsp+0x4500],rcx
   0x00000000001ca02d <+5885>:	mov    DWORD PTR [rsp+0x44f8],eax
   0x00000000001ca034 <+5892>:	lea    rax,[rsp+0x44f8]
   0x00000000001ca03c <+5900>:	mov    QWORD PTR [rsp+0x4e8],rax
   0x00000000001ca044 <+5908>:	jmp    0x1ca061 <->+5937>
   0x00000000001ca046 <+5910>:	mov    edi,DWORD PTR [rsp+0x4f0]
   0x00000000001ca04d <+5917>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ca052 <+5922>:	and    al,0x1
   0x00000000001ca054 <+5924>:	test   al,0x1
   0x00000000001ca056 <+5926>:	jne    0x1ca186 <->+6230>
   0x00000000001ca05c <+5932>:	jmp    0x1ca205 <->+6357>
   0x00000000001ca061 <+5937>:	mov    rsi,QWORD PTR [rsp+0x4e8]
   0x00000000001ca069 <+5945>:	mov    eax,DWORD PTR [rsi]
   0x00000000001ca06b <+5947>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001ca06f <+5951>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001ca073 <+5955>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001ca077 <+5959>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001ca07f <+5967>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001ca087 <+5975>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001ca08f <+5983>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca096 <+5990>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001ca09d <+5997>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001ca0a5 <+6005>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001ca0ad <+6013>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001ca0b5 <+6021>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001ca0bd <+6029>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001ca0c5 <+6037>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001ca0cd <+6045>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001ca0d4 <+6052>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001ca0dc <+6060>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001ca0e4 <+6068>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001ca0ec <+6076>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001ca0f3 <+6083>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001ca0fb <+6091>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001ca103 <+6099>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001ca10b <+6107>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ca113 <+6115>:	mov    rax,rsp
   0x00000000001ca116 <+6118>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001ca11a <+6122>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ca11e <+6126>:	mov    QWORD PTR [rax],rdi
   0x00000000001ca121 <+6129>:	lea    rdi,[rsp+0x800]
   0x00000000001ca129 <+6137>:	call   0x511190 <resolve_getattr>
   0x00000000001ca12e <+6142>:	mov    eax,DWORD PTR [rsp+0x800]
   0x00000000001ca135 <+6149>:	mov    rcx,QWORD PTR [rsp+0x808]
   0x00000000001ca13d <+6157>:	mov    rdx,QWORD PTR [rsp+0x810]
   0x00000000001ca145 <+6165>:	mov    rsi,QWORD PTR [rsp+0x818]
   0x00000000001ca14d <+6173>:	mov    QWORD PTR [rsp+0x44b0],rsi
   0x00000000001ca155 <+6181>:	mov    QWORD PTR [rsp+0x44a8],rdx
   0x00000000001ca15d <+6189>:	mov    QWORD PTR [rsp+0x44a0],rcx
   0x00000000001ca165 <+6197>:	mov    DWORD PTR [rsp+0x4498],eax
   0x00000000001ca16c <+6204>:	lea    rdi,[rsp+0x4498]
   0x00000000001ca174 <+6212>:	call   0x343280 <truthy?>
   0x00000000001ca179 <+6217>:	test   al,0x1
   0x00000000001ca17b <+6219>:	jne    0x1ca2a3 <->+6515>
   0x00000000001ca181 <+6225>:	jmp    0x1ca2d1 <->+6561>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ca186 <+6230>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001ca18e <+6238>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001ca196 <+6246>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001ca19e <+6254>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001ca1a5 <+6261>:	lea    rdi,[rsp+0x840]
   0x00000000001ca1ad <+6269>:	call   0x340b10 <new>
   0x00000000001ca1b2 <+6274>:	mov    eax,DWORD PTR [rsp+0x840]
   0x00000000001ca1b9 <+6281>:	mov    rcx,QWORD PTR [rsp+0x848]
   0x00000000001ca1c1 <+6289>:	mov    rdx,QWORD PTR [rsp+0x850]
   0x00000000001ca1c9 <+6297>:	mov    rsi,QWORD PTR [rsp+0x858]
   0x00000000001ca1d1 <+6305>:	mov    QWORD PTR [rsp+0x44f0],rsi
   0x00000000001ca1d9 <+6313>:	mov    QWORD PTR [rsp+0x44e8],rdx
   0x00000000001ca1e1 <+6321>:	mov    QWORD PTR [rsp+0x44e0],rcx
   0x00000000001ca1e9 <+6329>:	mov    DWORD PTR [rsp+0x44d8],eax
   0x00000000001ca1f0 <+6336>:	lea    rax,[rsp+0x44d8]
   0x00000000001ca1f8 <+6344>:	mov    QWORD PTR [rsp+0x4e8],rax
   0x00000000001ca200 <+6352>:	jmp    0x1ca061 <->+5937>
   0x00000000001ca205 <+6357>:	mov    edi,DWORD PTR [rsp+0x4f0]
   0x00000000001ca20c <+6364>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ca211 <+6369>:	and    al,0x1
   0x00000000001ca213 <+6371>:	test   al,0x1
   0x00000000001ca215 <+6373>:	jne    0x1ca21c <->+6380>
   0x00000000001ca217 <+6375>:	jmp    0x1ca2a3 <->+6515>
   0x00000000001ca21c <+6380>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001ca224 <+6388>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001ca22c <+6396>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001ca234 <+6404>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001ca23c <+6412>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001ca243 <+6419>:	lea    rdi,[rsp+0x860]
   0x00000000001ca24b <+6427>:	call   0x340cb0 <new>
   0x00000000001ca250 <+6432>:	mov    eax,DWORD PTR [rsp+0x860]
   0x00000000001ca257 <+6439>:	mov    rcx,QWORD PTR [rsp+0x868]
   0x00000000001ca25f <+6447>:	mov    rdx,QWORD PTR [rsp+0x870]
   0x00000000001ca267 <+6455>:	mov    rsi,QWORD PTR [rsp+0x878]
   0x00000000001ca26f <+6463>:	mov    QWORD PTR [rsp+0x44d0],rsi
   0x00000000001ca277 <+6471>:	mov    QWORD PTR [rsp+0x44c8],rdx
   0x00000000001ca27f <+6479>:	mov    QWORD PTR [rsp+0x44c0],rcx
   0x00000000001ca287 <+6487>:	mov    DWORD PTR [rsp+0x44b8],eax
   0x00000000001ca28e <+6494>:	lea    rax,[rsp+0x44b8]
   0x00000000001ca296 <+6502>:	mov    QWORD PTR [rsp+0x4e8],rax
   0x00000000001ca29e <+6510>:	jmp    0x1ca061 <->+5937>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ca2a3 <+6515>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001ca2ab <+6523>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001ca2b3 <+6531>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001ca2bb <+6539>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001ca2c3 <+6547>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca2ca <+6554>:	call   0x326080 <<<>
   0x00000000001ca2cf <+6559>:	jmp    0x1ca2d3 <->+6563>
   0x00000000001ca2d1 <+6561>:	jmp    0x1ca2d3 <->+6563>
   0x00000000001ca2d3 <+6563>:	mov    eax,DWORD PTR [rsp+0x4538]
   0x00000000001ca2da <+6570>:	inc    eax
   0x00000000001ca2dc <+6572>:	mov    DWORD PTR [rsp+0x4e4],eax
   0x00000000001ca2e3 <+6579>:	seto   al
   0x00000000001ca2e6 <+6582>:	test   al,0x1
   0x00000000001ca2e8 <+6584>:	jne    0x1ca2ec <->+6588>
   0x00000000001ca2ea <+6586>:	jmp    0x1ca2f1 <->+6593>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001ca2ec <+6588>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001ca2f1 <+6593>:	mov    eax,DWORD PTR [rsp+0x4e4]
   0x00000000001ca2f8 <+6600>:	mov    DWORD PTR [rsp+0x4538],eax
   0x00000000001ca2ff <+6607>:	jmp    0x1c9e92 <->+5474>
   0x00000000001ca304 <+6612>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001ca30c <+6620>:	mov    QWORD PTR [rsp+0x4d8],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001ca314 <+6628>:	jmp    0x1ca32f <->+6655>
   0x00000000001ca316 <+6630>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca31d <+6637>:	mov    eax,0x192
   0x00000000001ca322 <+6642>:	cmp    eax,ecx
   0x00000000001ca324 <+6644>:	je     0x1ca76a <->+7738>
   0x00000000001ca32a <+6650>:	jmp    0x1ca77c <->+7756>
   0x00000000001ca32f <+6655>:	mov    rsi,QWORD PTR [rsp+0x4d8]
   0x00000000001ca337 <+6663>:	lea    rdi,[rsp+0x920]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001ca33f <+6671>:	call   0x356ed0 <next>
   0x00000000001ca344 <+6676>:	mov    eax,DWORD PTR [rsp+0x920]
   0x00000000001ca34b <+6683>:	mov    rcx,QWORD PTR [rsp+0x928]
   0x00000000001ca353 <+6691>:	mov    rdx,QWORD PTR [rsp+0x930]
   0x00000000001ca35b <+6699>:	mov    rsi,QWORD PTR [rsp+0x938]
   0x00000000001ca363 <+6707>:	mov    QWORD PTR [rsp+0x4450],rsi
   0x00000000001ca36b <+6715>:	mov    QWORD PTR [rsp+0x4448],rdx
   0x00000000001ca373 <+6723>:	mov    QWORD PTR [rsp+0x4440],rcx
   0x00000000001ca37b <+6731>:	mov    DWORD PTR [rsp+0x4438],eax
   0x00000000001ca382 <+6738>:	mov    eax,DWORD PTR [rsp+0x4438]
   0x00000000001ca389 <+6745>:	mov    rcx,QWORD PTR [rsp+0x4440]
   0x00000000001ca391 <+6753>:	mov    rdx,QWORD PTR [rsp+0x4448]
   0x00000000001ca399 <+6761>:	mov    rsi,QWORD PTR [rsp+0x4450]
   0x00000000001ca3a1 <+6769>:	mov    QWORD PTR [rsp+0x4470],rsi
   0x00000000001ca3a9 <+6777>:	mov    QWORD PTR [rsp+0x4468],rdx
   0x00000000001ca3b1 <+6785>:	mov    QWORD PTR [rsp+0x4460],rcx
   0x00000000001ca3b9 <+6793>:	mov    DWORD PTR [rsp+0x4458],eax
   0x00000000001ca3c0 <+6800>:	mov    eax,DWORD PTR [rsp+0x4458]
   0x00000000001ca3c7 <+6807>:	mov    rcx,QWORD PTR [rsp+0x4460]
   0x00000000001ca3cf <+6815>:	mov    rdx,QWORD PTR [rsp+0x4468]
   0x00000000001ca3d7 <+6823>:	mov    rsi,QWORD PTR [rsp+0x4470]
   0x00000000001ca3df <+6831>:	mov    QWORD PTR [rsp+0x4490],rsi
   0x00000000001ca3e7 <+6839>:	mov    QWORD PTR [rsp+0x4488],rdx
   0x00000000001ca3ef <+6847>:	mov    QWORD PTR [rsp+0x4480],rcx
   0x00000000001ca3f7 <+6855>:	mov    DWORD PTR [rsp+0x4478],eax
   0x00000000001ca3fe <+6862>:	mov    eax,DWORD PTR [rsp+0x4478]
   0x00000000001ca405 <+6869>:	mov    rcx,QWORD PTR [rsp+0x4480]
   0x00000000001ca40d <+6877>:	mov    rdx,QWORD PTR [rsp+0x4488]
   0x00000000001ca415 <+6885>:	mov    rsi,QWORD PTR [rsp+0x4490]
   0x00000000001ca41d <+6893>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001ca425 <+6901>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001ca42d <+6909>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001ca435 <+6917>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001ca43c <+6924>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001ca443 <+6931>:	mov    DWORD PTR [rsp+0x4d4],ecx
   0x00000000001ca44a <+6938>:	mov    eax,0x4ed
   0x00000000001ca44f <+6943>:	cmp    eax,ecx
   0x00000000001ca451 <+6945>:	sete   al
   0x00000000001ca454 <+6948>:	and    al,0x1
   0x00000000001ca456 <+6950>:	test   al,0x1
   0x00000000001ca458 <+6952>:	jne    0x1ca45c <->+6956>
   0x00000000001ca45a <+6954>:	jmp    0x1ca4d8 <->+7080>
   0x00000000001ca45c <+6956>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001ca464 <+6964>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001ca46c <+6972>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001ca474 <+6980>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001ca47b <+6987>:	lea    rdi,[rsp+0x8c0]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ca483 <+6995>:	call   0x339d20 <new>
   0x00000000001ca488 <+7000>:	mov    eax,DWORD PTR [rsp+0x8c0]
   0x00000000001ca48f <+7007>:	mov    rcx,QWORD PTR [rsp+0x8c8]
   0x00000000001ca497 <+7015>:	mov    rdx,QWORD PTR [rsp+0x8d0]
   0x00000000001ca49f <+7023>:	mov    rsi,QWORD PTR [rsp+0x8d8]
   0x00000000001ca4a7 <+7031>:	mov    QWORD PTR [rsp+0x4430],rsi
   0x00000000001ca4af <+7039>:	mov    QWORD PTR [rsp+0x4428],rdx
   0x00000000001ca4b7 <+7047>:	mov    QWORD PTR [rsp+0x4420],rcx
   0x00000000001ca4bf <+7055>:	mov    DWORD PTR [rsp+0x4418],eax
   0x00000000001ca4c6 <+7062>:	lea    rax,[rsp+0x4418]
   0x00000000001ca4ce <+7070>:	mov    QWORD PTR [rsp+0x4c8],rax
   0x00000000001ca4d6 <+7078>:	jmp    0x1ca4f3 <->+7107>
   0x00000000001ca4d8 <+7080>:	mov    edi,DWORD PTR [rsp+0x4d4]
   0x00000000001ca4df <+7087>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ca4e4 <+7092>:	and    al,0x1
   0x00000000001ca4e6 <+7094>:	test   al,0x1
   0x00000000001ca4e8 <+7096>:	jne    0x1ca618 <->+7400>
   0x00000000001ca4ee <+7102>:	jmp    0x1ca697 <->+7527>
   0x00000000001ca4f3 <+7107>:	mov    rsi,QWORD PTR [rsp+0x4c8]
   0x00000000001ca4fb <+7115>:	mov    eax,DWORD PTR [rsi]
   0x00000000001ca4fd <+7117>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001ca501 <+7121>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001ca505 <+7125>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001ca509 <+7129>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001ca511 <+7137>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001ca519 <+7145>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001ca521 <+7153>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca528 <+7160>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001ca52f <+7167>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001ca537 <+7175>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001ca53f <+7183>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001ca547 <+7191>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001ca54f <+7199>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001ca557 <+7207>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001ca55f <+7215>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001ca566 <+7222>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001ca56e <+7230>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001ca576 <+7238>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001ca57e <+7246>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001ca585 <+7253>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001ca58d <+7261>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001ca595 <+7269>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001ca59d <+7277>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ca5a5 <+7285>:	mov    rax,rsp
   0x00000000001ca5a8 <+7288>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001ca5ac <+7292>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ca5b0 <+7296>:	mov    QWORD PTR [rax],rdi
   0x00000000001ca5b3 <+7299>:	lea    rdi,[rsp+0x8a0]
   0x00000000001ca5bb <+7307>:	call   0x511190 <resolve_getattr>
   0x00000000001ca5c0 <+7312>:	mov    eax,DWORD PTR [rsp+0x8a0]
   0x00000000001ca5c7 <+7319>:	mov    rcx,QWORD PTR [rsp+0x8a8]
   0x00000000001ca5cf <+7327>:	mov    rdx,QWORD PTR [rsp+0x8b0]
   0x00000000001ca5d7 <+7335>:	mov    rsi,QWORD PTR [rsp+0x8b8]
   0x00000000001ca5df <+7343>:	mov    QWORD PTR [rsp+0x43d0],rsi
   0x00000000001ca5e7 <+7351>:	mov    QWORD PTR [rsp+0x43c8],rdx
   0x00000000001ca5ef <+7359>:	mov    QWORD PTR [rsp+0x43c0],rcx
   0x00000000001ca5f7 <+7367>:	mov    DWORD PTR [rsp+0x43b8],eax
   0x00000000001ca5fe <+7374>:	lea    rdi,[rsp+0x43b8]
   0x00000000001ca606 <+7382>:	call   0x343280 <truthy?>
   0x00000000001ca60b <+7387>:	test   al,0x1
   0x00000000001ca60d <+7389>:	jne    0x1ca735 <->+7685>
   0x00000000001ca613 <+7395>:	jmp    0x1ca763 <->+7731>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ca618 <+7400>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001ca620 <+7408>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001ca628 <+7416>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001ca630 <+7424>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001ca637 <+7431>:	lea    rdi,[rsp+0x8e0]
   0x00000000001ca63f <+7439>:	call   0x340b10 <new>
   0x00000000001ca644 <+7444>:	mov    eax,DWORD PTR [rsp+0x8e0]
   0x00000000001ca64b <+7451>:	mov    rcx,QWORD PTR [rsp+0x8e8]
   0x00000000001ca653 <+7459>:	mov    rdx,QWORD PTR [rsp+0x8f0]
   0x00000000001ca65b <+7467>:	mov    rsi,QWORD PTR [rsp+0x8f8]
   0x00000000001ca663 <+7475>:	mov    QWORD PTR [rsp+0x4410],rsi
   0x00000000001ca66b <+7483>:	mov    QWORD PTR [rsp+0x4408],rdx
   0x00000000001ca673 <+7491>:	mov    QWORD PTR [rsp+0x4400],rcx
   0x00000000001ca67b <+7499>:	mov    DWORD PTR [rsp+0x43f8],eax
   0x00000000001ca682 <+7506>:	lea    rax,[rsp+0x43f8]
   0x00000000001ca68a <+7514>:	mov    QWORD PTR [rsp+0x4c8],rax
   0x00000000001ca692 <+7522>:	jmp    0x1ca4f3 <->+7107>
   0x00000000001ca697 <+7527>:	mov    edi,DWORD PTR [rsp+0x4d4]
   0x00000000001ca69e <+7534>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ca6a3 <+7539>:	and    al,0x1
   0x00000000001ca6a5 <+7541>:	test   al,0x1
   0x00000000001ca6a7 <+7543>:	jne    0x1ca6ae <->+7550>
   0x00000000001ca6a9 <+7545>:	jmp    0x1ca735 <->+7685>
   0x00000000001ca6ae <+7550>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001ca6b6 <+7558>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001ca6be <+7566>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001ca6c6 <+7574>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001ca6ce <+7582>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001ca6d5 <+7589>:	lea    rdi,[rsp+0x900]
   0x00000000001ca6dd <+7597>:	call   0x340cb0 <new>
   0x00000000001ca6e2 <+7602>:	mov    eax,DWORD PTR [rsp+0x900]
   0x00000000001ca6e9 <+7609>:	mov    rcx,QWORD PTR [rsp+0x908]
   0x00000000001ca6f1 <+7617>:	mov    rdx,QWORD PTR [rsp+0x910]
   0x00000000001ca6f9 <+7625>:	mov    rsi,QWORD PTR [rsp+0x918]
   0x00000000001ca701 <+7633>:	mov    QWORD PTR [rsp+0x43f0],rsi
   0x00000000001ca709 <+7641>:	mov    QWORD PTR [rsp+0x43e8],rdx
   0x00000000001ca711 <+7649>:	mov    QWORD PTR [rsp+0x43e0],rcx
   0x00000000001ca719 <+7657>:	mov    DWORD PTR [rsp+0x43d8],eax
   0x00000000001ca720 <+7664>:	lea    rax,[rsp+0x43d8]
   0x00000000001ca728 <+7672>:	mov    QWORD PTR [rsp+0x4c8],rax
   0x00000000001ca730 <+7680>:	jmp    0x1ca4f3 <->+7107>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ca735 <+7685>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001ca73d <+7693>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001ca745 <+7701>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001ca74d <+7709>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001ca755 <+7717>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca75c <+7724>:	call   0x326080 <<<>
   0x00000000001ca761 <+7729>:	jmp    0x1ca765 <->+7733>
   0x00000000001ca763 <+7731>:	jmp    0x1ca765 <->+7733>
   0x00000000001ca765 <+7733>:	jmp    0x1ca32f <->+6655>
   0x00000000001ca76a <+7738>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001ca772 <+7746>:	mov    QWORD PTR [rsp+0x4c0],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001ca77a <+7754>:	jmp    0x1ca795 <->+7781>
   0x00000000001ca77c <+7756>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca783 <+7763>:	mov    eax,0x127
   0x00000000001ca788 <+7768>:	cmp    eax,ecx
   0x00000000001ca78a <+7770>:	je     0x1cac0b <->+8923>
   0x00000000001ca790 <+7776>:	jmp    0x1cac1d <->+8941>
   0x00000000001ca795 <+7781>:	mov    rsi,QWORD PTR [rsp+0x4c0]
   0x00000000001ca79d <+7789>:	lea    rdi,[rsp+0x9c0]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001ca7a5 <+7797>:	call   0x359c60 <next>
   0x00000000001ca7aa <+7802>:	mov    eax,DWORD PTR [rsp+0x9c0]
   0x00000000001ca7b1 <+7809>:	mov    rcx,QWORD PTR [rsp+0x9c8]
   0x00000000001ca7b9 <+7817>:	mov    rdx,QWORD PTR [rsp+0x9d0]
   0x00000000001ca7c1 <+7825>:	mov    rsi,QWORD PTR [rsp+0x9d8]
   0x00000000001ca7c9 <+7833>:	mov    rdi,QWORD PTR [rsp+0x9e0]
   0x00000000001ca7d1 <+7841>:	mov    QWORD PTR [rsp+0x4368],rdi
   0x00000000001ca7d9 <+7849>:	mov    QWORD PTR [rsp+0x4360],rsi
   0x00000000001ca7e1 <+7857>:	mov    QWORD PTR [rsp+0x4358],rdx
   0x00000000001ca7e9 <+7865>:	mov    QWORD PTR [rsp+0x4350],rcx
   0x00000000001ca7f1 <+7873>:	mov    DWORD PTR [rsp+0x4348],eax
   0x00000000001ca7f8 <+7880>:	mov    eax,DWORD PTR [rsp+0x4348]
   0x00000000001ca7ff <+7887>:	mov    rcx,QWORD PTR [rsp+0x4350]
   0x00000000001ca807 <+7895>:	mov    rdx,QWORD PTR [rsp+0x4358]
   0x00000000001ca80f <+7903>:	mov    rsi,QWORD PTR [rsp+0x4360]
   0x00000000001ca817 <+7911>:	mov    rdi,QWORD PTR [rsp+0x4368]
   0x00000000001ca81f <+7919>:	mov    QWORD PTR [rsp+0x4390],rdi
   0x00000000001ca827 <+7927>:	mov    QWORD PTR [rsp+0x4388],rsi
   0x00000000001ca82f <+7935>:	mov    QWORD PTR [rsp+0x4380],rdx
   0x00000000001ca837 <+7943>:	mov    QWORD PTR [rsp+0x4378],rcx
   0x00000000001ca83f <+7951>:	mov    DWORD PTR [rsp+0x4370],eax

637	      break if value.is_a?(Stop)
   0x00000000001ca846 <+7958>:	mov    eax,0xa3
   0x00000000001ca84b <+7963>:	cmp    eax,DWORD PTR [rsp+0x4370]
   0x00000000001ca852 <+7970>:	jne    0x1ca859 <->+7977>
   0x00000000001ca854 <+7972>:	jmp    0x1ca8f8 <->+8136>
   0x00000000001ca859 <+7977>:	mov    eax,DWORD PTR [rsp+0x4378]
   0x00000000001ca860 <+7984>:	mov    rcx,QWORD PTR [rsp+0x4380]
   0x00000000001ca868 <+7992>:	mov    rdx,QWORD PTR [rsp+0x4388]
   0x00000000001ca870 <+8000>:	mov    rsi,QWORD PTR [rsp+0x4390]
   0x00000000001ca878 <+8008>:	mov    QWORD PTR [rsp+0x43b0],rsi
   0x00000000001ca880 <+8016>:	mov    QWORD PTR [rsp+0x43a8],rdx
   0x00000000001ca888 <+8024>:	mov    QWORD PTR [rsp+0x43a0],rcx
   0x00000000001ca890 <+8032>:	mov    DWORD PTR [rsp+0x4398],eax
   0x00000000001ca897 <+8039>:	mov    eax,DWORD PTR [rsp+0x4398]
   0x00000000001ca89e <+8046>:	mov    rcx,QWORD PTR [rsp+0x43a0]
   0x00000000001ca8a6 <+8054>:	mov    rdx,QWORD PTR [rsp+0x43a8]
   0x00000000001ca8ae <+8062>:	mov    rsi,QWORD PTR [rsp+0x43b0]
   0x00000000001ca8b6 <+8070>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001ca8be <+8078>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001ca8c6 <+8086>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001ca8ce <+8094>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001ca8d5 <+8101>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001ca8dc <+8108>:	mov    DWORD PTR [rsp+0x4bc],ecx
   0x00000000001ca8e3 <+8115>:	mov    eax,0x4ed
   0x00000000001ca8e8 <+8120>:	cmp    eax,ecx
   0x00000000001ca8ea <+8122>:	sete   al
   0x00000000001ca8ed <+8125>:	and    al,0x1
   0x00000000001ca8ef <+8127>:	test   al,0x1
   0x00000000001ca8f1 <+8129>:	jne    0x1ca8fd <->+8141>
   0x00000000001ca8f3 <+8131>:	jmp    0x1ca979 <->+8265>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca8f8 <+8136>:	jmp    0x1c99f1 <->+4289>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001ca8fd <+8141>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001ca905 <+8149>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001ca90d <+8157>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001ca915 <+8165>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001ca91c <+8172>:	lea    rdi,[rsp+0x960]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ca924 <+8180>:	call   0x339d20 <new>
   0x00000000001ca929 <+8185>:	mov    eax,DWORD PTR [rsp+0x960]
   0x00000000001ca930 <+8192>:	mov    rcx,QWORD PTR [rsp+0x968]
   0x00000000001ca938 <+8200>:	mov    rdx,QWORD PTR [rsp+0x970]
   0x00000000001ca940 <+8208>:	mov    rsi,QWORD PTR [rsp+0x978]
   0x00000000001ca948 <+8216>:	mov    QWORD PTR [rsp+0x4340],rsi
   0x00000000001ca950 <+8224>:	mov    QWORD PTR [rsp+0x4338],rdx
   0x00000000001ca958 <+8232>:	mov    QWORD PTR [rsp+0x4330],rcx
   0x00000000001ca960 <+8240>:	mov    DWORD PTR [rsp+0x4328],eax
   0x00000000001ca967 <+8247>:	lea    rax,[rsp+0x4328]
   0x00000000001ca96f <+8255>:	mov    QWORD PTR [rsp+0x4b0],rax
   0x00000000001ca977 <+8263>:	jmp    0x1ca994 <->+8292>
   0x00000000001ca979 <+8265>:	mov    edi,DWORD PTR [rsp+0x4bc]
   0x00000000001ca980 <+8272>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ca985 <+8277>:	and    al,0x1
   0x00000000001ca987 <+8279>:	test   al,0x1
   0x00000000001ca989 <+8281>:	jne    0x1caab9 <->+8585>
   0x00000000001ca98f <+8287>:	jmp    0x1cab38 <->+8712>
   0x00000000001ca994 <+8292>:	mov    rsi,QWORD PTR [rsp+0x4b0]
   0x00000000001ca99c <+8300>:	mov    eax,DWORD PTR [rsi]
   0x00000000001ca99e <+8302>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001ca9a2 <+8306>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001ca9a6 <+8310>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001ca9aa <+8314>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001ca9b2 <+8322>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001ca9ba <+8330>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001ca9c2 <+8338>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ca9c9 <+8345>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001ca9d0 <+8352>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001ca9d8 <+8360>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001ca9e0 <+8368>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001ca9e8 <+8376>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001ca9f0 <+8384>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001ca9f8 <+8392>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001caa00 <+8400>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001caa07 <+8407>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001caa0f <+8415>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001caa17 <+8423>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001caa1f <+8431>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001caa26 <+8438>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001caa2e <+8446>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001caa36 <+8454>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001caa3e <+8462>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001caa46 <+8470>:	mov    rax,rsp
   0x00000000001caa49 <+8473>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001caa4d <+8477>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001caa51 <+8481>:	mov    QWORD PTR [rax],rdi
   0x00000000001caa54 <+8484>:	lea    rdi,[rsp+0x940]
   0x00000000001caa5c <+8492>:	call   0x511190 <resolve_getattr>
   0x00000000001caa61 <+8497>:	mov    eax,DWORD PTR [rsp+0x940]
   0x00000000001caa68 <+8504>:	mov    rcx,QWORD PTR [rsp+0x948]
   0x00000000001caa70 <+8512>:	mov    rdx,QWORD PTR [rsp+0x950]
   0x00000000001caa78 <+8520>:	mov    rsi,QWORD PTR [rsp+0x958]
   0x00000000001caa80 <+8528>:	mov    QWORD PTR [rsp+0x42e0],rsi
   0x00000000001caa88 <+8536>:	mov    QWORD PTR [rsp+0x42d8],rdx
   0x00000000001caa90 <+8544>:	mov    QWORD PTR [rsp+0x42d0],rcx
   0x00000000001caa98 <+8552>:	mov    DWORD PTR [rsp+0x42c8],eax
   0x00000000001caa9f <+8559>:	lea    rdi,[rsp+0x42c8]
   0x00000000001caaa7 <+8567>:	call   0x343280 <truthy?>
   0x00000000001caaac <+8572>:	test   al,0x1
   0x00000000001caaae <+8574>:	jne    0x1cabd6 <->+8870>
   0x00000000001caab4 <+8580>:	jmp    0x1cac04 <->+8916>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001caab9 <+8585>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001caac1 <+8593>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001caac9 <+8601>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001caad1 <+8609>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001caad8 <+8616>:	lea    rdi,[rsp+0x980]
   0x00000000001caae0 <+8624>:	call   0x340b10 <new>
   0x00000000001caae5 <+8629>:	mov    eax,DWORD PTR [rsp+0x980]
   0x00000000001caaec <+8636>:	mov    rcx,QWORD PTR [rsp+0x988]
   0x00000000001caaf4 <+8644>:	mov    rdx,QWORD PTR [rsp+0x990]
   0x00000000001caafc <+8652>:	mov    rsi,QWORD PTR [rsp+0x998]
   0x00000000001cab04 <+8660>:	mov    QWORD PTR [rsp+0x4320],rsi
   0x00000000001cab0c <+8668>:	mov    QWORD PTR [rsp+0x4318],rdx
   0x00000000001cab14 <+8676>:	mov    QWORD PTR [rsp+0x4310],rcx
   0x00000000001cab1c <+8684>:	mov    DWORD PTR [rsp+0x4308],eax
   0x00000000001cab23 <+8691>:	lea    rax,[rsp+0x4308]
   0x00000000001cab2b <+8699>:	mov    QWORD PTR [rsp+0x4b0],rax
   0x00000000001cab33 <+8707>:	jmp    0x1ca994 <->+8292>
   0x00000000001cab38 <+8712>:	mov    edi,DWORD PTR [rsp+0x4bc]
   0x00000000001cab3f <+8719>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cab44 <+8724>:	and    al,0x1
   0x00000000001cab46 <+8726>:	test   al,0x1
   0x00000000001cab48 <+8728>:	jne    0x1cab4f <->+8735>
   0x00000000001cab4a <+8730>:	jmp    0x1cabd6 <->+8870>
   0x00000000001cab4f <+8735>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cab57 <+8743>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cab5f <+8751>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cab67 <+8759>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cab6f <+8767>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cab76 <+8774>:	lea    rdi,[rsp+0x9a0]
   0x00000000001cab7e <+8782>:	call   0x340cb0 <new>
   0x00000000001cab83 <+8787>:	mov    eax,DWORD PTR [rsp+0x9a0]
   0x00000000001cab8a <+8794>:	mov    rcx,QWORD PTR [rsp+0x9a8]
   0x00000000001cab92 <+8802>:	mov    rdx,QWORD PTR [rsp+0x9b0]
   0x00000000001cab9a <+8810>:	mov    rsi,QWORD PTR [rsp+0x9b8]
   0x00000000001caba2 <+8818>:	mov    QWORD PTR [rsp+0x4300],rsi
   0x00000000001cabaa <+8826>:	mov    QWORD PTR [rsp+0x42f8],rdx
   0x00000000001cabb2 <+8834>:	mov    QWORD PTR [rsp+0x42f0],rcx
   0x00000000001cabba <+8842>:	mov    DWORD PTR [rsp+0x42e8],eax
   0x00000000001cabc1 <+8849>:	lea    rax,[rsp+0x42e8]
   0x00000000001cabc9 <+8857>:	mov    QWORD PTR [rsp+0x4b0],rax
   0x00000000001cabd1 <+8865>:	jmp    0x1ca994 <->+8292>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cabd6 <+8870>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cabde <+8878>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cabe6 <+8886>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cabee <+8894>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cabf6 <+8902>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cabfd <+8909>:	call   0x326080 <<<>
   0x00000000001cac02 <+8914>:	jmp    0x1cac06 <->+8918>
   0x00000000001cac04 <+8916>:	jmp    0x1cac06 <->+8918>
   0x00000000001cac06 <+8918>:	jmp    0x1ca795 <->+7781>
   0x00000000001cac0b <+8923>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cac13 <+8931>:	mov    QWORD PTR [rsp+0x4a8],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cac1b <+8939>:	jmp    0x1cac36 <->+8966>
   0x00000000001cac1d <+8941>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cac24 <+8948>:	mov    eax,0x128
   0x00000000001cac29 <+8953>:	cmp    eax,ecx
   0x00000000001cac2b <+8955>:	je     0x1cb0ac <->+10108>
   0x00000000001cac31 <+8961>:	jmp    0x1cb0be <->+10126>
   0x00000000001cac36 <+8966>:	mov    rsi,QWORD PTR [rsp+0x4a8]
   0x00000000001cac3e <+8974>:	lea    rdi,[rsp+0xa68]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cac46 <+8982>:	call   0x35cfa0 <next>
   0x00000000001cac4b <+8987>:	mov    eax,DWORD PTR [rsp+0xa68]
   0x00000000001cac52 <+8994>:	mov    rcx,QWORD PTR [rsp+0xa70]
   0x00000000001cac5a <+9002>:	mov    rdx,QWORD PTR [rsp+0xa78]
   0x00000000001cac62 <+9010>:	mov    rsi,QWORD PTR [rsp+0xa80]
   0x00000000001cac6a <+9018>:	mov    rdi,QWORD PTR [rsp+0xa88]
   0x00000000001cac72 <+9026>:	mov    QWORD PTR [rsp+0x4278],rdi
   0x00000000001cac7a <+9034>:	mov    QWORD PTR [rsp+0x4270],rsi
   0x00000000001cac82 <+9042>:	mov    QWORD PTR [rsp+0x4268],rdx
   0x00000000001cac8a <+9050>:	mov    QWORD PTR [rsp+0x4260],rcx
   0x00000000001cac92 <+9058>:	mov    DWORD PTR [rsp+0x4258],eax
   0x00000000001cac99 <+9065>:	mov    eax,DWORD PTR [rsp+0x4258]
   0x00000000001caca0 <+9072>:	mov    rcx,QWORD PTR [rsp+0x4260]
   0x00000000001caca8 <+9080>:	mov    rdx,QWORD PTR [rsp+0x4268]
   0x00000000001cacb0 <+9088>:	mov    rsi,QWORD PTR [rsp+0x4270]
   0x00000000001cacb8 <+9096>:	mov    rdi,QWORD PTR [rsp+0x4278]
   0x00000000001cacc0 <+9104>:	mov    QWORD PTR [rsp+0x42a0],rdi
   0x00000000001cacc8 <+9112>:	mov    QWORD PTR [rsp+0x4298],rsi
   0x00000000001cacd0 <+9120>:	mov    QWORD PTR [rsp+0x4290],rdx
   0x00000000001cacd8 <+9128>:	mov    QWORD PTR [rsp+0x4288],rcx
   0x00000000001cace0 <+9136>:	mov    DWORD PTR [rsp+0x4280],eax

637	      break if value.is_a?(Stop)
   0x00000000001cace7 <+9143>:	mov    eax,0xa3
   0x00000000001cacec <+9148>:	cmp    eax,DWORD PTR [rsp+0x4280]
   0x00000000001cacf3 <+9155>:	jne    0x1cacfa <->+9162>
   0x00000000001cacf5 <+9157>:	jmp    0x1cad99 <->+9321>
   0x00000000001cacfa <+9162>:	mov    eax,DWORD PTR [rsp+0x4288]
   0x00000000001cad01 <+9169>:	mov    rcx,QWORD PTR [rsp+0x4290]
   0x00000000001cad09 <+9177>:	mov    rdx,QWORD PTR [rsp+0x4298]
   0x00000000001cad11 <+9185>:	mov    rsi,QWORD PTR [rsp+0x42a0]
   0x00000000001cad19 <+9193>:	mov    QWORD PTR [rsp+0x42c0],rsi
   0x00000000001cad21 <+9201>:	mov    QWORD PTR [rsp+0x42b8],rdx
   0x00000000001cad29 <+9209>:	mov    QWORD PTR [rsp+0x42b0],rcx
   0x00000000001cad31 <+9217>:	mov    DWORD PTR [rsp+0x42a8],eax
   0x00000000001cad38 <+9224>:	mov    eax,DWORD PTR [rsp+0x42a8]
   0x00000000001cad3f <+9231>:	mov    rcx,QWORD PTR [rsp+0x42b0]
   0x00000000001cad47 <+9239>:	mov    rdx,QWORD PTR [rsp+0x42b8]
   0x00000000001cad4f <+9247>:	mov    rsi,QWORD PTR [rsp+0x42c0]
   0x00000000001cad57 <+9255>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001cad5f <+9263>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001cad67 <+9271>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001cad6f <+9279>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001cad76 <+9286>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cad7d <+9293>:	mov    DWORD PTR [rsp+0x4a4],ecx
   0x00000000001cad84 <+9300>:	mov    eax,0x4ed
   0x00000000001cad89 <+9305>:	cmp    eax,ecx
   0x00000000001cad8b <+9307>:	sete   al
   0x00000000001cad8e <+9310>:	and    al,0x1
   0x00000000001cad90 <+9312>:	test   al,0x1
   0x00000000001cad92 <+9314>:	jne    0x1cad9e <->+9326>
   0x00000000001cad94 <+9316>:	jmp    0x1cae1a <->+9450>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cad99 <+9321>:	jmp    0x1c99f1 <->+4289>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001cad9e <+9326>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cada6 <+9334>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cadae <+9342>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cadb6 <+9350>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cadbd <+9357>:	lea    rdi,[rsp+0xa08]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cadc5 <+9365>:	call   0x339d20 <new>
   0x00000000001cadca <+9370>:	mov    eax,DWORD PTR [rsp+0xa08]
   0x00000000001cadd1 <+9377>:	mov    rcx,QWORD PTR [rsp+0xa10]
   0x00000000001cadd9 <+9385>:	mov    rdx,QWORD PTR [rsp+0xa18]
   0x00000000001cade1 <+9393>:	mov    rsi,QWORD PTR [rsp+0xa20]
   0x00000000001cade9 <+9401>:	mov    QWORD PTR [rsp+0x4250],rsi
   0x00000000001cadf1 <+9409>:	mov    QWORD PTR [rsp+0x4248],rdx
   0x00000000001cadf9 <+9417>:	mov    QWORD PTR [rsp+0x4240],rcx
   0x00000000001cae01 <+9425>:	mov    DWORD PTR [rsp+0x4238],eax
   0x00000000001cae08 <+9432>:	lea    rax,[rsp+0x4238]
   0x00000000001cae10 <+9440>:	mov    QWORD PTR [rsp+0x498],rax
   0x00000000001cae18 <+9448>:	jmp    0x1cae35 <->+9477>
   0x00000000001cae1a <+9450>:	mov    edi,DWORD PTR [rsp+0x4a4]
   0x00000000001cae21 <+9457>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cae26 <+9462>:	and    al,0x1
   0x00000000001cae28 <+9464>:	test   al,0x1
   0x00000000001cae2a <+9466>:	jne    0x1caf5a <->+9770>
   0x00000000001cae30 <+9472>:	jmp    0x1cafd9 <->+9897>
   0x00000000001cae35 <+9477>:	mov    rsi,QWORD PTR [rsp+0x498]
   0x00000000001cae3d <+9485>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cae3f <+9487>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cae43 <+9491>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cae47 <+9495>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cae4b <+9499>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cae53 <+9507>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cae5b <+9515>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cae63 <+9523>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cae6a <+9530>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cae71 <+9537>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cae79 <+9545>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cae81 <+9553>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cae89 <+9561>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cae91 <+9569>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cae99 <+9577>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001caea1 <+9585>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001caea8 <+9592>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001caeb0 <+9600>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001caeb8 <+9608>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001caec0 <+9616>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001caec7 <+9623>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001caecf <+9631>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001caed7 <+9639>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001caedf <+9647>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001caee7 <+9655>:	mov    rax,rsp
   0x00000000001caeea <+9658>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001caeee <+9662>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001caef2 <+9666>:	mov    QWORD PTR [rax],rdi
   0x00000000001caef5 <+9669>:	lea    rdi,[rsp+0x9e8]
   0x00000000001caefd <+9677>:	call   0x511190 <resolve_getattr>
   0x00000000001caf02 <+9682>:	mov    eax,DWORD PTR [rsp+0x9e8]
   0x00000000001caf09 <+9689>:	mov    rcx,QWORD PTR [rsp+0x9f0]
   0x00000000001caf11 <+9697>:	mov    rdx,QWORD PTR [rsp+0x9f8]
   0x00000000001caf19 <+9705>:	mov    rsi,QWORD PTR [rsp+0xa00]
   0x00000000001caf21 <+9713>:	mov    QWORD PTR [rsp+0x41f0],rsi
   0x00000000001caf29 <+9721>:	mov    QWORD PTR [rsp+0x41e8],rdx
   0x00000000001caf31 <+9729>:	mov    QWORD PTR [rsp+0x41e0],rcx
   0x00000000001caf39 <+9737>:	mov    DWORD PTR [rsp+0x41d8],eax
   0x00000000001caf40 <+9744>:	lea    rdi,[rsp+0x41d8]
   0x00000000001caf48 <+9752>:	call   0x343280 <truthy?>
   0x00000000001caf4d <+9757>:	test   al,0x1
   0x00000000001caf4f <+9759>:	jne    0x1cb077 <->+10055>
   0x00000000001caf55 <+9765>:	jmp    0x1cb0a5 <->+10101>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001caf5a <+9770>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001caf62 <+9778>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001caf6a <+9786>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001caf72 <+9794>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001caf79 <+9801>:	lea    rdi,[rsp+0xa28]
   0x00000000001caf81 <+9809>:	call   0x340b10 <new>
   0x00000000001caf86 <+9814>:	mov    eax,DWORD PTR [rsp+0xa28]
   0x00000000001caf8d <+9821>:	mov    rcx,QWORD PTR [rsp+0xa30]
   0x00000000001caf95 <+9829>:	mov    rdx,QWORD PTR [rsp+0xa38]
   0x00000000001caf9d <+9837>:	mov    rsi,QWORD PTR [rsp+0xa40]
   0x00000000001cafa5 <+9845>:	mov    QWORD PTR [rsp+0x4230],rsi
   0x00000000001cafad <+9853>:	mov    QWORD PTR [rsp+0x4228],rdx
   0x00000000001cafb5 <+9861>:	mov    QWORD PTR [rsp+0x4220],rcx
   0x00000000001cafbd <+9869>:	mov    DWORD PTR [rsp+0x4218],eax
   0x00000000001cafc4 <+9876>:	lea    rax,[rsp+0x4218]
   0x00000000001cafcc <+9884>:	mov    QWORD PTR [rsp+0x498],rax
   0x00000000001cafd4 <+9892>:	jmp    0x1cae35 <->+9477>
   0x00000000001cafd9 <+9897>:	mov    edi,DWORD PTR [rsp+0x4a4]
   0x00000000001cafe0 <+9904>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cafe5 <+9909>:	and    al,0x1
   0x00000000001cafe7 <+9911>:	test   al,0x1
   0x00000000001cafe9 <+9913>:	jne    0x1caff0 <->+9920>
   0x00000000001cafeb <+9915>:	jmp    0x1cb077 <->+10055>
   0x00000000001caff0 <+9920>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001caff8 <+9928>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cb000 <+9936>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cb008 <+9944>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cb010 <+9952>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cb017 <+9959>:	lea    rdi,[rsp+0xa48]
   0x00000000001cb01f <+9967>:	call   0x340cb0 <new>
   0x00000000001cb024 <+9972>:	mov    eax,DWORD PTR [rsp+0xa48]
   0x00000000001cb02b <+9979>:	mov    rcx,QWORD PTR [rsp+0xa50]
   0x00000000001cb033 <+9987>:	mov    rdx,QWORD PTR [rsp+0xa58]
   0x00000000001cb03b <+9995>:	mov    rsi,QWORD PTR [rsp+0xa60]
   0x00000000001cb043 <+10003>:	mov    QWORD PTR [rsp+0x4210],rsi
   0x00000000001cb04b <+10011>:	mov    QWORD PTR [rsp+0x4208],rdx
   0x00000000001cb053 <+10019>:	mov    QWORD PTR [rsp+0x4200],rcx
   0x00000000001cb05b <+10027>:	mov    DWORD PTR [rsp+0x41f8],eax
   0x00000000001cb062 <+10034>:	lea    rax,[rsp+0x41f8]
   0x00000000001cb06a <+10042>:	mov    QWORD PTR [rsp+0x498],rax
   0x00000000001cb072 <+10050>:	jmp    0x1cae35 <->+9477>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cb077 <+10055>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cb07f <+10063>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cb087 <+10071>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cb08f <+10079>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cb097 <+10087>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb09e <+10094>:	call   0x326080 <<<>
   0x00000000001cb0a3 <+10099>:	jmp    0x1cb0a7 <->+10103>
   0x00000000001cb0a5 <+10101>:	jmp    0x1cb0a7 <->+10103>
   0x00000000001cb0a7 <+10103>:	jmp    0x1cac36 <->+8966>
   0x00000000001cb0ac <+10108>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cb0b4 <+10116>:	mov    QWORD PTR [rsp+0x490],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cb0bc <+10124>:	jmp    0x1cb0d7 <->+10151>
   0x00000000001cb0be <+10126>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb0c5 <+10133>:	mov    eax,0xb6
   0x00000000001cb0ca <+10138>:	cmp    eax,ecx
   0x00000000001cb0cc <+10140>:	je     0x1cb54d <->+11293>
   0x00000000001cb0d2 <+10146>:	jmp    0x1cb55f <->+11311>
   0x00000000001cb0d7 <+10151>:	mov    rsi,QWORD PTR [rsp+0x490]
   0x00000000001cb0df <+10159>:	lea    rdi,[rsp+0xb10]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cb0e7 <+10167>:	call   0x362700 <next>
   0x00000000001cb0ec <+10172>:	mov    eax,DWORD PTR [rsp+0xb10]
   0x00000000001cb0f3 <+10179>:	mov    rcx,QWORD PTR [rsp+0xb18]
   0x00000000001cb0fb <+10187>:	mov    rdx,QWORD PTR [rsp+0xb20]
   0x00000000001cb103 <+10195>:	mov    rsi,QWORD PTR [rsp+0xb28]
   0x00000000001cb10b <+10203>:	mov    rdi,QWORD PTR [rsp+0xb30]
   0x00000000001cb113 <+10211>:	mov    QWORD PTR [rsp+0x4188],rdi
   0x00000000001cb11b <+10219>:	mov    QWORD PTR [rsp+0x4180],rsi
   0x00000000001cb123 <+10227>:	mov    QWORD PTR [rsp+0x4178],rdx
   0x00000000001cb12b <+10235>:	mov    QWORD PTR [rsp+0x4170],rcx
   0x00000000001cb133 <+10243>:	mov    DWORD PTR [rsp+0x4168],eax
   0x00000000001cb13a <+10250>:	mov    eax,DWORD PTR [rsp+0x4168]
   0x00000000001cb141 <+10257>:	mov    rcx,QWORD PTR [rsp+0x4170]
   0x00000000001cb149 <+10265>:	mov    rdx,QWORD PTR [rsp+0x4178]
   0x00000000001cb151 <+10273>:	mov    rsi,QWORD PTR [rsp+0x4180]
   0x00000000001cb159 <+10281>:	mov    rdi,QWORD PTR [rsp+0x4188]
   0x00000000001cb161 <+10289>:	mov    QWORD PTR [rsp+0x41b0],rdi
   0x00000000001cb169 <+10297>:	mov    QWORD PTR [rsp+0x41a8],rsi
   0x00000000001cb171 <+10305>:	mov    QWORD PTR [rsp+0x41a0],rdx
   0x00000000001cb179 <+10313>:	mov    QWORD PTR [rsp+0x4198],rcx
   0x00000000001cb181 <+10321>:	mov    DWORD PTR [rsp+0x4190],eax

637	      break if value.is_a?(Stop)
   0x00000000001cb188 <+10328>:	mov    eax,0xa3
   0x00000000001cb18d <+10333>:	cmp    eax,DWORD PTR [rsp+0x4190]
   0x00000000001cb194 <+10340>:	jne    0x1cb19b <->+10347>
   0x00000000001cb196 <+10342>:	jmp    0x1cb23a <->+10506>
   0x00000000001cb19b <+10347>:	mov    eax,DWORD PTR [rsp+0x4198]
   0x00000000001cb1a2 <+10354>:	mov    rcx,QWORD PTR [rsp+0x41a0]
   0x00000000001cb1aa <+10362>:	mov    rdx,QWORD PTR [rsp+0x41a8]
   0x00000000001cb1b2 <+10370>:	mov    rsi,QWORD PTR [rsp+0x41b0]
   0x00000000001cb1ba <+10378>:	mov    QWORD PTR [rsp+0x41d0],rsi
   0x00000000001cb1c2 <+10386>:	mov    QWORD PTR [rsp+0x41c8],rdx
   0x00000000001cb1ca <+10394>:	mov    QWORD PTR [rsp+0x41c0],rcx
   0x00000000001cb1d2 <+10402>:	mov    DWORD PTR [rsp+0x41b8],eax
   0x00000000001cb1d9 <+10409>:	mov    eax,DWORD PTR [rsp+0x41b8]
   0x00000000001cb1e0 <+10416>:	mov    rcx,QWORD PTR [rsp+0x41c0]
   0x00000000001cb1e8 <+10424>:	mov    rdx,QWORD PTR [rsp+0x41c8]
   0x00000000001cb1f0 <+10432>:	mov    rsi,QWORD PTR [rsp+0x41d0]
   0x00000000001cb1f8 <+10440>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001cb200 <+10448>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001cb208 <+10456>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001cb210 <+10464>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001cb217 <+10471>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cb21e <+10478>:	mov    DWORD PTR [rsp+0x48c],ecx
   0x00000000001cb225 <+10485>:	mov    eax,0x4ed
   0x00000000001cb22a <+10490>:	cmp    eax,ecx
   0x00000000001cb22c <+10492>:	sete   al
   0x00000000001cb22f <+10495>:	and    al,0x1
   0x00000000001cb231 <+10497>:	test   al,0x1
   0x00000000001cb233 <+10499>:	jne    0x1cb23f <->+10511>
   0x00000000001cb235 <+10501>:	jmp    0x1cb2bb <->+10635>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb23a <+10506>:	jmp    0x1c99f1 <->+4289>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001cb23f <+10511>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cb247 <+10519>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cb24f <+10527>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cb257 <+10535>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cb25e <+10542>:	lea    rdi,[rsp+0xab0]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cb266 <+10550>:	call   0x339d20 <new>
   0x00000000001cb26b <+10555>:	mov    eax,DWORD PTR [rsp+0xab0]
   0x00000000001cb272 <+10562>:	mov    rcx,QWORD PTR [rsp+0xab8]
   0x00000000001cb27a <+10570>:	mov    rdx,QWORD PTR [rsp+0xac0]
   0x00000000001cb282 <+10578>:	mov    rsi,QWORD PTR [rsp+0xac8]
   0x00000000001cb28a <+10586>:	mov    QWORD PTR [rsp+0x4160],rsi
   0x00000000001cb292 <+10594>:	mov    QWORD PTR [rsp+0x4158],rdx
   0x00000000001cb29a <+10602>:	mov    QWORD PTR [rsp+0x4150],rcx
   0x00000000001cb2a2 <+10610>:	mov    DWORD PTR [rsp+0x4148],eax
   0x00000000001cb2a9 <+10617>:	lea    rax,[rsp+0x4148]
   0x00000000001cb2b1 <+10625>:	mov    QWORD PTR [rsp+0x480],rax
   0x00000000001cb2b9 <+10633>:	jmp    0x1cb2d6 <->+10662>
   0x00000000001cb2bb <+10635>:	mov    edi,DWORD PTR [rsp+0x48c]
   0x00000000001cb2c2 <+10642>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cb2c7 <+10647>:	and    al,0x1
   0x00000000001cb2c9 <+10649>:	test   al,0x1
   0x00000000001cb2cb <+10651>:	jne    0x1cb3fb <->+10955>
   0x00000000001cb2d1 <+10657>:	jmp    0x1cb47a <->+11082>
   0x00000000001cb2d6 <+10662>:	mov    rsi,QWORD PTR [rsp+0x480]
   0x00000000001cb2de <+10670>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cb2e0 <+10672>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cb2e4 <+10676>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cb2e8 <+10680>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cb2ec <+10684>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cb2f4 <+10692>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cb2fc <+10700>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cb304 <+10708>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb30b <+10715>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cb312 <+10722>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cb31a <+10730>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cb322 <+10738>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cb32a <+10746>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cb332 <+10754>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cb33a <+10762>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cb342 <+10770>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cb349 <+10777>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cb351 <+10785>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cb359 <+10793>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cb361 <+10801>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cb368 <+10808>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001cb370 <+10816>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001cb378 <+10824>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001cb380 <+10832>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cb388 <+10840>:	mov    rax,rsp
   0x00000000001cb38b <+10843>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cb38f <+10847>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cb393 <+10851>:	mov    QWORD PTR [rax],rdi
   0x00000000001cb396 <+10854>:	lea    rdi,[rsp+0xa90]
   0x00000000001cb39e <+10862>:	call   0x511190 <resolve_getattr>
   0x00000000001cb3a3 <+10867>:	mov    eax,DWORD PTR [rsp+0xa90]
   0x00000000001cb3aa <+10874>:	mov    rcx,QWORD PTR [rsp+0xa98]
   0x00000000001cb3b2 <+10882>:	mov    rdx,QWORD PTR [rsp+0xaa0]
   0x00000000001cb3ba <+10890>:	mov    rsi,QWORD PTR [rsp+0xaa8]
   0x00000000001cb3c2 <+10898>:	mov    QWORD PTR [rsp+0x4100],rsi
   0x00000000001cb3ca <+10906>:	mov    QWORD PTR [rsp+0x40f8],rdx
   0x00000000001cb3d2 <+10914>:	mov    QWORD PTR [rsp+0x40f0],rcx
   0x00000000001cb3da <+10922>:	mov    DWORD PTR [rsp+0x40e8],eax
   0x00000000001cb3e1 <+10929>:	lea    rdi,[rsp+0x40e8]
   0x00000000001cb3e9 <+10937>:	call   0x343280 <truthy?>
   0x00000000001cb3ee <+10942>:	test   al,0x1
   0x00000000001cb3f0 <+10944>:	jne    0x1cb518 <->+11240>
   0x00000000001cb3f6 <+10950>:	jmp    0x1cb546 <->+11286>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cb3fb <+10955>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cb403 <+10963>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cb40b <+10971>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cb413 <+10979>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cb41a <+10986>:	lea    rdi,[rsp+0xad0]
   0x00000000001cb422 <+10994>:	call   0x340b10 <new>
   0x00000000001cb427 <+10999>:	mov    eax,DWORD PTR [rsp+0xad0]
   0x00000000001cb42e <+11006>:	mov    rcx,QWORD PTR [rsp+0xad8]
   0x00000000001cb436 <+11014>:	mov    rdx,QWORD PTR [rsp+0xae0]
   0x00000000001cb43e <+11022>:	mov    rsi,QWORD PTR [rsp+0xae8]
   0x00000000001cb446 <+11030>:	mov    QWORD PTR [rsp+0x4140],rsi
   0x00000000001cb44e <+11038>:	mov    QWORD PTR [rsp+0x4138],rdx
   0x00000000001cb456 <+11046>:	mov    QWORD PTR [rsp+0x4130],rcx
   0x00000000001cb45e <+11054>:	mov    DWORD PTR [rsp+0x4128],eax
   0x00000000001cb465 <+11061>:	lea    rax,[rsp+0x4128]
   0x00000000001cb46d <+11069>:	mov    QWORD PTR [rsp+0x480],rax
   0x00000000001cb475 <+11077>:	jmp    0x1cb2d6 <->+10662>
   0x00000000001cb47a <+11082>:	mov    edi,DWORD PTR [rsp+0x48c]
   0x00000000001cb481 <+11089>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cb486 <+11094>:	and    al,0x1
   0x00000000001cb488 <+11096>:	test   al,0x1
   0x00000000001cb48a <+11098>:	jne    0x1cb491 <->+11105>
   0x00000000001cb48c <+11100>:	jmp    0x1cb518 <->+11240>
   0x00000000001cb491 <+11105>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cb499 <+11113>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cb4a1 <+11121>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cb4a9 <+11129>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cb4b1 <+11137>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cb4b8 <+11144>:	lea    rdi,[rsp+0xaf0]
   0x00000000001cb4c0 <+11152>:	call   0x340cb0 <new>
   0x00000000001cb4c5 <+11157>:	mov    eax,DWORD PTR [rsp+0xaf0]
   0x00000000001cb4cc <+11164>:	mov    rcx,QWORD PTR [rsp+0xaf8]
   0x00000000001cb4d4 <+11172>:	mov    rdx,QWORD PTR [rsp+0xb00]
   0x00000000001cb4dc <+11180>:	mov    rsi,QWORD PTR [rsp+0xb08]
   0x00000000001cb4e4 <+11188>:	mov    QWORD PTR [rsp+0x4120],rsi
   0x00000000001cb4ec <+11196>:	mov    QWORD PTR [rsp+0x4118],rdx
   0x00000000001cb4f4 <+11204>:	mov    QWORD PTR [rsp+0x4110],rcx
   0x00000000001cb4fc <+11212>:	mov    DWORD PTR [rsp+0x4108],eax
   0x00000000001cb503 <+11219>:	lea    rax,[rsp+0x4108]
   0x00000000001cb50b <+11227>:	mov    QWORD PTR [rsp+0x480],rax
   0x00000000001cb513 <+11235>:	jmp    0x1cb2d6 <->+10662>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cb518 <+11240>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cb520 <+11248>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cb528 <+11256>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cb530 <+11264>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cb538 <+11272>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb53f <+11279>:	call   0x326080 <<<>
   0x00000000001cb544 <+11284>:	jmp    0x1cb548 <->+11288>
   0x00000000001cb546 <+11286>:	jmp    0x1cb548 <->+11288>
   0x00000000001cb548 <+11288>:	jmp    0x1cb0d7 <->+10151>
   0x00000000001cb54d <+11293>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cb555 <+11301>:	mov    QWORD PTR [rsp+0x478],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cb55d <+11309>:	jmp    0x1cb578 <->+11336>
   0x00000000001cb55f <+11311>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb566 <+11318>:	mov    eax,0xb7
   0x00000000001cb56b <+11323>:	cmp    eax,ecx
   0x00000000001cb56d <+11325>:	je     0x1cb9ee <->+12478>
   0x00000000001cb573 <+11331>:	jmp    0x1cba00 <->+12496>
   0x00000000001cb578 <+11336>:	mov    rsi,QWORD PTR [rsp+0x478]
   0x00000000001cb580 <+11344>:	lea    rdi,[rsp+0xbb8]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cb588 <+11352>:	call   0x363cf0 <next>
   0x00000000001cb58d <+11357>:	mov    eax,DWORD PTR [rsp+0xbb8]
   0x00000000001cb594 <+11364>:	mov    rcx,QWORD PTR [rsp+0xbc0]
   0x00000000001cb59c <+11372>:	mov    rdx,QWORD PTR [rsp+0xbc8]
   0x00000000001cb5a4 <+11380>:	mov    rsi,QWORD PTR [rsp+0xbd0]
   0x00000000001cb5ac <+11388>:	mov    rdi,QWORD PTR [rsp+0xbd8]
   0x00000000001cb5b4 <+11396>:	mov    QWORD PTR [rsp+0x4098],rdi
   0x00000000001cb5bc <+11404>:	mov    QWORD PTR [rsp+0x4090],rsi
   0x00000000001cb5c4 <+11412>:	mov    QWORD PTR [rsp+0x4088],rdx
   0x00000000001cb5cc <+11420>:	mov    QWORD PTR [rsp+0x4080],rcx
   0x00000000001cb5d4 <+11428>:	mov    DWORD PTR [rsp+0x4078],eax
   0x00000000001cb5db <+11435>:	mov    eax,DWORD PTR [rsp+0x4078]
   0x00000000001cb5e2 <+11442>:	mov    rcx,QWORD PTR [rsp+0x4080]
   0x00000000001cb5ea <+11450>:	mov    rdx,QWORD PTR [rsp+0x4088]
   0x00000000001cb5f2 <+11458>:	mov    rsi,QWORD PTR [rsp+0x4090]
   0x00000000001cb5fa <+11466>:	mov    rdi,QWORD PTR [rsp+0x4098]
   0x00000000001cb602 <+11474>:	mov    QWORD PTR [rsp+0x40c0],rdi
   0x00000000001cb60a <+11482>:	mov    QWORD PTR [rsp+0x40b8],rsi
   0x00000000001cb612 <+11490>:	mov    QWORD PTR [rsp+0x40b0],rdx
   0x00000000001cb61a <+11498>:	mov    QWORD PTR [rsp+0x40a8],rcx
   0x00000000001cb622 <+11506>:	mov    DWORD PTR [rsp+0x40a0],eax

637	      break if value.is_a?(Stop)
   0x00000000001cb629 <+11513>:	mov    eax,0xa3
   0x00000000001cb62e <+11518>:	cmp    eax,DWORD PTR [rsp+0x40a0]
   0x00000000001cb635 <+11525>:	jne    0x1cb63c <->+11532>
   0x00000000001cb637 <+11527>:	jmp    0x1cb6db <->+11691>
   0x00000000001cb63c <+11532>:	mov    eax,DWORD PTR [rsp+0x40a8]
   0x00000000001cb643 <+11539>:	mov    rcx,QWORD PTR [rsp+0x40b0]
   0x00000000001cb64b <+11547>:	mov    rdx,QWORD PTR [rsp+0x40b8]
   0x00000000001cb653 <+11555>:	mov    rsi,QWORD PTR [rsp+0x40c0]
   0x00000000001cb65b <+11563>:	mov    QWORD PTR [rsp+0x40e0],rsi
   0x00000000001cb663 <+11571>:	mov    QWORD PTR [rsp+0x40d8],rdx
   0x00000000001cb66b <+11579>:	mov    QWORD PTR [rsp+0x40d0],rcx
   0x00000000001cb673 <+11587>:	mov    DWORD PTR [rsp+0x40c8],eax
   0x00000000001cb67a <+11594>:	mov    eax,DWORD PTR [rsp+0x40c8]
   0x00000000001cb681 <+11601>:	mov    rcx,QWORD PTR [rsp+0x40d0]
   0x00000000001cb689 <+11609>:	mov    rdx,QWORD PTR [rsp+0x40d8]
   0x00000000001cb691 <+11617>:	mov    rsi,QWORD PTR [rsp+0x40e0]
   0x00000000001cb699 <+11625>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001cb6a1 <+11633>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001cb6a9 <+11641>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001cb6b1 <+11649>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001cb6b8 <+11656>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cb6bf <+11663>:	mov    DWORD PTR [rsp+0x474],ecx
   0x00000000001cb6c6 <+11670>:	mov    eax,0x4ed
   0x00000000001cb6cb <+11675>:	cmp    eax,ecx
   0x00000000001cb6cd <+11677>:	sete   al
   0x00000000001cb6d0 <+11680>:	and    al,0x1
   0x00000000001cb6d2 <+11682>:	test   al,0x1
   0x00000000001cb6d4 <+11684>:	jne    0x1cb6e0 <->+11696>
   0x00000000001cb6d6 <+11686>:	jmp    0x1cb75c <->+11820>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb6db <+11691>:	jmp    0x1c99f1 <->+4289>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001cb6e0 <+11696>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cb6e8 <+11704>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cb6f0 <+11712>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cb6f8 <+11720>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cb6ff <+11727>:	lea    rdi,[rsp+0xb58]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cb707 <+11735>:	call   0x339d20 <new>
   0x00000000001cb70c <+11740>:	mov    eax,DWORD PTR [rsp+0xb58]
   0x00000000001cb713 <+11747>:	mov    rcx,QWORD PTR [rsp+0xb60]
   0x00000000001cb71b <+11755>:	mov    rdx,QWORD PTR [rsp+0xb68]
   0x00000000001cb723 <+11763>:	mov    rsi,QWORD PTR [rsp+0xb70]
   0x00000000001cb72b <+11771>:	mov    QWORD PTR [rsp+0x4070],rsi
   0x00000000001cb733 <+11779>:	mov    QWORD PTR [rsp+0x4068],rdx
   0x00000000001cb73b <+11787>:	mov    QWORD PTR [rsp+0x4060],rcx
   0x00000000001cb743 <+11795>:	mov    DWORD PTR [rsp+0x4058],eax
   0x00000000001cb74a <+11802>:	lea    rax,[rsp+0x4058]
   0x00000000001cb752 <+11810>:	mov    QWORD PTR [rsp+0x468],rax
   0x00000000001cb75a <+11818>:	jmp    0x1cb777 <->+11847>
   0x00000000001cb75c <+11820>:	mov    edi,DWORD PTR [rsp+0x474]
   0x00000000001cb763 <+11827>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cb768 <+11832>:	and    al,0x1
   0x00000000001cb76a <+11834>:	test   al,0x1
   0x00000000001cb76c <+11836>:	jne    0x1cb89c <->+12140>
   0x00000000001cb772 <+11842>:	jmp    0x1cb91b <->+12267>
   0x00000000001cb777 <+11847>:	mov    rsi,QWORD PTR [rsp+0x468]
   0x00000000001cb77f <+11855>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cb781 <+11857>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cb785 <+11861>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cb789 <+11865>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cb78d <+11869>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cb795 <+11877>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cb79d <+11885>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cb7a5 <+11893>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb7ac <+11900>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cb7b3 <+11907>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cb7bb <+11915>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cb7c3 <+11923>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cb7cb <+11931>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cb7d3 <+11939>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cb7db <+11947>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cb7e3 <+11955>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cb7ea <+11962>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cb7f2 <+11970>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cb7fa <+11978>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cb802 <+11986>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cb809 <+11993>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001cb811 <+12001>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001cb819 <+12009>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001cb821 <+12017>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cb829 <+12025>:	mov    rax,rsp
   0x00000000001cb82c <+12028>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cb830 <+12032>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cb834 <+12036>:	mov    QWORD PTR [rax],rdi
   0x00000000001cb837 <+12039>:	lea    rdi,[rsp+0xb38]
   0x00000000001cb83f <+12047>:	call   0x511190 <resolve_getattr>
   0x00000000001cb844 <+12052>:	mov    eax,DWORD PTR [rsp+0xb38]
   0x00000000001cb84b <+12059>:	mov    rcx,QWORD PTR [rsp+0xb40]
   0x00000000001cb853 <+12067>:	mov    rdx,QWORD PTR [rsp+0xb48]
   0x00000000001cb85b <+12075>:	mov    rsi,QWORD PTR [rsp+0xb50]
   0x00000000001cb863 <+12083>:	mov    QWORD PTR [rsp+0x4010],rsi
   0x00000000001cb86b <+12091>:	mov    QWORD PTR [rsp+0x4008],rdx
   0x00000000001cb873 <+12099>:	mov    QWORD PTR [rsp+0x4000],rcx
   0x00000000001cb87b <+12107>:	mov    DWORD PTR [rsp+0x3ff8],eax
   0x00000000001cb882 <+12114>:	lea    rdi,[rsp+0x3ff8]
   0x00000000001cb88a <+12122>:	call   0x343280 <truthy?>
   0x00000000001cb88f <+12127>:	test   al,0x1
   0x00000000001cb891 <+12129>:	jne    0x1cb9b9 <->+12425>
   0x00000000001cb897 <+12135>:	jmp    0x1cb9e7 <->+12471>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cb89c <+12140>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cb8a4 <+12148>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cb8ac <+12156>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cb8b4 <+12164>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cb8bb <+12171>:	lea    rdi,[rsp+0xb78]
   0x00000000001cb8c3 <+12179>:	call   0x340b10 <new>
   0x00000000001cb8c8 <+12184>:	mov    eax,DWORD PTR [rsp+0xb78]
   0x00000000001cb8cf <+12191>:	mov    rcx,QWORD PTR [rsp+0xb80]
   0x00000000001cb8d7 <+12199>:	mov    rdx,QWORD PTR [rsp+0xb88]
   0x00000000001cb8df <+12207>:	mov    rsi,QWORD PTR [rsp+0xb90]
   0x00000000001cb8e7 <+12215>:	mov    QWORD PTR [rsp+0x4050],rsi
   0x00000000001cb8ef <+12223>:	mov    QWORD PTR [rsp+0x4048],rdx
   0x00000000001cb8f7 <+12231>:	mov    QWORD PTR [rsp+0x4040],rcx
   0x00000000001cb8ff <+12239>:	mov    DWORD PTR [rsp+0x4038],eax
   0x00000000001cb906 <+12246>:	lea    rax,[rsp+0x4038]
   0x00000000001cb90e <+12254>:	mov    QWORD PTR [rsp+0x468],rax
   0x00000000001cb916 <+12262>:	jmp    0x1cb777 <->+11847>
   0x00000000001cb91b <+12267>:	mov    edi,DWORD PTR [rsp+0x474]
   0x00000000001cb922 <+12274>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cb927 <+12279>:	and    al,0x1
   0x00000000001cb929 <+12281>:	test   al,0x1
   0x00000000001cb92b <+12283>:	jne    0x1cb932 <->+12290>
   0x00000000001cb92d <+12285>:	jmp    0x1cb9b9 <->+12425>
   0x00000000001cb932 <+12290>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cb93a <+12298>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cb942 <+12306>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cb94a <+12314>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cb952 <+12322>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cb959 <+12329>:	lea    rdi,[rsp+0xb98]
   0x00000000001cb961 <+12337>:	call   0x340cb0 <new>
   0x00000000001cb966 <+12342>:	mov    eax,DWORD PTR [rsp+0xb98]
   0x00000000001cb96d <+12349>:	mov    rcx,QWORD PTR [rsp+0xba0]
   0x00000000001cb975 <+12357>:	mov    rdx,QWORD PTR [rsp+0xba8]
   0x00000000001cb97d <+12365>:	mov    rsi,QWORD PTR [rsp+0xbb0]
   0x00000000001cb985 <+12373>:	mov    QWORD PTR [rsp+0x4030],rsi
   0x00000000001cb98d <+12381>:	mov    QWORD PTR [rsp+0x4028],rdx
   0x00000000001cb995 <+12389>:	mov    QWORD PTR [rsp+0x4020],rcx
   0x00000000001cb99d <+12397>:	mov    DWORD PTR [rsp+0x4018],eax
   0x00000000001cb9a4 <+12404>:	lea    rax,[rsp+0x4018]
   0x00000000001cb9ac <+12412>:	mov    QWORD PTR [rsp+0x468],rax
   0x00000000001cb9b4 <+12420>:	jmp    0x1cb777 <->+11847>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cb9b9 <+12425>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cb9c1 <+12433>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cb9c9 <+12441>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cb9d1 <+12449>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cb9d9 <+12457>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cb9e0 <+12464>:	call   0x326080 <<<>
   0x00000000001cb9e5 <+12469>:	jmp    0x1cb9e9 <->+12473>
   0x00000000001cb9e7 <+12471>:	jmp    0x1cb9e9 <->+12473>
   0x00000000001cb9e9 <+12473>:	jmp    0x1cb578 <->+11336>
   0x00000000001cb9ee <+12478>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cb9f6 <+12486>:	mov    QWORD PTR [rsp+0x460],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cb9fe <+12494>:	jmp    0x1cba19 <->+12521>
   0x00000000001cba00 <+12496>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cba07 <+12503>:	mov    eax,0xba
   0x00000000001cba0c <+12508>:	cmp    eax,ecx
   0x00000000001cba0e <+12510>:	je     0x1cbe8f <->+13663>
   0x00000000001cba14 <+12516>:	jmp    0x1cbea1 <->+13681>
   0x00000000001cba19 <+12521>:	mov    rsi,QWORD PTR [rsp+0x460]
   0x00000000001cba21 <+12529>:	lea    rdi,[rsp+0xc60]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cba29 <+12537>:	call   0x365740 <next>
   0x00000000001cba2e <+12542>:	mov    eax,DWORD PTR [rsp+0xc60]
   0x00000000001cba35 <+12549>:	mov    rcx,QWORD PTR [rsp+0xc68]
   0x00000000001cba3d <+12557>:	mov    rdx,QWORD PTR [rsp+0xc70]
   0x00000000001cba45 <+12565>:	mov    rsi,QWORD PTR [rsp+0xc78]
   0x00000000001cba4d <+12573>:	mov    rdi,QWORD PTR [rsp+0xc80]
   0x00000000001cba55 <+12581>:	mov    QWORD PTR [rsp+0x3fa8],rdi
   0x00000000001cba5d <+12589>:	mov    QWORD PTR [rsp+0x3fa0],rsi
   0x00000000001cba65 <+12597>:	mov    QWORD PTR [rsp+0x3f98],rdx
   0x00000000001cba6d <+12605>:	mov    QWORD PTR [rsp+0x3f90],rcx
   0x00000000001cba75 <+12613>:	mov    DWORD PTR [rsp+0x3f88],eax
   0x00000000001cba7c <+12620>:	mov    eax,DWORD PTR [rsp+0x3f88]
   0x00000000001cba83 <+12627>:	mov    rcx,QWORD PTR [rsp+0x3f90]
   0x00000000001cba8b <+12635>:	mov    rdx,QWORD PTR [rsp+0x3f98]
   0x00000000001cba93 <+12643>:	mov    rsi,QWORD PTR [rsp+0x3fa0]
   0x00000000001cba9b <+12651>:	mov    rdi,QWORD PTR [rsp+0x3fa8]
   0x00000000001cbaa3 <+12659>:	mov    QWORD PTR [rsp+0x3fd0],rdi
   0x00000000001cbaab <+12667>:	mov    QWORD PTR [rsp+0x3fc8],rsi
   0x00000000001cbab3 <+12675>:	mov    QWORD PTR [rsp+0x3fc0],rdx
   0x00000000001cbabb <+12683>:	mov    QWORD PTR [rsp+0x3fb8],rcx
   0x00000000001cbac3 <+12691>:	mov    DWORD PTR [rsp+0x3fb0],eax

637	      break if value.is_a?(Stop)
   0x00000000001cbaca <+12698>:	mov    eax,0xa3
   0x00000000001cbacf <+12703>:	cmp    eax,DWORD PTR [rsp+0x3fb0]
   0x00000000001cbad6 <+12710>:	jne    0x1cbadd <->+12717>
   0x00000000001cbad8 <+12712>:	jmp    0x1cbb7c <->+12876>
   0x00000000001cbadd <+12717>:	mov    eax,DWORD PTR [rsp+0x3fb8]
   0x00000000001cbae4 <+12724>:	mov    rcx,QWORD PTR [rsp+0x3fc0]
   0x00000000001cbaec <+12732>:	mov    rdx,QWORD PTR [rsp+0x3fc8]
   0x00000000001cbaf4 <+12740>:	mov    rsi,QWORD PTR [rsp+0x3fd0]
   0x00000000001cbafc <+12748>:	mov    QWORD PTR [rsp+0x3ff0],rsi
   0x00000000001cbb04 <+12756>:	mov    QWORD PTR [rsp+0x3fe8],rdx
   0x00000000001cbb0c <+12764>:	mov    QWORD PTR [rsp+0x3fe0],rcx
   0x00000000001cbb14 <+12772>:	mov    DWORD PTR [rsp+0x3fd8],eax
   0x00000000001cbb1b <+12779>:	mov    eax,DWORD PTR [rsp+0x3fd8]
   0x00000000001cbb22 <+12786>:	mov    rcx,QWORD PTR [rsp+0x3fe0]
   0x00000000001cbb2a <+12794>:	mov    rdx,QWORD PTR [rsp+0x3fe8]
   0x00000000001cbb32 <+12802>:	mov    rsi,QWORD PTR [rsp+0x3ff0]
   0x00000000001cbb3a <+12810>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001cbb42 <+12818>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001cbb4a <+12826>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001cbb52 <+12834>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001cbb59 <+12841>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cbb60 <+12848>:	mov    DWORD PTR [rsp+0x45c],ecx
   0x00000000001cbb67 <+12855>:	mov    eax,0x4ed
   0x00000000001cbb6c <+12860>:	cmp    eax,ecx
   0x00000000001cbb6e <+12862>:	sete   al
   0x00000000001cbb71 <+12865>:	and    al,0x1
   0x00000000001cbb73 <+12867>:	test   al,0x1
   0x00000000001cbb75 <+12869>:	jne    0x1cbb81 <->+12881>
   0x00000000001cbb77 <+12871>:	jmp    0x1cbbfd <->+13005>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cbb7c <+12876>:	jmp    0x1c99f1 <->+4289>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001cbb81 <+12881>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cbb89 <+12889>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cbb91 <+12897>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cbb99 <+12905>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cbba0 <+12912>:	lea    rdi,[rsp+0xc00]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cbba8 <+12920>:	call   0x339d20 <new>
   0x00000000001cbbad <+12925>:	mov    eax,DWORD PTR [rsp+0xc00]
   0x00000000001cbbb4 <+12932>:	mov    rcx,QWORD PTR [rsp+0xc08]
   0x00000000001cbbbc <+12940>:	mov    rdx,QWORD PTR [rsp+0xc10]
   0x00000000001cbbc4 <+12948>:	mov    rsi,QWORD PTR [rsp+0xc18]
   0x00000000001cbbcc <+12956>:	mov    QWORD PTR [rsp+0x3f80],rsi
   0x00000000001cbbd4 <+12964>:	mov    QWORD PTR [rsp+0x3f78],rdx
   0x00000000001cbbdc <+12972>:	mov    QWORD PTR [rsp+0x3f70],rcx
   0x00000000001cbbe4 <+12980>:	mov    DWORD PTR [rsp+0x3f68],eax
   0x00000000001cbbeb <+12987>:	lea    rax,[rsp+0x3f68]
   0x00000000001cbbf3 <+12995>:	mov    QWORD PTR [rsp+0x450],rax
   0x00000000001cbbfb <+13003>:	jmp    0x1cbc18 <->+13032>
   0x00000000001cbbfd <+13005>:	mov    edi,DWORD PTR [rsp+0x45c]
   0x00000000001cbc04 <+13012>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cbc09 <+13017>:	and    al,0x1
   0x00000000001cbc0b <+13019>:	test   al,0x1
   0x00000000001cbc0d <+13021>:	jne    0x1cbd3d <->+13325>
   0x00000000001cbc13 <+13027>:	jmp    0x1cbdbc <->+13452>
   0x00000000001cbc18 <+13032>:	mov    rsi,QWORD PTR [rsp+0x450]
   0x00000000001cbc20 <+13040>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cbc22 <+13042>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cbc26 <+13046>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cbc2a <+13050>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cbc2e <+13054>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cbc36 <+13062>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cbc3e <+13070>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cbc46 <+13078>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cbc4d <+13085>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cbc54 <+13092>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cbc5c <+13100>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cbc64 <+13108>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cbc6c <+13116>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cbc74 <+13124>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cbc7c <+13132>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cbc84 <+13140>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cbc8b <+13147>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cbc93 <+13155>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cbc9b <+13163>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cbca3 <+13171>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cbcaa <+13178>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001cbcb2 <+13186>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001cbcba <+13194>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001cbcc2 <+13202>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cbcca <+13210>:	mov    rax,rsp
   0x00000000001cbccd <+13213>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cbcd1 <+13217>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cbcd5 <+13221>:	mov    QWORD PTR [rax],rdi
   0x00000000001cbcd8 <+13224>:	lea    rdi,[rsp+0xbe0]
   0x00000000001cbce0 <+13232>:	call   0x511190 <resolve_getattr>
   0x00000000001cbce5 <+13237>:	mov    eax,DWORD PTR [rsp+0xbe0]
   0x00000000001cbcec <+13244>:	mov    rcx,QWORD PTR [rsp+0xbe8]
   0x00000000001cbcf4 <+13252>:	mov    rdx,QWORD PTR [rsp+0xbf0]
   0x00000000001cbcfc <+13260>:	mov    rsi,QWORD PTR [rsp+0xbf8]
   0x00000000001cbd04 <+13268>:	mov    QWORD PTR [rsp+0x3f20],rsi
   0x00000000001cbd0c <+13276>:	mov    QWORD PTR [rsp+0x3f18],rdx
   0x00000000001cbd14 <+13284>:	mov    QWORD PTR [rsp+0x3f10],rcx
   0x00000000001cbd1c <+13292>:	mov    DWORD PTR [rsp+0x3f08],eax
   0x00000000001cbd23 <+13299>:	lea    rdi,[rsp+0x3f08]
   0x00000000001cbd2b <+13307>:	call   0x343280 <truthy?>
   0x00000000001cbd30 <+13312>:	test   al,0x1
   0x00000000001cbd32 <+13314>:	jne    0x1cbe5a <->+13610>
   0x00000000001cbd38 <+13320>:	jmp    0x1cbe88 <->+13656>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cbd3d <+13325>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cbd45 <+13333>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cbd4d <+13341>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cbd55 <+13349>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cbd5c <+13356>:	lea    rdi,[rsp+0xc20]
   0x00000000001cbd64 <+13364>:	call   0x340b10 <new>
   0x00000000001cbd69 <+13369>:	mov    eax,DWORD PTR [rsp+0xc20]
   0x00000000001cbd70 <+13376>:	mov    rcx,QWORD PTR [rsp+0xc28]
   0x00000000001cbd78 <+13384>:	mov    rdx,QWORD PTR [rsp+0xc30]
   0x00000000001cbd80 <+13392>:	mov    rsi,QWORD PTR [rsp+0xc38]
   0x00000000001cbd88 <+13400>:	mov    QWORD PTR [rsp+0x3f60],rsi
   0x00000000001cbd90 <+13408>:	mov    QWORD PTR [rsp+0x3f58],rdx
   0x00000000001cbd98 <+13416>:	mov    QWORD PTR [rsp+0x3f50],rcx
   0x00000000001cbda0 <+13424>:	mov    DWORD PTR [rsp+0x3f48],eax
   0x00000000001cbda7 <+13431>:	lea    rax,[rsp+0x3f48]
   0x00000000001cbdaf <+13439>:	mov    QWORD PTR [rsp+0x450],rax
   0x00000000001cbdb7 <+13447>:	jmp    0x1cbc18 <->+13032>
   0x00000000001cbdbc <+13452>:	mov    edi,DWORD PTR [rsp+0x45c]
   0x00000000001cbdc3 <+13459>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cbdc8 <+13464>:	and    al,0x1
   0x00000000001cbdca <+13466>:	test   al,0x1
   0x00000000001cbdcc <+13468>:	jne    0x1cbdd3 <->+13475>
   0x00000000001cbdce <+13470>:	jmp    0x1cbe5a <->+13610>
   0x00000000001cbdd3 <+13475>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cbddb <+13483>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cbde3 <+13491>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cbdeb <+13499>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cbdf3 <+13507>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cbdfa <+13514>:	lea    rdi,[rsp+0xc40]
   0x00000000001cbe02 <+13522>:	call   0x340cb0 <new>
   0x00000000001cbe07 <+13527>:	mov    eax,DWORD PTR [rsp+0xc40]
   0x00000000001cbe0e <+13534>:	mov    rcx,QWORD PTR [rsp+0xc48]
   0x00000000001cbe16 <+13542>:	mov    rdx,QWORD PTR [rsp+0xc50]
   0x00000000001cbe1e <+13550>:	mov    rsi,QWORD PTR [rsp+0xc58]
   0x00000000001cbe26 <+13558>:	mov    QWORD PTR [rsp+0x3f40],rsi
   0x00000000001cbe2e <+13566>:	mov    QWORD PTR [rsp+0x3f38],rdx
   0x00000000001cbe36 <+13574>:	mov    QWORD PTR [rsp+0x3f30],rcx
   0x00000000001cbe3e <+13582>:	mov    DWORD PTR [rsp+0x3f28],eax
   0x00000000001cbe45 <+13589>:	lea    rax,[rsp+0x3f28]
   0x00000000001cbe4d <+13597>:	mov    QWORD PTR [rsp+0x450],rax
   0x00000000001cbe55 <+13605>:	jmp    0x1cbc18 <->+13032>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cbe5a <+13610>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cbe62 <+13618>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cbe6a <+13626>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cbe72 <+13634>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cbe7a <+13642>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cbe81 <+13649>:	call   0x326080 <<<>
   0x00000000001cbe86 <+13654>:	jmp    0x1cbe8a <->+13658>
   0x00000000001cbe88 <+13656>:	jmp    0x1cbe8a <->+13658>
   0x00000000001cbe8a <+13658>:	jmp    0x1cba19 <->+12521>
   0x00000000001cbe8f <+13663>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cbe97 <+13671>:	mov    QWORD PTR [rsp+0x448],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cbe9f <+13679>:	jmp    0x1cbeba <->+13706>
   0x00000000001cbea1 <+13681>:	mov    ecx,DWORD PTR [rsp+0x53c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cbea8 <+13688>:	mov    eax,0xbb
   0x00000000001cbead <+13693>:	cmp    eax,ecx
   0x00000000001cbeaf <+13695>:	je     0x1cc330 <->+14848>
   0x00000000001cbeb5 <+13701>:	jmp    0x1cc342 <->+14866>
   0x00000000001cbeba <+13706>:	mov    rsi,QWORD PTR [rsp+0x448]
   0x00000000001cbec2 <+13714>:	lea    rdi,[rsp+0xd08]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cbeca <+13722>:	call   0x3671b0 <next>
   0x00000000001cbecf <+13727>:	mov    eax,DWORD PTR [rsp+0xd08]
   0x00000000001cbed6 <+13734>:	mov    rcx,QWORD PTR [rsp+0xd10]
   0x00000000001cbede <+13742>:	mov    rdx,QWORD PTR [rsp+0xd18]
   0x00000000001cbee6 <+13750>:	mov    rsi,QWORD PTR [rsp+0xd20]
   0x00000000001cbeee <+13758>:	mov    rdi,QWORD PTR [rsp+0xd28]
   0x00000000001cbef6 <+13766>:	mov    QWORD PTR [rsp+0x3eb8],rdi
   0x00000000001cbefe <+13774>:	mov    QWORD PTR [rsp+0x3eb0],rsi
   0x00000000001cbf06 <+13782>:	mov    QWORD PTR [rsp+0x3ea8],rdx
   0x00000000001cbf0e <+13790>:	mov    QWORD PTR [rsp+0x3ea0],rcx
   0x00000000001cbf16 <+13798>:	mov    DWORD PTR [rsp+0x3e98],eax
   0x00000000001cbf1d <+13805>:	mov    eax,DWORD PTR [rsp+0x3e98]
   0x00000000001cbf24 <+13812>:	mov    rcx,QWORD PTR [rsp+0x3ea0]
   0x00000000001cbf2c <+13820>:	mov    rdx,QWORD PTR [rsp+0x3ea8]
   0x00000000001cbf34 <+13828>:	mov    rsi,QWORD PTR [rsp+0x3eb0]
   0x00000000001cbf3c <+13836>:	mov    rdi,QWORD PTR [rsp+0x3eb8]
   0x00000000001cbf44 <+13844>:	mov    QWORD PTR [rsp+0x3ee0],rdi
   0x00000000001cbf4c <+13852>:	mov    QWORD PTR [rsp+0x3ed8],rsi
   0x00000000001cbf54 <+13860>:	mov    QWORD PTR [rsp+0x3ed0],rdx
   0x00000000001cbf5c <+13868>:	mov    QWORD PTR [rsp+0x3ec8],rcx
   0x00000000001cbf64 <+13876>:	mov    DWORD PTR [rsp+0x3ec0],eax

637	      break if value.is_a?(Stop)
   0x00000000001cbf6b <+13883>:	mov    eax,0xa3
   0x00000000001cbf70 <+13888>:	cmp    eax,DWORD PTR [rsp+0x3ec0]
   0x00000000001cbf77 <+13895>:	jne    0x1cbf7e <->+13902>
   0x00000000001cbf79 <+13897>:	jmp    0x1cc01d <->+14061>
   0x00000000001cbf7e <+13902>:	mov    eax,DWORD PTR [rsp+0x3ec8]
   0x00000000001cbf85 <+13909>:	mov    rcx,QWORD PTR [rsp+0x3ed0]
   0x00000000001cbf8d <+13917>:	mov    rdx,QWORD PTR [rsp+0x3ed8]
   0x00000000001cbf95 <+13925>:	mov    rsi,QWORD PTR [rsp+0x3ee0]
   0x00000000001cbf9d <+13933>:	mov    QWORD PTR [rsp+0x3f00],rsi
   0x00000000001cbfa5 <+13941>:	mov    QWORD PTR [rsp+0x3ef8],rdx
   0x00000000001cbfad <+13949>:	mov    QWORD PTR [rsp+0x3ef0],rcx
   0x00000000001cbfb5 <+13957>:	mov    DWORD PTR [rsp+0x3ee8],eax
   0x00000000001cbfbc <+13964>:	mov    eax,DWORD PTR [rsp+0x3ee8]
   0x00000000001cbfc3 <+13971>:	mov    rcx,QWORD PTR [rsp+0x3ef0]
   0x00000000001cbfcb <+13979>:	mov    rdx,QWORD PTR [rsp+0x3ef8]
   0x00000000001cbfd3 <+13987>:	mov    rsi,QWORD PTR [rsp+0x3f00]
   0x00000000001cbfdb <+13995>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001cbfe3 <+14003>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001cbfeb <+14011>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001cbff3 <+14019>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001cbffa <+14026>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cc001 <+14033>:	mov    DWORD PTR [rsp+0x444],ecx
   0x00000000001cc008 <+14040>:	mov    eax,0x4ed
   0x00000000001cc00d <+14045>:	cmp    eax,ecx
   0x00000000001cc00f <+14047>:	sete   al
   0x00000000001cc012 <+14050>:	and    al,0x1
   0x00000000001cc014 <+14052>:	test   al,0x1
   0x00000000001cc016 <+14054>:	jne    0x1cc022 <->+14066>
   0x00000000001cc018 <+14056>:	jmp    0x1cc09e <->+14190>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cc01d <+14061>:	jmp    0x1c99f1 <->+4289>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001cc022 <+14066>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cc02a <+14074>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cc032 <+14082>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cc03a <+14090>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cc041 <+14097>:	lea    rdi,[rsp+0xca8]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cc049 <+14105>:	call   0x339d20 <new>
   0x00000000001cc04e <+14110>:	mov    eax,DWORD PTR [rsp+0xca8]
   0x00000000001cc055 <+14117>:	mov    rcx,QWORD PTR [rsp+0xcb0]
   0x00000000001cc05d <+14125>:	mov    rdx,QWORD PTR [rsp+0xcb8]
   0x00000000001cc065 <+14133>:	mov    rsi,QWORD PTR [rsp+0xcc0]
   0x00000000001cc06d <+14141>:	mov    QWORD PTR [rsp+0x3e90],rsi
   0x00000000001cc075 <+14149>:	mov    QWORD PTR [rsp+0x3e88],rdx
   0x00000000001cc07d <+14157>:	mov    QWORD PTR [rsp+0x3e80],rcx
   0x00000000001cc085 <+14165>:	mov    DWORD PTR [rsp+0x3e78],eax
   0x00000000001cc08c <+14172>:	lea    rax,[rsp+0x3e78]
   0x00000000001cc094 <+14180>:	mov    QWORD PTR [rsp+0x438],rax
   0x00000000001cc09c <+14188>:	jmp    0x1cc0b9 <->+14217>
   0x00000000001cc09e <+14190>:	mov    edi,DWORD PTR [rsp+0x444]
   0x00000000001cc0a5 <+14197>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cc0aa <+14202>:	and    al,0x1
   0x00000000001cc0ac <+14204>:	test   al,0x1
   0x00000000001cc0ae <+14206>:	jne    0x1cc1de <->+14510>
   0x00000000001cc0b4 <+14212>:	jmp    0x1cc25d <->+14637>
   0x00000000001cc0b9 <+14217>:	mov    rsi,QWORD PTR [rsp+0x438]
   0x00000000001cc0c1 <+14225>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cc0c3 <+14227>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cc0c7 <+14231>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cc0cb <+14235>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cc0cf <+14239>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cc0d7 <+14247>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cc0df <+14255>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cc0e7 <+14263>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cc0ee <+14270>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cc0f5 <+14277>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cc0fd <+14285>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cc105 <+14293>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cc10d <+14301>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cc115 <+14309>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cc11d <+14317>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cc125 <+14325>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cc12c <+14332>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cc134 <+14340>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cc13c <+14348>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cc144 <+14356>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cc14b <+14363>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001cc153 <+14371>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001cc15b <+14379>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001cc163 <+14387>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cc16b <+14395>:	mov    rax,rsp
   0x00000000001cc16e <+14398>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cc172 <+14402>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cc176 <+14406>:	mov    QWORD PTR [rax],rdi
   0x00000000001cc179 <+14409>:	lea    rdi,[rsp+0xc88]
   0x00000000001cc181 <+14417>:	call   0x511190 <resolve_getattr>
   0x00000000001cc186 <+14422>:	mov    eax,DWORD PTR [rsp+0xc88]
   0x00000000001cc18d <+14429>:	mov    rcx,QWORD PTR [rsp+0xc90]
   0x00000000001cc195 <+14437>:	mov    rdx,QWORD PTR [rsp+0xc98]
   0x00000000001cc19d <+14445>:	mov    rsi,QWORD PTR [rsp+0xca0]
   0x00000000001cc1a5 <+14453>:	mov    QWORD PTR [rsp+0x3e30],rsi
   0x00000000001cc1ad <+14461>:	mov    QWORD PTR [rsp+0x3e28],rdx
   0x00000000001cc1b5 <+14469>:	mov    QWORD PTR [rsp+0x3e20],rcx
   0x00000000001cc1bd <+14477>:	mov    DWORD PTR [rsp+0x3e18],eax
   0x00000000001cc1c4 <+14484>:	lea    rdi,[rsp+0x3e18]
   0x00000000001cc1cc <+14492>:	call   0x343280 <truthy?>
   0x00000000001cc1d1 <+14497>:	test   al,0x1
   0x00000000001cc1d3 <+14499>:	jne    0x1cc2fb <->+14795>
   0x00000000001cc1d9 <+14505>:	jmp    0x1cc329 <->+14841>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cc1de <+14510>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cc1e6 <+14518>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cc1ee <+14526>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cc1f6 <+14534>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cc1fd <+14541>:	lea    rdi,[rsp+0xcc8]
   0x00000000001cc205 <+14549>:	call   0x340b10 <new>
   0x00000000001cc20a <+14554>:	mov    eax,DWORD PTR [rsp+0xcc8]
   0x00000000001cc211 <+14561>:	mov    rcx,QWORD PTR [rsp+0xcd0]
   0x00000000001cc219 <+14569>:	mov    rdx,QWORD PTR [rsp+0xcd8]
   0x00000000001cc221 <+14577>:	mov    rsi,QWORD PTR [rsp+0xce0]
   0x00000000001cc229 <+14585>:	mov    QWORD PTR [rsp+0x3e70],rsi
   0x00000000001cc231 <+14593>:	mov    QWORD PTR [rsp+0x3e68],rdx
   0x00000000001cc239 <+14601>:	mov    QWORD PTR [rsp+0x3e60],rcx
   0x00000000001cc241 <+14609>:	mov    DWORD PTR [rsp+0x3e58],eax
   0x00000000001cc248 <+14616>:	lea    rax,[rsp+0x3e58]
   0x00000000001cc250 <+14624>:	mov    QWORD PTR [rsp+0x438],rax
   0x00000000001cc258 <+14632>:	jmp    0x1cc0b9 <->+14217>
   0x00000000001cc25d <+14637>:	mov    edi,DWORD PTR [rsp+0x444]
   0x00000000001cc264 <+14644>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cc269 <+14649>:	and    al,0x1
   0x00000000001cc26b <+14651>:	test   al,0x1
   0x00000000001cc26d <+14653>:	jne    0x1cc274 <->+14660>
   0x00000000001cc26f <+14655>:	jmp    0x1cc2fb <->+14795>
   0x00000000001cc274 <+14660>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cc27c <+14668>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cc284 <+14676>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cc28c <+14684>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cc294 <+14692>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cc29b <+14699>:	lea    rdi,[rsp+0xce8]
   0x00000000001cc2a3 <+14707>:	call   0x340cb0 <new>
   0x00000000001cc2a8 <+14712>:	mov    eax,DWORD PTR [rsp+0xce8]
   0x00000000001cc2af <+14719>:	mov    rcx,QWORD PTR [rsp+0xcf0]
   0x00000000001cc2b7 <+14727>:	mov    rdx,QWORD PTR [rsp+0xcf8]
   0x00000000001cc2bf <+14735>:	mov    rsi,QWORD PTR [rsp+0xd00]
   0x00000000001cc2c7 <+14743>:	mov    QWORD PTR [rsp+0x3e50],rsi
   0x00000000001cc2cf <+14751>:	mov    QWORD PTR [rsp+0x3e48],rdx
   0x00000000001cc2d7 <+14759>:	mov    QWORD PTR [rsp+0x3e40],rcx
   0x00000000001cc2df <+14767>:	mov    DWORD PTR [rsp+0x3e38],eax
   0x00000000001cc2e6 <+14774>:	lea    rax,[rsp+0x3e38]
   0x00000000001cc2ee <+14782>:	mov    QWORD PTR [rsp+0x438],rax
   0x00000000001cc2f6 <+14790>:	jmp    0x1cc0b9 <->+14217>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cc2fb <+14795>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cc303 <+14803>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cc30b <+14811>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cc313 <+14819>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cc31b <+14827>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cc322 <+14834>:	call   0x326080 <<<>
   0x00000000001cc327 <+14839>:	jmp    0x1cc32b <->+14843>
   0x00000000001cc329 <+14841>:	jmp    0x1cc32b <->+14843>
   0x00000000001cc32b <+14843>:	jmp    0x1cbeba <->+13706>
   0x00000000001cc330 <+14848>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cc338 <+14856>:	mov    QWORD PTR [rsp+0x430],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cc340 <+14864>:	jmp    0x1cc342 <->+14866>
   0x00000000001cc342 <+14866>:	mov    rsi,QWORD PTR [rsp+0x430]
   0x00000000001cc34a <+14874>:	lea    rdi,[rsp+0xdb0]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cc352 <+14882>:	call   0x368be0 <next>
   0x00000000001cc357 <+14887>:	mov    eax,DWORD PTR [rsp+0xdb0]
   0x00000000001cc35e <+14894>:	mov    rcx,QWORD PTR [rsp+0xdb8]
   0x00000000001cc366 <+14902>:	mov    rdx,QWORD PTR [rsp+0xdc0]
   0x00000000001cc36e <+14910>:	mov    rsi,QWORD PTR [rsp+0xdc8]
   0x00000000001cc376 <+14918>:	mov    rdi,QWORD PTR [rsp+0xdd0]
   0x00000000001cc37e <+14926>:	mov    QWORD PTR [rsp+0x3dc8],rdi
   0x00000000001cc386 <+14934>:	mov    QWORD PTR [rsp+0x3dc0],rsi
   0x00000000001cc38e <+14942>:	mov    QWORD PTR [rsp+0x3db8],rdx
   0x00000000001cc396 <+14950>:	mov    QWORD PTR [rsp+0x3db0],rcx
   0x00000000001cc39e <+14958>:	mov    DWORD PTR [rsp+0x3da8],eax
   0x00000000001cc3a5 <+14965>:	mov    eax,DWORD PTR [rsp+0x3da8]
   0x00000000001cc3ac <+14972>:	mov    rcx,QWORD PTR [rsp+0x3db0]
   0x00000000001cc3b4 <+14980>:	mov    rdx,QWORD PTR [rsp+0x3db8]
   0x00000000001cc3bc <+14988>:	mov    rsi,QWORD PTR [rsp+0x3dc0]
   0x00000000001cc3c4 <+14996>:	mov    rdi,QWORD PTR [rsp+0x3dc8]
   0x00000000001cc3cc <+15004>:	mov    QWORD PTR [rsp+0x3df0],rdi
   0x00000000001cc3d4 <+15012>:	mov    QWORD PTR [rsp+0x3de8],rsi
   0x00000000001cc3dc <+15020>:	mov    QWORD PTR [rsp+0x3de0],rdx
   0x00000000001cc3e4 <+15028>:	mov    QWORD PTR [rsp+0x3dd8],rcx
   0x00000000001cc3ec <+15036>:	mov    DWORD PTR [rsp+0x3dd0],eax

637	      break if value.is_a?(Stop)
   0x00000000001cc3f3 <+15043>:	mov    eax,0xa3
   0x00000000001cc3f8 <+15048>:	cmp    eax,DWORD PTR [rsp+0x3dd0]
   0x00000000001cc3ff <+15055>:	jne    0x1cc406 <->+15062>
   0x00000000001cc401 <+15057>:	jmp    0x1cc4a5 <->+15221>
   0x00000000001cc406 <+15062>:	mov    eax,DWORD PTR [rsp+0x3dd8]
   0x00000000001cc40d <+15069>:	mov    rcx,QWORD PTR [rsp+0x3de0]
   0x00000000001cc415 <+15077>:	mov    rdx,QWORD PTR [rsp+0x3de8]
   0x00000000001cc41d <+15085>:	mov    rsi,QWORD PTR [rsp+0x3df0]
   0x00000000001cc425 <+15093>:	mov    QWORD PTR [rsp+0x3e10],rsi
   0x00000000001cc42d <+15101>:	mov    QWORD PTR [rsp+0x3e08],rdx
   0x00000000001cc435 <+15109>:	mov    QWORD PTR [rsp+0x3e00],rcx
   0x00000000001cc43d <+15117>:	mov    DWORD PTR [rsp+0x3df8],eax
   0x00000000001cc444 <+15124>:	mov    eax,DWORD PTR [rsp+0x3df8]
   0x00000000001cc44b <+15131>:	mov    rcx,QWORD PTR [rsp+0x3e00]
   0x00000000001cc453 <+15139>:	mov    rdx,QWORD PTR [rsp+0x3e08]
   0x00000000001cc45b <+15147>:	mov    rsi,QWORD PTR [rsp+0x3e10]
   0x00000000001cc463 <+15155>:	mov    QWORD PTR [rsp+0x4968],rsi
   0x00000000001cc46b <+15163>:	mov    QWORD PTR [rsp+0x4960],rdx
   0x00000000001cc473 <+15171>:	mov    QWORD PTR [rsp+0x4958],rcx
   0x00000000001cc47b <+15179>:	mov    DWORD PTR [rsp+0x4950],eax
   0x00000000001cc482 <+15186>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cc489 <+15193>:	mov    DWORD PTR [rsp+0x42c],ecx
   0x00000000001cc490 <+15200>:	mov    eax,0x4ed
   0x00000000001cc495 <+15205>:	cmp    eax,ecx
   0x00000000001cc497 <+15207>:	sete   al
   0x00000000001cc49a <+15210>:	and    al,0x1
   0x00000000001cc49c <+15212>:	test   al,0x1
   0x00000000001cc49e <+15214>:	jne    0x1cc4aa <->+15226>
   0x00000000001cc4a0 <+15216>:	jmp    0x1cc526 <->+15350>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cc4a5 <+15221>:	jmp    0x1c99f1 <->+4289>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001cc4aa <+15226>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cc4b2 <+15234>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cc4ba <+15242>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cc4c2 <+15250>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cc4c9 <+15257>:	lea    rdi,[rsp+0xd50]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cc4d1 <+15265>:	call   0x339d20 <new>
   0x00000000001cc4d6 <+15270>:	mov    eax,DWORD PTR [rsp+0xd50]
   0x00000000001cc4dd <+15277>:	mov    rcx,QWORD PTR [rsp+0xd58]
   0x00000000001cc4e5 <+15285>:	mov    rdx,QWORD PTR [rsp+0xd60]
   0x00000000001cc4ed <+15293>:	mov    rsi,QWORD PTR [rsp+0xd68]
   0x00000000001cc4f5 <+15301>:	mov    QWORD PTR [rsp+0x3da0],rsi
   0x00000000001cc4fd <+15309>:	mov    QWORD PTR [rsp+0x3d98],rdx
   0x00000000001cc505 <+15317>:	mov    QWORD PTR [rsp+0x3d90],rcx
   0x00000000001cc50d <+15325>:	mov    DWORD PTR [rsp+0x3d88],eax
   0x00000000001cc514 <+15332>:	lea    rax,[rsp+0x3d88]
   0x00000000001cc51c <+15340>:	mov    QWORD PTR [rsp+0x420],rax
   0x00000000001cc524 <+15348>:	jmp    0x1cc541 <->+15377>
   0x00000000001cc526 <+15350>:	mov    edi,DWORD PTR [rsp+0x42c]
   0x00000000001cc52d <+15357>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cc532 <+15362>:	and    al,0x1
   0x00000000001cc534 <+15364>:	test   al,0x1
   0x00000000001cc536 <+15366>:	jne    0x1cc666 <->+15670>
   0x00000000001cc53c <+15372>:	jmp    0x1cc6e5 <->+15797>
   0x00000000001cc541 <+15377>:	mov    rsi,QWORD PTR [rsp+0x420]
   0x00000000001cc549 <+15385>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cc54b <+15387>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cc54f <+15391>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cc553 <+15395>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cc557 <+15399>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cc55f <+15407>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cc567 <+15415>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cc56f <+15423>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cc576 <+15430>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cc57d <+15437>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cc585 <+15445>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cc58d <+15453>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cc595 <+15461>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cc59d <+15469>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cc5a5 <+15477>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cc5ad <+15485>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cc5b4 <+15492>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cc5bc <+15500>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cc5c4 <+15508>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cc5cc <+15516>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cc5d3 <+15523>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001cc5db <+15531>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001cc5e3 <+15539>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001cc5eb <+15547>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cc5f3 <+15555>:	mov    rax,rsp
   0x00000000001cc5f6 <+15558>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cc5fa <+15562>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cc5fe <+15566>:	mov    QWORD PTR [rax],rdi
   0x00000000001cc601 <+15569>:	lea    rdi,[rsp+0xd30]
   0x00000000001cc609 <+15577>:	call   0x511190 <resolve_getattr>
   0x00000000001cc60e <+15582>:	mov    eax,DWORD PTR [rsp+0xd30]
   0x00000000001cc615 <+15589>:	mov    rcx,QWORD PTR [rsp+0xd38]
   0x00000000001cc61d <+15597>:	mov    rdx,QWORD PTR [rsp+0xd40]
   0x00000000001cc625 <+15605>:	mov    rsi,QWORD PTR [rsp+0xd48]
   0x00000000001cc62d <+15613>:	mov    QWORD PTR [rsp+0x3d40],rsi
   0x00000000001cc635 <+15621>:	mov    QWORD PTR [rsp+0x3d38],rdx
   0x00000000001cc63d <+15629>:	mov    QWORD PTR [rsp+0x3d30],rcx
   0x00000000001cc645 <+15637>:	mov    DWORD PTR [rsp+0x3d28],eax
   0x00000000001cc64c <+15644>:	lea    rdi,[rsp+0x3d28]
   0x00000000001cc654 <+15652>:	call   0x343280 <truthy?>
   0x00000000001cc659 <+15657>:	test   al,0x1
   0x00000000001cc65b <+15659>:	jne    0x1cc783 <->+15955>
   0x00000000001cc661 <+15665>:	jmp    0x1cc7b1 <->+16001>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cc666 <+15670>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cc66e <+15678>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cc676 <+15686>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cc67e <+15694>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cc685 <+15701>:	lea    rdi,[rsp+0xd70]
   0x00000000001cc68d <+15709>:	call   0x340b10 <new>
   0x00000000001cc692 <+15714>:	mov    eax,DWORD PTR [rsp+0xd70]
   0x00000000001cc699 <+15721>:	mov    rcx,QWORD PTR [rsp+0xd78]
   0x00000000001cc6a1 <+15729>:	mov    rdx,QWORD PTR [rsp+0xd80]
   0x00000000001cc6a9 <+15737>:	mov    rsi,QWORD PTR [rsp+0xd88]
   0x00000000001cc6b1 <+15745>:	mov    QWORD PTR [rsp+0x3d80],rsi
   0x00000000001cc6b9 <+15753>:	mov    QWORD PTR [rsp+0x3d78],rdx
   0x00000000001cc6c1 <+15761>:	mov    QWORD PTR [rsp+0x3d70],rcx
   0x00000000001cc6c9 <+15769>:	mov    DWORD PTR [rsp+0x3d68],eax
   0x00000000001cc6d0 <+15776>:	lea    rax,[rsp+0x3d68]
   0x00000000001cc6d8 <+15784>:	mov    QWORD PTR [rsp+0x420],rax
   0x00000000001cc6e0 <+15792>:	jmp    0x1cc541 <->+15377>
   0x00000000001cc6e5 <+15797>:	mov    edi,DWORD PTR [rsp+0x42c]
   0x00000000001cc6ec <+15804>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cc6f1 <+15809>:	and    al,0x1
   0x00000000001cc6f3 <+15811>:	test   al,0x1
   0x00000000001cc6f5 <+15813>:	jne    0x1cc6fc <->+15820>
   0x00000000001cc6f7 <+15815>:	jmp    0x1cc783 <->+15955>
   0x00000000001cc6fc <+15820>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cc704 <+15828>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cc70c <+15836>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cc714 <+15844>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cc71c <+15852>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cc723 <+15859>:	lea    rdi,[rsp+0xd90]
   0x00000000001cc72b <+15867>:	call   0x340cb0 <new>
   0x00000000001cc730 <+15872>:	mov    eax,DWORD PTR [rsp+0xd90]
   0x00000000001cc737 <+15879>:	mov    rcx,QWORD PTR [rsp+0xd98]
   0x00000000001cc73f <+15887>:	mov    rdx,QWORD PTR [rsp+0xda0]
   0x00000000001cc747 <+15895>:	mov    rsi,QWORD PTR [rsp+0xda8]
   0x00000000001cc74f <+15903>:	mov    QWORD PTR [rsp+0x3d60],rsi
   0x00000000001cc757 <+15911>:	mov    QWORD PTR [rsp+0x3d58],rdx
   0x00000000001cc75f <+15919>:	mov    QWORD PTR [rsp+0x3d50],rcx
   0x00000000001cc767 <+15927>:	mov    DWORD PTR [rsp+0x3d48],eax
   0x00000000001cc76e <+15934>:	lea    rax,[rsp+0x3d48]
   0x00000000001cc776 <+15942>:	mov    QWORD PTR [rsp+0x420],rax
   0x00000000001cc77e <+15950>:	jmp    0x1cc541 <->+15377>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cc783 <+15955>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cc78b <+15963>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cc793 <+15971>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cc79b <+15979>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cc7a3 <+15987>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cc7aa <+15994>:	call   0x326080 <<<>
   0x00000000001cc7af <+15999>:	jmp    0x1cc7b3 <->+16003>
   0x00000000001cc7b1 <+16001>:	jmp    0x1cc7b3 <->+16003>
   0x00000000001cc7b3 <+16003>:	jmp    0x1cc342 <->+14866>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001cc7b8 <+16008>:	jmp    0x1c94ed <->+3005>

245	    when Iterable, ::Iterator
   0x00000000001cc7bd <+16013>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cc7c5 <+16021>:	mov    QWORD PTR [rsp+0x410],rax
   0x00000000001cc7cd <+16029>:	mov    ecx,DWORD PTR [rax]
   0x00000000001cc7cf <+16031>:	mov    DWORD PTR [rsp+0x41c],ecx
   0x00000000001cc7d6 <+16038>:	mov    eax,0x193
   0x00000000001cc7db <+16043>:	cmp    eax,ecx
   0x00000000001cc7dd <+16045>:	je     0x1cc826 <->+16118>
   0x00000000001cc7df <+16047>:	jmp    0x1cc828 <->+16120>

247	    when String
   0x00000000001cc7e1 <+16049>:	mov    eax,0x1
   0x00000000001cc7e6 <+16054>:	cmp    eax,DWORD PTR [rsp+0x4930]
   0x00000000001cc7ed <+16061>:	je     0x1cd118 <->+18408>
   0x00000000001cc7f3 <+16067>:	jmp    0x1cd133 <->+18435>

245	    when Iterable, ::Iterator
   0x00000000001cc7f8 <+16072>:	mov    al,0x1
   0x00000000001cc7fa <+16074>:	mov    BYTE PTR [rsp+0x40f],al
   0x00000000001cc801 <+16081>:	jmp    0x1cc819 <->+16105>
   0x00000000001cc803 <+16083>:	mov    eax,0x193
   0x00000000001cc808 <+16088>:	cmp    eax,DWORD PTR [rsp+0x4930]
   0x00000000001cc80f <+16095>:	sete   al
   0x00000000001cc812 <+16098>:	mov    BYTE PTR [rsp+0x40f],al
   0x00000000001cc819 <+16105>:	mov    al,BYTE PTR [rsp+0x40f]
   0x00000000001cc820 <+16112>:	test   al,0x1
   0x00000000001cc822 <+16114>:	jne    0x1cc7bd <->+16013>
   0x00000000001cc824 <+16116>:	jmp    0x1cc7e1 <->+16049>

246	      object.each { |value| yield value }
   0x00000000001cc826 <+16118>:	jmp    0x1cc841 <->+16145>
   0x00000000001cc828 <+16120>:	mov    ecx,DWORD PTR [rsp+0x41c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cc82f <+16127>:	mov    eax,0x12a
   0x00000000001cc834 <+16132>:	cmp    eax,ecx
   0x00000000001cc836 <+16134>:	je     0x1ccc87 <->+17239>
   0x00000000001cc83c <+16140>:	jmp    0x1ccc94 <->+17252>
   0x00000000001cc841 <+16145>:	mov    rsi,QWORD PTR [rsp+0x410]
   0x00000000001cc849 <+16153>:	lea    rdi,[rsp+0xe58]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cc851 <+16161>:	call   0x356ed0 <next>
   0x00000000001cc856 <+16166>:	mov    eax,DWORD PTR [rsp+0xe58]
   0x00000000001cc85d <+16173>:	mov    rcx,QWORD PTR [rsp+0xe60]
   0x00000000001cc865 <+16181>:	mov    rdx,QWORD PTR [rsp+0xe68]
   0x00000000001cc86d <+16189>:	mov    rsi,QWORD PTR [rsp+0xe70]
   0x00000000001cc875 <+16197>:	mov    QWORD PTR [rsp+0x3ce0],rsi
   0x00000000001cc87d <+16205>:	mov    QWORD PTR [rsp+0x3cd8],rdx
   0x00000000001cc885 <+16213>:	mov    QWORD PTR [rsp+0x3cd0],rcx
   0x00000000001cc88d <+16221>:	mov    DWORD PTR [rsp+0x3cc8],eax
   0x00000000001cc894 <+16228>:	mov    eax,DWORD PTR [rsp+0x3cc8]
   0x00000000001cc89b <+16235>:	mov    rcx,QWORD PTR [rsp+0x3cd0]
   0x00000000001cc8a3 <+16243>:	mov    rdx,QWORD PTR [rsp+0x3cd8]
   0x00000000001cc8ab <+16251>:	mov    rsi,QWORD PTR [rsp+0x3ce0]
   0x00000000001cc8b3 <+16259>:	mov    QWORD PTR [rsp+0x3d00],rsi
   0x00000000001cc8bb <+16267>:	mov    QWORD PTR [rsp+0x3cf8],rdx
   0x00000000001cc8c3 <+16275>:	mov    QWORD PTR [rsp+0x3cf0],rcx
   0x00000000001cc8cb <+16283>:	mov    DWORD PTR [rsp+0x3ce8],eax
   0x00000000001cc8d2 <+16290>:	mov    eax,DWORD PTR [rsp+0x3ce8]
   0x00000000001cc8d9 <+16297>:	mov    rcx,QWORD PTR [rsp+0x3cf0]
   0x00000000001cc8e1 <+16305>:	mov    rdx,QWORD PTR [rsp+0x3cf8]
   0x00000000001cc8e9 <+16313>:	mov    rsi,QWORD PTR [rsp+0x3d00]
   0x00000000001cc8f1 <+16321>:	mov    QWORD PTR [rsp+0x3d20],rsi
   0x00000000001cc8f9 <+16329>:	mov    QWORD PTR [rsp+0x3d18],rdx
   0x00000000001cc901 <+16337>:	mov    QWORD PTR [rsp+0x3d10],rcx
   0x00000000001cc909 <+16345>:	mov    DWORD PTR [rsp+0x3d08],eax
   0x00000000001cc910 <+16352>:	mov    eax,DWORD PTR [rsp+0x3d08]
   0x00000000001cc917 <+16359>:	mov    rcx,QWORD PTR [rsp+0x3d10]
   0x00000000001cc91f <+16367>:	mov    rdx,QWORD PTR [rsp+0x3d18]
   0x00000000001cc927 <+16375>:	mov    rsi,QWORD PTR [rsp+0x3d20]
   0x00000000001cc92f <+16383>:	mov    DWORD PTR [rsp+0x4950],0x4ed
   0x00000000001cc93a <+16394>:	mov    QWORD PTR [rsp+0x4970],rsi
   0x00000000001cc942 <+16402>:	mov    QWORD PTR [rsp+0x4968],rdx
   0x00000000001cc94a <+16410>:	mov    QWORD PTR [rsp+0x4960],rcx
   0x00000000001cc952 <+16418>:	mov    DWORD PTR [rsp+0x4958],eax
   0x00000000001cc959 <+16425>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cc960 <+16432>:	mov    DWORD PTR [rsp+0x408],ecx
   0x00000000001cc967 <+16439>:	mov    eax,0x4ed
   0x00000000001cc96c <+16444>:	cmp    eax,ecx
   0x00000000001cc96e <+16446>:	sete   al
   0x00000000001cc971 <+16449>:	and    al,0x1
   0x00000000001cc973 <+16451>:	test   al,0x1
   0x00000000001cc975 <+16453>:	jne    0x1cc979 <->+16457>
   0x00000000001cc977 <+16455>:	jmp    0x1cc9f5 <->+16581>
   0x00000000001cc979 <+16457>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cc981 <+16465>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cc989 <+16473>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cc991 <+16481>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cc998 <+16488>:	lea    rdi,[rsp+0xdf8]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cc9a0 <+16496>:	call   0x339d20 <new>
   0x00000000001cc9a5 <+16501>:	mov    eax,DWORD PTR [rsp+0xdf8]
   0x00000000001cc9ac <+16508>:	mov    rcx,QWORD PTR [rsp+0xe00]
   0x00000000001cc9b4 <+16516>:	mov    rdx,QWORD PTR [rsp+0xe08]
   0x00000000001cc9bc <+16524>:	mov    rsi,QWORD PTR [rsp+0xe10]
   0x00000000001cc9c4 <+16532>:	mov    QWORD PTR [rsp+0x3cc0],rsi
   0x00000000001cc9cc <+16540>:	mov    QWORD PTR [rsp+0x3cb8],rdx
   0x00000000001cc9d4 <+16548>:	mov    QWORD PTR [rsp+0x3cb0],rcx
   0x00000000001cc9dc <+16556>:	mov    DWORD PTR [rsp+0x3ca8],eax
   0x00000000001cc9e3 <+16563>:	lea    rax,[rsp+0x3ca8]
   0x00000000001cc9eb <+16571>:	mov    QWORD PTR [rsp+0x400],rax
   0x00000000001cc9f3 <+16579>:	jmp    0x1cca10 <->+16608>
   0x00000000001cc9f5 <+16581>:	mov    edi,DWORD PTR [rsp+0x408]
   0x00000000001cc9fc <+16588>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cca01 <+16593>:	and    al,0x1
   0x00000000001cca03 <+16595>:	test   al,0x1
   0x00000000001cca05 <+16597>:	jne    0x1ccb35 <->+16901>
   0x00000000001cca0b <+16603>:	jmp    0x1ccbb4 <->+17028>
   0x00000000001cca10 <+16608>:	mov    rsi,QWORD PTR [rsp+0x400]
   0x00000000001cca18 <+16616>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cca1a <+16618>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cca1e <+16622>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cca22 <+16626>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cca26 <+16630>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cca2e <+16638>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cca36 <+16646>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cca3e <+16654>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cca45 <+16661>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cca4c <+16668>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cca54 <+16676>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cca5c <+16684>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cca64 <+16692>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cca6c <+16700>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cca74 <+16708>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cca7c <+16716>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cca83 <+16723>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cca8b <+16731>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cca93 <+16739>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cca9b <+16747>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001ccaa2 <+16754>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001ccaaa <+16762>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001ccab2 <+16770>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001ccaba <+16778>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ccac2 <+16786>:	mov    rax,rsp
   0x00000000001ccac5 <+16789>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001ccac9 <+16793>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ccacd <+16797>:	mov    QWORD PTR [rax],rdi
   0x00000000001ccad0 <+16800>:	lea    rdi,[rsp+0xdd8]
   0x00000000001ccad8 <+16808>:	call   0x511190 <resolve_getattr>
   0x00000000001ccadd <+16813>:	mov    eax,DWORD PTR [rsp+0xdd8]
   0x00000000001ccae4 <+16820>:	mov    rcx,QWORD PTR [rsp+0xde0]
   0x00000000001ccaec <+16828>:	mov    rdx,QWORD PTR [rsp+0xde8]
   0x00000000001ccaf4 <+16836>:	mov    rsi,QWORD PTR [rsp+0xdf0]
   0x00000000001ccafc <+16844>:	mov    QWORD PTR [rsp+0x3c60],rsi
   0x00000000001ccb04 <+16852>:	mov    QWORD PTR [rsp+0x3c58],rdx
   0x00000000001ccb0c <+16860>:	mov    QWORD PTR [rsp+0x3c50],rcx
   0x00000000001ccb14 <+16868>:	mov    DWORD PTR [rsp+0x3c48],eax
   0x00000000001ccb1b <+16875>:	lea    rdi,[rsp+0x3c48]
   0x00000000001ccb23 <+16883>:	call   0x343280 <truthy?>
   0x00000000001ccb28 <+16888>:	test   al,0x1
   0x00000000001ccb2a <+16890>:	jne    0x1ccc52 <->+17186>
   0x00000000001ccb30 <+16896>:	jmp    0x1ccc80 <->+17232>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ccb35 <+16901>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001ccb3d <+16909>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001ccb45 <+16917>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001ccb4d <+16925>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001ccb54 <+16932>:	lea    rdi,[rsp+0xe18]
   0x00000000001ccb5c <+16940>:	call   0x340b10 <new>
   0x00000000001ccb61 <+16945>:	mov    eax,DWORD PTR [rsp+0xe18]
   0x00000000001ccb68 <+16952>:	mov    rcx,QWORD PTR [rsp+0xe20]
   0x00000000001ccb70 <+16960>:	mov    rdx,QWORD PTR [rsp+0xe28]
   0x00000000001ccb78 <+16968>:	mov    rsi,QWORD PTR [rsp+0xe30]
   0x00000000001ccb80 <+16976>:	mov    QWORD PTR [rsp+0x3ca0],rsi
   0x00000000001ccb88 <+16984>:	mov    QWORD PTR [rsp+0x3c98],rdx
   0x00000000001ccb90 <+16992>:	mov    QWORD PTR [rsp+0x3c90],rcx
   0x00000000001ccb98 <+17000>:	mov    DWORD PTR [rsp+0x3c88],eax
   0x00000000001ccb9f <+17007>:	lea    rax,[rsp+0x3c88]
   0x00000000001ccba7 <+17015>:	mov    QWORD PTR [rsp+0x400],rax
   0x00000000001ccbaf <+17023>:	jmp    0x1cca10 <->+16608>
   0x00000000001ccbb4 <+17028>:	mov    edi,DWORD PTR [rsp+0x408]
   0x00000000001ccbbb <+17035>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ccbc0 <+17040>:	and    al,0x1
   0x00000000001ccbc2 <+17042>:	test   al,0x1
   0x00000000001ccbc4 <+17044>:	jne    0x1ccbcb <->+17051>
   0x00000000001ccbc6 <+17046>:	jmp    0x1ccc52 <->+17186>
   0x00000000001ccbcb <+17051>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001ccbd3 <+17059>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001ccbdb <+17067>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001ccbe3 <+17075>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001ccbeb <+17083>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001ccbf2 <+17090>:	lea    rdi,[rsp+0xe38]
   0x00000000001ccbfa <+17098>:	call   0x340cb0 <new>
   0x00000000001ccbff <+17103>:	mov    eax,DWORD PTR [rsp+0xe38]
   0x00000000001ccc06 <+17110>:	mov    rcx,QWORD PTR [rsp+0xe40]
   0x00000000001ccc0e <+17118>:	mov    rdx,QWORD PTR [rsp+0xe48]
   0x00000000001ccc16 <+17126>:	mov    rsi,QWORD PTR [rsp+0xe50]
   0x00000000001ccc1e <+17134>:	mov    QWORD PTR [rsp+0x3c80],rsi
   0x00000000001ccc26 <+17142>:	mov    QWORD PTR [rsp+0x3c78],rdx
   0x00000000001ccc2e <+17150>:	mov    QWORD PTR [rsp+0x3c70],rcx
   0x00000000001ccc36 <+17158>:	mov    DWORD PTR [rsp+0x3c68],eax
   0x00000000001ccc3d <+17165>:	lea    rax,[rsp+0x3c68]
   0x00000000001ccc45 <+17173>:	mov    QWORD PTR [rsp+0x400],rax
   0x00000000001ccc4d <+17181>:	jmp    0x1cca10 <->+16608>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ccc52 <+17186>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001ccc5a <+17194>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001ccc62 <+17202>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001ccc6a <+17210>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001ccc72 <+17218>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ccc79 <+17225>:	call   0x326080 <<<>
   0x00000000001ccc7e <+17230>:	jmp    0x1ccc82 <->+17234>
   0x00000000001ccc80 <+17232>:	jmp    0x1ccc82 <->+17234>
   0x00000000001ccc82 <+17234>:	jmp    0x1cc841 <->+16145>

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001ccc87 <+17239>:	mov    DWORD PTR [rsp+0x3c20],0x0
   0x00000000001ccc92 <+17250>:	jmp    0x1ccc94 <->+17252>
   0x00000000001ccc94 <+17252>:	mov    rdi,QWORD PTR [rsp+0x410]

574	    while i < size
   0x00000000001ccc9c <+17260>:	mov    eax,DWORD PTR [rsp+0x3c20]
   0x00000000001ccca3 <+17267>:	mov    DWORD PTR [rsp+0x3fc],eax
   0x00000000001cccaa <+17274>:	call   0x334030 <size>
   0x00000000001cccaf <+17279>:	mov    ecx,eax
   0x00000000001cccb1 <+17281>:	mov    eax,DWORD PTR [rsp+0x3fc]
   0x00000000001cccb8 <+17288>:	cmp    eax,ecx
   0x00000000001cccba <+17290>:	jge    0x1ccdd2 <->+17570>
   0x00000000001cccc0 <+17296>:	mov    rsi,QWORD PTR [rsp+0x410]
   0x00000000001cccc8 <+17304>:	mov    eax,DWORD PTR [rsp+0x3c20]
   0x00000000001ccccf <+17311>:	mov    DWORD PTR [rsp+0x3c24],eax
   0x00000000001cccd6 <+17318>:	mov    edx,DWORD PTR [rsp+0x3c24]
   0x00000000001cccdd <+17325>:	lea    rdi,[rsp+0xef8]

495	      yield unsafe_fetch(i)
   0x00000000001ccce5 <+17333>:	call   0x334050 <unsafe_fetch>
   0x00000000001cccea <+17338>:	mov    eax,DWORD PTR [rsp+0xef8]
   0x00000000001cccf1 <+17345>:	mov    rcx,QWORD PTR [rsp+0xf00]
   0x00000000001cccf9 <+17353>:	mov    rdx,QWORD PTR [rsp+0xf08]
   0x00000000001ccd01 <+17361>:	mov    rsi,QWORD PTR [rsp+0xf10]
   0x00000000001ccd09 <+17369>:	mov    QWORD PTR [rsp+0x3c18],rsi
   0x00000000001ccd11 <+17377>:	mov    QWORD PTR [rsp+0x3c10],rdx
   0x00000000001ccd19 <+17385>:	mov    QWORD PTR [rsp+0x3c08],rcx
   0x00000000001ccd21 <+17393>:	mov    DWORD PTR [rsp+0x3c00],eax
   0x00000000001ccd28 <+17400>:	mov    eax,DWORD PTR [rsp+0x3c00]
   0x00000000001ccd2f <+17407>:	mov    rcx,QWORD PTR [rsp+0x3c08]
   0x00000000001ccd37 <+17415>:	mov    rdx,QWORD PTR [rsp+0x3c10]
   0x00000000001ccd3f <+17423>:	mov    rsi,QWORD PTR [rsp+0x3c18]
   0x00000000001ccd47 <+17431>:	mov    QWORD PTR [rsp+0x3c40],rsi
   0x00000000001ccd4f <+17439>:	mov    QWORD PTR [rsp+0x3c38],rdx
   0x00000000001ccd57 <+17447>:	mov    QWORD PTR [rsp+0x3c30],rcx
   0x00000000001ccd5f <+17455>:	mov    DWORD PTR [rsp+0x3c28],eax
   0x00000000001ccd66 <+17462>:	mov    eax,DWORD PTR [rsp+0x3c28]
   0x00000000001ccd6d <+17469>:	mov    rcx,QWORD PTR [rsp+0x3c30]
   0x00000000001ccd75 <+17477>:	mov    rdx,QWORD PTR [rsp+0x3c38]
   0x00000000001ccd7d <+17485>:	mov    rsi,QWORD PTR [rsp+0x3c40]
   0x00000000001ccd85 <+17493>:	mov    DWORD PTR [rsp+0x4950],0x4ed
   0x00000000001ccd90 <+17504>:	mov    QWORD PTR [rsp+0x4970],rsi
   0x00000000001ccd98 <+17512>:	mov    QWORD PTR [rsp+0x4968],rdx
   0x00000000001ccda0 <+17520>:	mov    QWORD PTR [rsp+0x4960],rcx
   0x00000000001ccda8 <+17528>:	mov    DWORD PTR [rsp+0x4958],eax
   0x00000000001ccdaf <+17535>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001ccdb6 <+17542>:	mov    DWORD PTR [rsp+0x3f8],ecx
   0x00000000001ccdbd <+17549>:	mov    eax,0x4ed
   0x00000000001ccdc2 <+17554>:	cmp    eax,ecx
   0x00000000001ccdc4 <+17556>:	sete   al
   0x00000000001ccdc7 <+17559>:	and    al,0x1
   0x00000000001ccdc9 <+17561>:	test   al,0x1
   0x00000000001ccdcb <+17563>:	jne    0x1ccdd7 <->+17575>
   0x00000000001ccdcd <+17565>:	jmp    0x1cce53 <->+17699>

575	      yield i
576	      i += 1
   0x00000000001ccdd2 <+17570>:	jmp    0x1cd111 <->+18401>

495	      yield unsafe_fetch(i)
   0x00000000001ccdd7 <+17575>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001ccddf <+17583>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001ccde7 <+17591>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001ccdef <+17599>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001ccdf6 <+17606>:	lea    rdi,[rsp+0xe98]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ccdfe <+17614>:	call   0x339d20 <new>
   0x00000000001cce03 <+17619>:	mov    eax,DWORD PTR [rsp+0xe98]
   0x00000000001cce0a <+17626>:	mov    rcx,QWORD PTR [rsp+0xea0]
   0x00000000001cce12 <+17634>:	mov    rdx,QWORD PTR [rsp+0xea8]
   0x00000000001cce1a <+17642>:	mov    rsi,QWORD PTR [rsp+0xeb0]
   0x00000000001cce22 <+17650>:	mov    QWORD PTR [rsp+0x3bf8],rsi
   0x00000000001cce2a <+17658>:	mov    QWORD PTR [rsp+0x3bf0],rdx
   0x00000000001cce32 <+17666>:	mov    QWORD PTR [rsp+0x3be8],rcx
   0x00000000001cce3a <+17674>:	mov    DWORD PTR [rsp+0x3be0],eax
   0x00000000001cce41 <+17681>:	lea    rax,[rsp+0x3be0]
   0x00000000001cce49 <+17689>:	mov    QWORD PTR [rsp+0x3f0],rax
   0x00000000001cce51 <+17697>:	jmp    0x1cce6e <->+17726>
   0x00000000001cce53 <+17699>:	mov    edi,DWORD PTR [rsp+0x3f8]
   0x00000000001cce5a <+17706>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cce5f <+17711>:	and    al,0x1
   0x00000000001cce61 <+17713>:	test   al,0x1
   0x00000000001cce63 <+17715>:	jne    0x1ccf93 <->+18019>
   0x00000000001cce69 <+17721>:	jmp    0x1cd012 <->+18146>
   0x00000000001cce6e <+17726>:	mov    rsi,QWORD PTR [rsp+0x3f0]
   0x00000000001cce76 <+17734>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cce78 <+17736>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cce7c <+17740>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cce80 <+17744>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cce84 <+17748>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cce8c <+17756>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cce94 <+17764>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cce9c <+17772>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ccea3 <+17779>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cceaa <+17786>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cceb2 <+17794>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cceba <+17802>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001ccec2 <+17810>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cceca <+17818>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cced2 <+17826>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cceda <+17834>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001ccee1 <+17841>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001ccee9 <+17849>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001ccef1 <+17857>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001ccef9 <+17865>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001ccf00 <+17872>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001ccf08 <+17880>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001ccf10 <+17888>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001ccf18 <+17896>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ccf20 <+17904>:	mov    rax,rsp
   0x00000000001ccf23 <+17907>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001ccf27 <+17911>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ccf2b <+17915>:	mov    QWORD PTR [rax],rdi
   0x00000000001ccf2e <+17918>:	lea    rdi,[rsp+0xe78]
   0x00000000001ccf36 <+17926>:	call   0x511190 <resolve_getattr>
   0x00000000001ccf3b <+17931>:	mov    eax,DWORD PTR [rsp+0xe78]
   0x00000000001ccf42 <+17938>:	mov    rcx,QWORD PTR [rsp+0xe80]
   0x00000000001ccf4a <+17946>:	mov    rdx,QWORD PTR [rsp+0xe88]
   0x00000000001ccf52 <+17954>:	mov    rsi,QWORD PTR [rsp+0xe90]
   0x00000000001ccf5a <+17962>:	mov    QWORD PTR [rsp+0x3b98],rsi
   0x00000000001ccf62 <+17970>:	mov    QWORD PTR [rsp+0x3b90],rdx
   0x00000000001ccf6a <+17978>:	mov    QWORD PTR [rsp+0x3b88],rcx
   0x00000000001ccf72 <+17986>:	mov    DWORD PTR [rsp+0x3b80],eax
   0x00000000001ccf79 <+17993>:	lea    rdi,[rsp+0x3b80]
   0x00000000001ccf81 <+18001>:	call   0x343280 <truthy?>
   0x00000000001ccf86 <+18006>:	test   al,0x1
   0x00000000001ccf88 <+18008>:	jne    0x1cd0b0 <->+18304>
   0x00000000001ccf8e <+18014>:	jmp    0x1cd0de <->+18350>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ccf93 <+18019>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001ccf9b <+18027>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001ccfa3 <+18035>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001ccfab <+18043>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001ccfb2 <+18050>:	lea    rdi,[rsp+0xeb8]
   0x00000000001ccfba <+18058>:	call   0x340b10 <new>
   0x00000000001ccfbf <+18063>:	mov    eax,DWORD PTR [rsp+0xeb8]
   0x00000000001ccfc6 <+18070>:	mov    rcx,QWORD PTR [rsp+0xec0]
   0x00000000001ccfce <+18078>:	mov    rdx,QWORD PTR [rsp+0xec8]
   0x00000000001ccfd6 <+18086>:	mov    rsi,QWORD PTR [rsp+0xed0]
   0x00000000001ccfde <+18094>:	mov    QWORD PTR [rsp+0x3bd8],rsi
   0x00000000001ccfe6 <+18102>:	mov    QWORD PTR [rsp+0x3bd0],rdx
   0x00000000001ccfee <+18110>:	mov    QWORD PTR [rsp+0x3bc8],rcx
   0x00000000001ccff6 <+18118>:	mov    DWORD PTR [rsp+0x3bc0],eax
   0x00000000001ccffd <+18125>:	lea    rax,[rsp+0x3bc0]
   0x00000000001cd005 <+18133>:	mov    QWORD PTR [rsp+0x3f0],rax
   0x00000000001cd00d <+18141>:	jmp    0x1cce6e <->+17726>
   0x00000000001cd012 <+18146>:	mov    edi,DWORD PTR [rsp+0x3f8]
   0x00000000001cd019 <+18153>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cd01e <+18158>:	and    al,0x1
   0x00000000001cd020 <+18160>:	test   al,0x1
   0x00000000001cd022 <+18162>:	jne    0x1cd029 <->+18169>
   0x00000000001cd024 <+18164>:	jmp    0x1cd0b0 <->+18304>
   0x00000000001cd029 <+18169>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cd031 <+18177>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cd039 <+18185>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cd041 <+18193>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cd049 <+18201>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cd050 <+18208>:	lea    rdi,[rsp+0xed8]
   0x00000000001cd058 <+18216>:	call   0x340cb0 <new>
   0x00000000001cd05d <+18221>:	mov    eax,DWORD PTR [rsp+0xed8]
   0x00000000001cd064 <+18228>:	mov    rcx,QWORD PTR [rsp+0xee0]
   0x00000000001cd06c <+18236>:	mov    rdx,QWORD PTR [rsp+0xee8]
   0x00000000001cd074 <+18244>:	mov    rsi,QWORD PTR [rsp+0xef0]
   0x00000000001cd07c <+18252>:	mov    QWORD PTR [rsp+0x3bb8],rsi
   0x00000000001cd084 <+18260>:	mov    QWORD PTR [rsp+0x3bb0],rdx
   0x00000000001cd08c <+18268>:	mov    QWORD PTR [rsp+0x3ba8],rcx
   0x00000000001cd094 <+18276>:	mov    DWORD PTR [rsp+0x3ba0],eax
   0x00000000001cd09b <+18283>:	lea    rax,[rsp+0x3ba0]
   0x00000000001cd0a3 <+18291>:	mov    QWORD PTR [rsp+0x3f0],rax
   0x00000000001cd0ab <+18299>:	jmp    0x1cce6e <->+17726>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cd0b0 <+18304>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cd0b8 <+18312>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cd0c0 <+18320>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cd0c8 <+18328>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cd0d0 <+18336>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cd0d7 <+18343>:	call   0x326080 <<<>
   0x00000000001cd0dc <+18348>:	jmp    0x1cd0e0 <->+18352>
   0x00000000001cd0de <+18350>:	jmp    0x1cd0e0 <->+18352>
   0x00000000001cd0e0 <+18352>:	mov    eax,DWORD PTR [rsp+0x3c20]
   0x00000000001cd0e7 <+18359>:	inc    eax
   0x00000000001cd0e9 <+18361>:	mov    DWORD PTR [rsp+0x3ec],eax
   0x00000000001cd0f0 <+18368>:	seto   al
   0x00000000001cd0f3 <+18371>:	test   al,0x1
   0x00000000001cd0f5 <+18373>:	jne    0x1cd0f9 <->+18377>
   0x00000000001cd0f7 <+18375>:	jmp    0x1cd0fe <->+18382>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001cd0f9 <+18377>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001cd0fe <+18382>:	mov    eax,DWORD PTR [rsp+0x3ec]
   0x00000000001cd105 <+18389>:	mov    DWORD PTR [rsp+0x3c20],eax
   0x00000000001cd10c <+18396>:	jmp    0x1ccc94 <->+17252>
   0x00000000001cd111 <+18401>:	jmp    0x1cd113 <->+18403>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001cd113 <+18403>:	jmp    0x1cc7b8 <->+16008>

247	    when String
   0x00000000001cd118 <+18408>:	mov    rdi,QWORD PTR [rsp+0x4938]
   0x00000000001cd120 <+18416>:	mov    QWORD PTR [rsp+0x3e0],rdi

/usr/lib/crystal/string.cr:
4814	    if single_byte_optimizable?
   0x00000000001cd128 <+18424>:	call   0x21f0c0 <single_byte_optimizable?>
   0x00000000001cd12d <+18429>:	test   al,0x1
   0x00000000001cd12f <+18431>:	jne    0x1cd14a <->+18458>
   0x00000000001cd131 <+18433>:	jmp    0x1cd17d <->+18509>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
249	    when StrictUndefined
   0x00000000001cd133 <+18435>:	mov    eax,0x123
   0x00000000001cd138 <+18440>:	cmp    eax,DWORD PTR [rsp+0x4930]
   0x00000000001cd13f <+18447>:	je     0x1cd9bf <->+20623>
   0x00000000001cd145 <+18453>:	jmp    0x1cd9f2 <->+20674>
   0x00000000001cd14a <+18458>:	mov    rdi,QWORD PTR [rsp+0x3e0]

/usr/lib/crystal/string.cr:
4925	    to_slice.each do |byte|
   0x00000000001cd152 <+18466>:	call   0x21bcc0 <to_slice>
   0x00000000001cd157 <+18471>:	mov    QWORD PTR [rsp+0x3b70],rcx
   0x00000000001cd15f <+18479>:	mov    DWORD PTR [rsp+0x3b68],eax
   0x00000000001cd166 <+18486>:	and    dl,0x1
   0x00000000001cd169 <+18489>:	mov    BYTE PTR [rsp+0x3b6c],dl

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001cd170 <+18496>:	mov    DWORD PTR [rsp+0x3b5c],0x0
   0x00000000001cd17b <+18507>:	jmp    0x1cd1ef <->+18623>
   0x00000000001cd17d <+18509>:	mov    rsi,QWORD PTR [rsp+0x3e0]
   0x00000000001cd185 <+18517>:	lea    rdi,[rsp+0x1018]

/usr/lib/crystal/string.cr:
4819	      Char::Reader.new(self).each do |char|
   0x00000000001cd18d <+18525>:	call   0x271400 <new>
   0x00000000001cd192 <+18530>:	mov    rax,QWORD PTR [rsp+0x1018]
   0x00000000001cd19a <+18538>:	mov    ecx,DWORD PTR [rsp+0x1020]
   0x00000000001cd1a1 <+18545>:	mov    edx,DWORD PTR [rsp+0x1024]
   0x00000000001cd1a8 <+18552>:	mov    esi,DWORD PTR [rsp+0x1028]
   0x00000000001cd1af <+18559>:	mov    edi,DWORD PTR [rsp+0x1030]
   0x00000000001cd1b6 <+18566>:	mov    r8,QWORD PTR [rsp+0x1038]
   0x00000000001cd1be <+18574>:	mov    QWORD PTR [rsp+0x3ad0],r8
   0x00000000001cd1c6 <+18582>:	mov    DWORD PTR [rsp+0x3ac8],edi
   0x00000000001cd1cd <+18589>:	mov    DWORD PTR [rsp+0x3ac0],esi
   0x00000000001cd1d4 <+18596>:	mov    DWORD PTR [rsp+0x3abc],edx
   0x00000000001cd1db <+18603>:	mov    DWORD PTR [rsp+0x3ab8],ecx
   0x00000000001cd1e2 <+18610>:	mov    QWORD PTR [rsp+0x3ab0],rax
   0x00000000001cd1ea <+18618>:	jmp    0x1cd5fe <->+19662>

/usr/lib/crystal/indexable.cr:
574	    while i < size
   0x00000000001cd1ef <+18623>:	mov    eax,DWORD PTR [rsp+0x3b5c]
   0x00000000001cd1f6 <+18630>:	cmp    eax,DWORD PTR [rsp+0x3b68]
   0x00000000001cd1fd <+18637>:	jge    0x1cd24e <->+18718>
   0x00000000001cd1ff <+18639>:	mov    eax,DWORD PTR [rsp+0x3b5c]
   0x00000000001cd206 <+18646>:	mov    DWORD PTR [rsp+0x3b60],eax
   0x00000000001cd20d <+18653>:	mov    esi,DWORD PTR [rsp+0x3b60]

495	      yield unsafe_fetch(i)
   0x00000000001cd214 <+18660>:	lea    rdi,[rsp+0x3b68]
   0x00000000001cd21c <+18668>:	call   0x209830 <unsafe_fetch>
   0x00000000001cd221 <+18673>:	mov    BYTE PTR [rsp+0x3b67],al
   0x00000000001cd228 <+18680>:	mov    al,BYTE PTR [rsp+0x3b67]
   0x00000000001cd22f <+18687>:	mov    BYTE PTR [rsp+0x3b7b],al

/usr/lib/crystal/string.cr:
4816	        yield (byte < 0x80 ? byte.unsafe_chr : Char::REPLACEMENT)
   0x00000000001cd236 <+18694>:	movzx  eax,BYTE PTR [rsp+0x3b7b]
   0x00000000001cd23e <+18702>:	cmp    eax,0x80
   0x00000000001cd243 <+18707>:	setl   al
   0x00000000001cd246 <+18710>:	and    al,0x1
   0x00000000001cd248 <+18712>:	test   al,0x1
   0x00000000001cd24a <+18714>:	jne    0x1cd253 <->+18723>
   0x00000000001cd24c <+18716>:	jmp    0x1cd264 <->+18740>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001cd24e <+18718>:	jmp    0x1cd5f9 <->+19657>

/usr/lib/crystal/string.cr:
4816	        yield (byte < 0x80 ? byte.unsafe_chr : Char::REPLACEMENT)
   0x00000000001cd253 <+18723>:	movzx  eax,BYTE PTR [rsp+0x3b7b]
   0x00000000001cd25b <+18731>:	mov    DWORD PTR [rsp+0x3dc],eax
   0x00000000001cd262 <+18738>:	jmp    0x1cd272 <->+18754>
   0x00000000001cd264 <+18740>:	mov    eax,0xfffd
   0x00000000001cd269 <+18745>:	mov    DWORD PTR [rsp+0x3dc],eax
   0x00000000001cd270 <+18752>:	jmp    0x1cd272 <->+18754>
   0x00000000001cd272 <+18754>:	mov    eax,DWORD PTR [rsp+0x3dc]
   0x00000000001cd279 <+18761>:	mov    DWORD PTR [rsp+0x3b7c],eax
   0x00000000001cd280 <+18768>:	mov    edi,DWORD PTR [rsp+0x3b7c]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
248	      object.each_char { |char| yield char.to_s }
   0x00000000001cd287 <+18775>:	call   0x261c80 <to_s>
   0x00000000001cd28c <+18780>:	mov    DWORD PTR [rsp+0x4950],0x1
   0x00000000001cd297 <+18791>:	mov    QWORD PTR [rsp+0x4958],rax
   0x00000000001cd29f <+18799>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cd2a6 <+18806>:	mov    DWORD PTR [rsp+0x3d8],ecx
   0x00000000001cd2ad <+18813>:	mov    eax,0x4ed
   0x00000000001cd2b2 <+18818>:	cmp    eax,ecx
   0x00000000001cd2b4 <+18820>:	sete   al
   0x00000000001cd2b7 <+18823>:	and    al,0x1
   0x00000000001cd2b9 <+18825>:	test   al,0x1
   0x00000000001cd2bb <+18827>:	jne    0x1cd2bf <->+18831>
   0x00000000001cd2bd <+18829>:	jmp    0x1cd33b <->+18955>
   0x00000000001cd2bf <+18831>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cd2c7 <+18839>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cd2cf <+18847>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cd2d7 <+18855>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cd2de <+18862>:	lea    rdi,[rsp+0xf38]

254	    end
255	  end
256	
257	  # Assumes the underlying value is an `Iterable` and yields each
258	  # of the elements or key/values, always as `Value`.
259	  def each
260	    raw_each do |raw|
261	      yield Value.new raw
   0x00000000001cd2e6 <+18870>:	call   0x339d20 <new>
   0x00000000001cd2eb <+18875>:	mov    eax,DWORD PTR [rsp+0xf38]
   0x00000000001cd2f2 <+18882>:	mov    rcx,QWORD PTR [rsp+0xf40]
   0x00000000001cd2fa <+18890>:	mov    rdx,QWORD PTR [rsp+0xf48]
   0x00000000001cd302 <+18898>:	mov    rsi,QWORD PTR [rsp+0xf50]
   0x00000000001cd30a <+18906>:	mov    QWORD PTR [rsp+0x3b50],rsi
   0x00000000001cd312 <+18914>:	mov    QWORD PTR [rsp+0x3b48],rdx
   0x00000000001cd31a <+18922>:	mov    QWORD PTR [rsp+0x3b40],rcx
   0x00000000001cd322 <+18930>:	mov    DWORD PTR [rsp+0x3b38],eax
   0x00000000001cd329 <+18937>:	lea    rax,[rsp+0x3b38]
   0x00000000001cd331 <+18945>:	mov    QWORD PTR [rsp+0x3d0],rax
   0x00000000001cd339 <+18953>:	jmp    0x1cd356 <->+18982>
   0x00000000001cd33b <+18955>:	mov    edi,DWORD PTR [rsp+0x3d8]
   0x00000000001cd342 <+18962>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cd347 <+18967>:	and    al,0x1
   0x00000000001cd349 <+18969>:	test   al,0x1
   0x00000000001cd34b <+18971>:	jne    0x1cd47b <->+19275>
   0x00000000001cd351 <+18977>:	jmp    0x1cd4fa <->+19402>
   0x00000000001cd356 <+18982>:	mov    rsi,QWORD PTR [rsp+0x3d0]
   0x00000000001cd35e <+18990>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cd360 <+18992>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cd364 <+18996>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cd368 <+19000>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cd36c <+19004>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cd374 <+19012>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cd37c <+19020>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cd384 <+19028>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cd38b <+19035>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cd392 <+19042>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cd39a <+19050>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cd3a2 <+19058>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cd3aa <+19066>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cd3b2 <+19074>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cd3ba <+19082>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cd3c2 <+19090>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cd3c9 <+19097>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cd3d1 <+19105>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cd3d9 <+19113>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cd3e1 <+19121>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cd3e8 <+19128>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001cd3f0 <+19136>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001cd3f8 <+19144>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001cd400 <+19152>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cd408 <+19160>:	mov    rax,rsp
   0x00000000001cd40b <+19163>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cd40f <+19167>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cd413 <+19171>:	mov    QWORD PTR [rax],rdi
   0x00000000001cd416 <+19174>:	lea    rdi,[rsp+0xf18]
   0x00000000001cd41e <+19182>:	call   0x511190 <resolve_getattr>
   0x00000000001cd423 <+19187>:	mov    eax,DWORD PTR [rsp+0xf18]
   0x00000000001cd42a <+19194>:	mov    rcx,QWORD PTR [rsp+0xf20]
   0x00000000001cd432 <+19202>:	mov    rdx,QWORD PTR [rsp+0xf28]
   0x00000000001cd43a <+19210>:	mov    rsi,QWORD PTR [rsp+0xf30]
   0x00000000001cd442 <+19218>:	mov    QWORD PTR [rsp+0x3af0],rsi
   0x00000000001cd44a <+19226>:	mov    QWORD PTR [rsp+0x3ae8],rdx
   0x00000000001cd452 <+19234>:	mov    QWORD PTR [rsp+0x3ae0],rcx
   0x00000000001cd45a <+19242>:	mov    DWORD PTR [rsp+0x3ad8],eax
   0x00000000001cd461 <+19249>:	lea    rdi,[rsp+0x3ad8]
   0x00000000001cd469 <+19257>:	call   0x343280 <truthy?>
   0x00000000001cd46e <+19262>:	test   al,0x1
   0x00000000001cd470 <+19264>:	jne    0x1cd598 <->+19560>
   0x00000000001cd476 <+19270>:	jmp    0x1cd5c6 <->+19606>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cd47b <+19275>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cd483 <+19283>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cd48b <+19291>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cd493 <+19299>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cd49a <+19306>:	lea    rdi,[rsp+0xf58]
   0x00000000001cd4a2 <+19314>:	call   0x340b10 <new>
   0x00000000001cd4a7 <+19319>:	mov    eax,DWORD PTR [rsp+0xf58]
   0x00000000001cd4ae <+19326>:	mov    rcx,QWORD PTR [rsp+0xf60]
   0x00000000001cd4b6 <+19334>:	mov    rdx,QWORD PTR [rsp+0xf68]
   0x00000000001cd4be <+19342>:	mov    rsi,QWORD PTR [rsp+0xf70]
   0x00000000001cd4c6 <+19350>:	mov    QWORD PTR [rsp+0x3b30],rsi
   0x00000000001cd4ce <+19358>:	mov    QWORD PTR [rsp+0x3b28],rdx
   0x00000000001cd4d6 <+19366>:	mov    QWORD PTR [rsp+0x3b20],rcx
   0x00000000001cd4de <+19374>:	mov    DWORD PTR [rsp+0x3b18],eax
   0x00000000001cd4e5 <+19381>:	lea    rax,[rsp+0x3b18]
   0x00000000001cd4ed <+19389>:	mov    QWORD PTR [rsp+0x3d0],rax
   0x00000000001cd4f5 <+19397>:	jmp    0x1cd356 <->+18982>
   0x00000000001cd4fa <+19402>:	mov    edi,DWORD PTR [rsp+0x3d8]
   0x00000000001cd501 <+19409>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cd506 <+19414>:	and    al,0x1
   0x00000000001cd508 <+19416>:	test   al,0x1
   0x00000000001cd50a <+19418>:	jne    0x1cd511 <->+19425>
   0x00000000001cd50c <+19420>:	jmp    0x1cd598 <->+19560>
   0x00000000001cd511 <+19425>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cd519 <+19433>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cd521 <+19441>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cd529 <+19449>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cd531 <+19457>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cd538 <+19464>:	lea    rdi,[rsp+0xf78]
   0x00000000001cd540 <+19472>:	call   0x340cb0 <new>
   0x00000000001cd545 <+19477>:	mov    eax,DWORD PTR [rsp+0xf78]
   0x00000000001cd54c <+19484>:	mov    rcx,QWORD PTR [rsp+0xf80]
   0x00000000001cd554 <+19492>:	mov    rdx,QWORD PTR [rsp+0xf88]
   0x00000000001cd55c <+19500>:	mov    rsi,QWORD PTR [rsp+0xf90]
   0x00000000001cd564 <+19508>:	mov    QWORD PTR [rsp+0x3b10],rsi
   0x00000000001cd56c <+19516>:	mov    QWORD PTR [rsp+0x3b08],rdx
   0x00000000001cd574 <+19524>:	mov    QWORD PTR [rsp+0x3b00],rcx
   0x00000000001cd57c <+19532>:	mov    DWORD PTR [rsp+0x3af8],eax
   0x00000000001cd583 <+19539>:	lea    rax,[rsp+0x3af8]
   0x00000000001cd58b <+19547>:	mov    QWORD PTR [rsp+0x3d0],rax
   0x00000000001cd593 <+19555>:	jmp    0x1cd356 <->+18982>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cd598 <+19560>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cd5a0 <+19568>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cd5a8 <+19576>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cd5b0 <+19584>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cd5b8 <+19592>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cd5bf <+19599>:	call   0x326080 <<<>
   0x00000000001cd5c4 <+19604>:	jmp    0x1cd5c8 <->+19608>
   0x00000000001cd5c6 <+19606>:	jmp    0x1cd5c8 <->+19608>
   0x00000000001cd5c8 <+19608>:	mov    eax,DWORD PTR [rsp+0x3b5c]
   0x00000000001cd5cf <+19615>:	inc    eax
   0x00000000001cd5d1 <+19617>:	mov    DWORD PTR [rsp+0x3cc],eax
   0x00000000001cd5d8 <+19624>:	seto   al
   0x00000000001cd5db <+19627>:	test   al,0x1
   0x00000000001cd5dd <+19629>:	jne    0x1cd5e1 <->+19633>
   0x00000000001cd5df <+19631>:	jmp    0x1cd5e6 <->+19638>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001cd5e1 <+19633>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001cd5e6 <+19638>:	mov    eax,DWORD PTR [rsp+0x3cc]
   0x00000000001cd5ed <+19645>:	mov    DWORD PTR [rsp+0x3b5c],eax
   0x00000000001cd5f4 <+19652>:	jmp    0x1cd1ef <->+18623>

/usr/lib/crystal/char/reader.cr:
271	        decode_current_char
   0x00000000001cd5f9 <+19657>:	jmp    0x1cd9ba <->+20618>

267	      while has_next?
   0x00000000001cd5fe <+19662>:	lea    rdi,[rsp+0x3ab0]
   0x00000000001cd606 <+19670>:	call   0x271c30 <has_next?>
   0x00000000001cd60b <+19675>:	test   al,0x1
   0x00000000001cd60d <+19677>:	jne    0x1cd611 <->+19681>
   0x00000000001cd60f <+19679>:	jmp    0x1cd66c <->+19772>
   0x00000000001cd611 <+19681>:	mov    eax,DWORD PTR [rsp+0x3ab8]
   0x00000000001cd618 <+19688>:	mov    DWORD PTR [rsp+0x3aac],eax
   0x00000000001cd61f <+19695>:	mov    eax,DWORD PTR [rsp+0x3aac]
   0x00000000001cd626 <+19702>:	mov    DWORD PTR [rsp+0x3b7c],eax
   0x00000000001cd62d <+19709>:	mov    edi,DWORD PTR [rsp+0x3b7c]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
248	      object.each_char { |char| yield char.to_s }
   0x00000000001cd634 <+19716>:	call   0x261c80 <to_s>
   0x00000000001cd639 <+19721>:	mov    DWORD PTR [rsp+0x4950],0x1
   0x00000000001cd644 <+19732>:	mov    QWORD PTR [rsp+0x4958],rax
   0x00000000001cd64c <+19740>:	mov    ecx,DWORD PTR [rsp+0x4950]
   0x00000000001cd653 <+19747>:	mov    DWORD PTR [rsp+0x3c8],ecx
   0x00000000001cd65a <+19754>:	mov    eax,0x4ed
   0x00000000001cd65f <+19759>:	cmp    eax,ecx
   0x00000000001cd661 <+19761>:	sete   al
   0x00000000001cd664 <+19764>:	and    al,0x1
   0x00000000001cd666 <+19766>:	test   al,0x1
   0x00000000001cd668 <+19768>:	jne    0x1cd66e <->+19774>
   0x00000000001cd66a <+19770>:	jmp    0x1cd6ea <->+19898>

/usr/lib/crystal/char/reader.cr:
271	        decode_current_char
   0x00000000001cd66c <+19772>:	jmp    0x1cd5f9 <->+19657>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
248	      object.each_char { |char| yield char.to_s }
   0x00000000001cd66e <+19774>:	mov    r8,QWORD PTR [rsp+0x4970]
   0x00000000001cd676 <+19782>:	mov    rcx,QWORD PTR [rsp+0x4968]
   0x00000000001cd67e <+19790>:	mov    rdx,QWORD PTR [rsp+0x4960]
   0x00000000001cd686 <+19798>:	mov    esi,DWORD PTR [rsp+0x4958]
   0x00000000001cd68d <+19805>:	lea    rdi,[rsp+0xfb8]

254	    end
255	  end
256	
257	  # Assumes the underlying value is an `Iterable` and yields each
258	  # of the elements or key/values, always as `Value`.
259	  def each
260	    raw_each do |raw|
261	      yield Value.new raw
   0x00000000001cd695 <+19813>:	call   0x339d20 <new>
   0x00000000001cd69a <+19818>:	mov    eax,DWORD PTR [rsp+0xfb8]
   0x00000000001cd6a1 <+19825>:	mov    rcx,QWORD PTR [rsp+0xfc0]
   0x00000000001cd6a9 <+19833>:	mov    rdx,QWORD PTR [rsp+0xfc8]
   0x00000000001cd6b1 <+19841>:	mov    rsi,QWORD PTR [rsp+0xfd0]
   0x00000000001cd6b9 <+19849>:	mov    QWORD PTR [rsp+0x3aa0],rsi
   0x00000000001cd6c1 <+19857>:	mov    QWORD PTR [rsp+0x3a98],rdx
   0x00000000001cd6c9 <+19865>:	mov    QWORD PTR [rsp+0x3a90],rcx
   0x00000000001cd6d1 <+19873>:	mov    DWORD PTR [rsp+0x3a88],eax
   0x00000000001cd6d8 <+19880>:	lea    rax,[rsp+0x3a88]
   0x00000000001cd6e0 <+19888>:	mov    QWORD PTR [rsp+0x3c0],rax
   0x00000000001cd6e8 <+19896>:	jmp    0x1cd705 <->+19925>
   0x00000000001cd6ea <+19898>:	mov    edi,DWORD PTR [rsp+0x3c8]
   0x00000000001cd6f1 <+19905>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cd6f6 <+19910>:	and    al,0x1
   0x00000000001cd6f8 <+19912>:	test   al,0x1
   0x00000000001cd6fa <+19914>:	jne    0x1cd82a <->+20218>
   0x00000000001cd700 <+19920>:	jmp    0x1cd8a9 <->+20345>
   0x00000000001cd705 <+19925>:	mov    rsi,QWORD PTR [rsp+0x3c0]
   0x00000000001cd70d <+19933>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cd70f <+19935>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cd713 <+19939>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cd717 <+19943>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cd71b <+19947>:	mov    QWORD PTR [rsp+0x4990],rsi
   0x00000000001cd723 <+19955>:	mov    QWORD PTR [rsp+0x4988],rdx
   0x00000000001cd72b <+19963>:	mov    QWORD PTR [rsp+0x4980],rcx
   0x00000000001cd733 <+19971>:	mov    DWORD PTR [rsp+0x4978],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cd73a <+19978>:	mov    eax,DWORD PTR [rsp+0x4978]
   0x00000000001cd741 <+19985>:	mov    rcx,QWORD PTR [rsp+0x4980]
   0x00000000001cd749 <+19993>:	mov    rdx,QWORD PTR [rsp+0x4988]
   0x00000000001cd751 <+20001>:	mov    rsi,QWORD PTR [rsp+0x4990]
   0x00000000001cd759 <+20009>:	mov    QWORD PTR [rsp+0x49b8],rsi
   0x00000000001cd761 <+20017>:	mov    QWORD PTR [rsp+0x49b0],rdx
   0x00000000001cd769 <+20025>:	mov    QWORD PTR [rsp+0x49a8],rcx
   0x00000000001cd771 <+20033>:	mov    DWORD PTR [rsp+0x49a0],eax
   0x00000000001cd778 <+20040>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cd780 <+20048>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cd788 <+20056>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cd790 <+20064>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cd797 <+20071>:	mov    r9d,DWORD PTR [rsp+0x49a0]
   0x00000000001cd79f <+20079>:	mov    rdi,QWORD PTR [rsp+0x49a8]
   0x00000000001cd7a7 <+20087>:	mov    r10,QWORD PTR [rsp+0x49b0]
   0x00000000001cd7af <+20095>:	mov    r11,QWORD PTR [rsp+0x49b8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cd7b7 <+20103>:	mov    rax,rsp
   0x00000000001cd7ba <+20106>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cd7be <+20110>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cd7c2 <+20114>:	mov    QWORD PTR [rax],rdi
   0x00000000001cd7c5 <+20117>:	lea    rdi,[rsp+0xf98]
   0x00000000001cd7cd <+20125>:	call   0x511190 <resolve_getattr>
   0x00000000001cd7d2 <+20130>:	mov    eax,DWORD PTR [rsp+0xf98]
   0x00000000001cd7d9 <+20137>:	mov    rcx,QWORD PTR [rsp+0xfa0]
   0x00000000001cd7e1 <+20145>:	mov    rdx,QWORD PTR [rsp+0xfa8]
   0x00000000001cd7e9 <+20153>:	mov    rsi,QWORD PTR [rsp+0xfb0]
   0x00000000001cd7f1 <+20161>:	mov    QWORD PTR [rsp+0x3a40],rsi
   0x00000000001cd7f9 <+20169>:	mov    QWORD PTR [rsp+0x3a38],rdx
   0x00000000001cd801 <+20177>:	mov    QWORD PTR [rsp+0x3a30],rcx
   0x00000000001cd809 <+20185>:	mov    DWORD PTR [rsp+0x3a28],eax
   0x00000000001cd810 <+20192>:	lea    rdi,[rsp+0x3a28]
   0x00000000001cd818 <+20200>:	call   0x343280 <truthy?>
   0x00000000001cd81d <+20205>:	test   al,0x1
   0x00000000001cd81f <+20207>:	jne    0x1cd947 <->+20503>
   0x00000000001cd825 <+20213>:	jmp    0x1cd975 <->+20549>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cd82a <+20218>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cd832 <+20226>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cd83a <+20234>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cd842 <+20242>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cd849 <+20249>:	lea    rdi,[rsp+0xfd8]
   0x00000000001cd851 <+20257>:	call   0x340b10 <new>
   0x00000000001cd856 <+20262>:	mov    eax,DWORD PTR [rsp+0xfd8]
   0x00000000001cd85d <+20269>:	mov    rcx,QWORD PTR [rsp+0xfe0]
   0x00000000001cd865 <+20277>:	mov    rdx,QWORD PTR [rsp+0xfe8]
   0x00000000001cd86d <+20285>:	mov    rsi,QWORD PTR [rsp+0xff0]
   0x00000000001cd875 <+20293>:	mov    QWORD PTR [rsp+0x3a80],rsi
   0x00000000001cd87d <+20301>:	mov    QWORD PTR [rsp+0x3a78],rdx
   0x00000000001cd885 <+20309>:	mov    QWORD PTR [rsp+0x3a70],rcx
   0x00000000001cd88d <+20317>:	mov    DWORD PTR [rsp+0x3a68],eax
   0x00000000001cd894 <+20324>:	lea    rax,[rsp+0x3a68]
   0x00000000001cd89c <+20332>:	mov    QWORD PTR [rsp+0x3c0],rax
   0x00000000001cd8a4 <+20340>:	jmp    0x1cd705 <->+19925>
   0x00000000001cd8a9 <+20345>:	mov    edi,DWORD PTR [rsp+0x3c8]
   0x00000000001cd8b0 <+20352>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cd8b5 <+20357>:	and    al,0x1
   0x00000000001cd8b7 <+20359>:	test   al,0x1
   0x00000000001cd8b9 <+20361>:	jne    0x1cd8c0 <->+20368>
   0x00000000001cd8bb <+20363>:	jmp    0x1cd947 <->+20503>
   0x00000000001cd8c0 <+20368>:	mov    r9,QWORD PTR [rsp+0x4970]
   0x00000000001cd8c8 <+20376>:	mov    r8,QWORD PTR [rsp+0x4968]
   0x00000000001cd8d0 <+20384>:	mov    rcx,QWORD PTR [rsp+0x4960]
   0x00000000001cd8d8 <+20392>:	mov    rdx,QWORD PTR [rsp+0x4958]
   0x00000000001cd8e0 <+20400>:	mov    esi,DWORD PTR [rsp+0x4950]
   0x00000000001cd8e7 <+20407>:	lea    rdi,[rsp+0xff8]
   0x00000000001cd8ef <+20415>:	call   0x340cb0 <new>
   0x00000000001cd8f4 <+20420>:	mov    eax,DWORD PTR [rsp+0xff8]
   0x00000000001cd8fb <+20427>:	mov    rcx,QWORD PTR [rsp+0x1000]
   0x00000000001cd903 <+20435>:	mov    rdx,QWORD PTR [rsp+0x1008]
   0x00000000001cd90b <+20443>:	mov    rsi,QWORD PTR [rsp+0x1010]
   0x00000000001cd913 <+20451>:	mov    QWORD PTR [rsp+0x3a60],rsi
   0x00000000001cd91b <+20459>:	mov    QWORD PTR [rsp+0x3a58],rdx
   0x00000000001cd923 <+20467>:	mov    QWORD PTR [rsp+0x3a50],rcx
   0x00000000001cd92b <+20475>:	mov    DWORD PTR [rsp+0x3a48],eax
   0x00000000001cd932 <+20482>:	lea    rax,[rsp+0x3a48]
   0x00000000001cd93a <+20490>:	mov    QWORD PTR [rsp+0x3c0],rax
   0x00000000001cd942 <+20498>:	jmp    0x1cd705 <->+19925>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cd947 <+20503>:	mov    rdi,QWORD PTR [rsp+0x4998]
   0x00000000001cd94f <+20511>:	mov    r8,QWORD PTR [rsp+0x4990]
   0x00000000001cd957 <+20519>:	mov    rcx,QWORD PTR [rsp+0x4988]
   0x00000000001cd95f <+20527>:	mov    rdx,QWORD PTR [rsp+0x4980]
   0x00000000001cd967 <+20535>:	mov    esi,DWORD PTR [rsp+0x4978]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cd96e <+20542>:	call   0x326080 <<<>
   0x00000000001cd973 <+20547>:	jmp    0x1cd977 <->+20551>
   0x00000000001cd975 <+20549>:	jmp    0x1cd977 <->+20551>
   0x00000000001cd977 <+20551>:	mov    eax,DWORD PTR [rsp+0x3ac0]
   0x00000000001cd97e <+20558>:	add    eax,DWORD PTR [rsp+0x3abc]
   0x00000000001cd985 <+20565>:	mov    DWORD PTR [rsp+0x3bc],eax
   0x00000000001cd98c <+20572>:	seto   al
   0x00000000001cd98f <+20575>:	test   al,0x1
   0x00000000001cd991 <+20577>:	jne    0x1cd995 <->+20581>
   0x00000000001cd993 <+20579>:	jmp    0x1cd99a <->+20586>

/usr/lib/crystal/char/reader.cr:
270	        @pos += @current_char_width
   0x00000000001cd995 <+20581>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001cd99a <+20586>:	mov    eax,DWORD PTR [rsp+0x3bc]
   0x00000000001cd9a1 <+20593>:	mov    DWORD PTR [rsp+0x3ac0],eax

271	        decode_current_char
   0x00000000001cd9a8 <+20600>:	lea    rdi,[rsp+0x3ab0]
   0x00000000001cd9b0 <+20608>:	call   0x271510 <decode_current_char>
   0x00000000001cd9b5 <+20613>:	jmp    0x1cd5fe <->+19662>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001cd9ba <+20618>:	jmp    0x1cd113 <->+18403>

249	    when StrictUndefined
   0x00000000001cd9bf <+20623>:	mov    rcx,QWORD PTR [rsp+0x4a90]
   0x00000000001cd9c7 <+20631>:	mov    rdx,QWORD PTR [rsp+0x4a88]
   0x00000000001cd9cf <+20639>:	mov    rsi,QWORD PTR [rsp+0x4a80]
   0x00000000001cd9d7 <+20647>:	mov    edi,DWORD PTR [rsp+0x4a78]

250	      raise TypeError.new(self, "can't iterate over undefined")
   0x00000000001cd9de <+20654>:	lea    r8,[rip+0x39216b]        # 0x55fb50
   0x00000000001cd9e5 <+20661>:	call   0x3002f0 <new>
   0x00000000001cd9ea <+20666>:	mov    rdi,rax
   0x00000000001cd9ed <+20669>:	call   0x182b50 <raise>

251	    when Undefined
   0x00000000001cd9f2 <+20674>:	mov    edi,DWORD PTR [rsp+0x4930]
   0x00000000001cd9f9 <+20681>:	call   0x17e870 <~match<Crinja::Undefined+>>
   0x00000000001cd9fe <+20686>:	test   al,0x1
   0x00000000001cda00 <+20688>:	jne    0x1cda04 <->+20692>
   0x00000000001cda02 <+20690>:	jmp    0x1cda06 <->+20694>
   0x00000000001cda04 <+20692>:	jmp    0x1cda5d <->+20781>
   0x00000000001cda06 <+20694>:	mov    rax,QWORD PTR [rsp+0x4a90]
   0x00000000001cda0e <+20702>:	mov    QWORD PTR [rsp+0x398],rax
   0x00000000001cda16 <+20710>:	mov    rax,QWORD PTR [rsp+0x4a88]
   0x00000000001cda1e <+20718>:	mov    QWORD PTR [rsp+0x3a0],rax
   0x00000000001cda26 <+20726>:	mov    rax,QWORD PTR [rsp+0x4a80]
   0x00000000001cda2e <+20734>:	mov    QWORD PTR [rsp+0x3a8],rax
   0x00000000001cda36 <+20742>:	mov    eax,DWORD PTR [rsp+0x4a78]
   0x00000000001cda3d <+20749>:	mov    DWORD PTR [rsp+0x3b4],eax
   0x00000000001cda44 <+20756>:	mov    ecx,DWORD PTR [rsp+0x4930]
   0x00000000001cda4b <+20763>:	mov    DWORD PTR [rsp+0x3b8],ecx
   0x00000000001cda52 <+20770>:	mov    eax,0x1cd
   0x00000000001cda57 <+20775>:	cmp    eax,ecx
   0x00000000001cda59 <+20777>:	je     0x1cda62 <->+20786>
   0x00000000001cda5b <+20779>:	jmp    0x1cda8a <->+20826>

252	    else
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001cda5d <+20781>:	jmp    0x1cd9ba <->+20618>

251	    when Undefined
   0x00000000001cda62 <+20786>:	mov    DWORD PTR [rsp+0x3a18],0x72f
   0x00000000001cda6d <+20797>:	mov    DWORD PTR [rsp+0x3a20],0x72f
   0x00000000001cda78 <+20808>:	lea    rax,[rsp+0x3a18]
   0x00000000001cda80 <+20816>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cda88 <+20824>:	jmp    0x1cda9c <->+20844>
   0x00000000001cda8a <+20826>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cda91 <+20833>:	mov    eax,0x125
   0x00000000001cda96 <+20838>:	cmp    eax,ecx
   0x00000000001cda98 <+20840>:	je     0x1cdae5 <->+20917>
   0x00000000001cda9a <+20842>:	jmp    0x1cdb0d <->+20957>
   0x00000000001cda9c <+20844>:	mov    rax,QWORD PTR [rsp+0x390]
   0x00000000001cdaa4 <+20852>:	mov    rsi,QWORD PTR [rax+0x8]
   0x00000000001cdaa8 <+20856>:	mov    edi,DWORD PTR [rax]

252	    else
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001cdaaa <+20858>:	lea    rdx,[rip+0x3920cf]        # 0x55fb80
   0x00000000001cdab1 <+20865>:	call   0x237a00 <interpolation>
   0x00000000001cdab6 <+20870>:	mov    edi,DWORD PTR [rsp+0x3b4]
   0x00000000001cdabd <+20877>:	mov    rsi,QWORD PTR [rsp+0x3a8]
   0x00000000001cdac5 <+20885>:	mov    rdx,QWORD PTR [rsp+0x3a0]
   0x00000000001cdacd <+20893>:	mov    rcx,QWORD PTR [rsp+0x398]
   0x00000000001cdad5 <+20901>:	mov    r8,rax
   0x00000000001cdad8 <+20904>:	call   0x3002f0 <new>
   0x00000000001cdadd <+20909>:	mov    rdi,rax
   0x00000000001cdae0 <+20912>:	call   0x182b50 <raise>

251	    when Undefined
   0x00000000001cdae5 <+20917>:	mov    DWORD PTR [rsp+0x3a08],0x686
   0x00000000001cdaf0 <+20928>:	mov    DWORD PTR [rsp+0x3a10],0x686
   0x00000000001cdafb <+20939>:	lea    rax,[rsp+0x3a08]
   0x00000000001cdb03 <+20947>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdb0b <+20955>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdb0d <+20957>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdb14 <+20964>:	mov    eax,0x196
   0x00000000001cdb19 <+20969>:	cmp    eax,ecx
   0x00000000001cdb1b <+20971>:	jne    0x1cdb48 <->+21016>
   0x00000000001cdb1d <+20973>:	mov    DWORD PTR [rsp+0x39f8],0x6f7
   0x00000000001cdb28 <+20984>:	mov    DWORD PTR [rsp+0x3a00],0x6f7
   0x00000000001cdb33 <+20995>:	lea    rax,[rsp+0x39f8]
   0x00000000001cdb3b <+21003>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdb43 <+21011>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdb48 <+21016>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdb4f <+21023>:	mov    eax,0x197
   0x00000000001cdb54 <+21028>:	cmp    eax,ecx
   0x00000000001cdb56 <+21030>:	jne    0x1cdb83 <->+21075>
   0x00000000001cdb58 <+21032>:	mov    DWORD PTR [rsp+0x39e8],0x6f9
   0x00000000001cdb63 <+21043>:	mov    DWORD PTR [rsp+0x39f0],0x6f9
   0x00000000001cdb6e <+21054>:	lea    rax,[rsp+0x39e8]
   0x00000000001cdb76 <+21062>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdb7e <+21070>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdb83 <+21075>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdb8a <+21082>:	mov    eax,0x199
   0x00000000001cdb8f <+21087>:	cmp    eax,ecx
   0x00000000001cdb91 <+21089>:	jne    0x1cdbbe <->+21134>
   0x00000000001cdb93 <+21091>:	mov    DWORD PTR [rsp+0x39d8],0x6fa
   0x00000000001cdb9e <+21102>:	mov    DWORD PTR [rsp+0x39e0],0x6fa
   0x00000000001cdba9 <+21113>:	lea    rax,[rsp+0x39d8]
   0x00000000001cdbb1 <+21121>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdbb9 <+21129>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdbbe <+21134>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdbc5 <+21141>:	mov    eax,0x193
   0x00000000001cdbca <+21146>:	cmp    eax,ecx
   0x00000000001cdbcc <+21148>:	jne    0x1cdbf9 <->+21193>
   0x00000000001cdbce <+21150>:	mov    DWORD PTR [rsp+0x39c8],0x6f4
   0x00000000001cdbd9 <+21161>:	mov    DWORD PTR [rsp+0x39d0],0x6f4
   0x00000000001cdbe4 <+21172>:	lea    rax,[rsp+0x39c8]
   0x00000000001cdbec <+21180>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdbf4 <+21188>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdbf9 <+21193>:	mov    edi,DWORD PTR [rsp+0x3b8]
   0x00000000001cdc00 <+21200>:	call   0x17e850 <~match<Crinja::Tag::For::ForLoop+>>
   0x00000000001cdc05 <+21205>:	test   al,0x1
   0x00000000001cdc07 <+21207>:	jne    0x1cdc0b <->+21211>
   0x00000000001cdc09 <+21209>:	jmp    0x1cdc3d <->+21261>
   0x00000000001cdc0b <+21211>:	mov    rax,QWORD PTR [rsp+0x4938]
   0x00000000001cdc13 <+21219>:	mov    edi,DWORD PTR [rax]
   0x00000000001cdc15 <+21221>:	call   0x17bc60 <~metaclass>
   0x00000000001cdc1a <+21226>:	mov    DWORD PTR [rsp+0x39b8],eax
   0x00000000001cdc21 <+21233>:	mov    DWORD PTR [rsp+0x39c0],eax
   0x00000000001cdc28 <+21240>:	lea    rax,[rsp+0x39b8]
   0x00000000001cdc30 <+21248>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdc38 <+21256>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdc3d <+21261>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdc44 <+21268>:	mov    eax,0x12a
   0x00000000001cdc49 <+21273>:	cmp    eax,ecx
   0x00000000001cdc4b <+21275>:	jne    0x1cdc78 <->+21320>
   0x00000000001cdc4d <+21277>:	mov    DWORD PTR [rsp+0x39a8],0x68b
   0x00000000001cdc58 <+21288>:	mov    DWORD PTR [rsp+0x39b0],0x68b
   0x00000000001cdc63 <+21299>:	lea    rax,[rsp+0x39a8]
   0x00000000001cdc6b <+21307>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdc73 <+21315>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdc78 <+21320>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdc7f <+21327>:	mov    eax,0x1bb
   0x00000000001cdc84 <+21332>:	cmp    eax,ecx
   0x00000000001cdc86 <+21334>:	jne    0x1cdcb3 <->+21379>
   0x00000000001cdc88 <+21336>:	mov    DWORD PTR [rsp+0x3998],0x71c
   0x00000000001cdc93 <+21347>:	mov    DWORD PTR [rsp+0x39a0],0x71c
   0x00000000001cdc9e <+21358>:	lea    rax,[rsp+0x3998]
   0x00000000001cdca6 <+21366>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdcae <+21374>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdcb3 <+21379>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdcba <+21386>:	mov    eax,0x1bc
   0x00000000001cdcbf <+21391>:	cmp    eax,ecx
   0x00000000001cdcc1 <+21393>:	jne    0x1cdcee <->+21438>
   0x00000000001cdcc3 <+21395>:	mov    DWORD PTR [rsp+0x3988],0x71d
   0x00000000001cdcce <+21406>:	mov    DWORD PTR [rsp+0x3990],0x71d
   0x00000000001cdcd9 <+21417>:	lea    rax,[rsp+0x3988]
   0x00000000001cdce1 <+21425>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdce9 <+21433>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdcee <+21438>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdcf5 <+21445>:	mov    eax,0x4ee
   0x00000000001cdcfa <+21450>:	cmp    eax,ecx
   0x00000000001cdcfc <+21452>:	jne    0x1cdd29 <->+21497>
   0x00000000001cdcfe <+21454>:	mov    DWORD PTR [rsp+0x3978],0xa52
   0x00000000001cdd09 <+21465>:	mov    DWORD PTR [rsp+0x3980],0xa52
   0x00000000001cdd14 <+21476>:	lea    rax,[rsp+0x3978]
   0x00000000001cdd1c <+21484>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdd24 <+21492>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdd29 <+21497>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdd30 <+21504>:	mov    eax,0x1ca
   0x00000000001cdd35 <+21509>:	cmp    eax,ecx
   0x00000000001cdd37 <+21511>:	jne    0x1cdd64 <->+21556>
   0x00000000001cdd39 <+21513>:	mov    DWORD PTR [rsp+0x3968],0x72d
   0x00000000001cdd44 <+21524>:	mov    DWORD PTR [rsp+0x3970],0x72d
   0x00000000001cdd4f <+21535>:	lea    rax,[rsp+0x3968]
   0x00000000001cdd57 <+21543>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdd5f <+21551>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdd64 <+21556>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdd6b <+21563>:	mov    eax,0x1c2
   0x00000000001cdd70 <+21568>:	cmp    eax,ecx
   0x00000000001cdd72 <+21570>:	jne    0x1cdd9f <->+21615>
   0x00000000001cdd74 <+21572>:	mov    DWORD PTR [rsp+0x3958],0x725
   0x00000000001cdd7f <+21583>:	mov    DWORD PTR [rsp+0x3960],0x725
   0x00000000001cdd8a <+21594>:	lea    rax,[rsp+0x3958]
   0x00000000001cdd92 <+21602>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cdd9a <+21610>:	jmp    0x1cda9c <->+20844>
   0x00000000001cdd9f <+21615>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdda6 <+21622>:	mov    eax,0x1c4
   0x00000000001cddab <+21627>:	cmp    eax,ecx
   0x00000000001cddad <+21629>:	jne    0x1cddda <->+21674>
   0x00000000001cddaf <+21631>:	mov    DWORD PTR [rsp+0x3948],0x727
   0x00000000001cddba <+21642>:	mov    DWORD PTR [rsp+0x3950],0x727
   0x00000000001cddc5 <+21653>:	lea    rax,[rsp+0x3948]
   0x00000000001cddcd <+21661>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cddd5 <+21669>:	jmp    0x1cda9c <->+20844>
   0x00000000001cddda <+21674>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cdde1 <+21681>:	mov    eax,0x50a
   0x00000000001cdde6 <+21686>:	cmp    eax,ecx
   0x00000000001cdde8 <+21688>:	jne    0x1cde15 <->+21733>
   0x00000000001cddea <+21690>:	mov    DWORD PTR [rsp+0x3938],0xa54
   0x00000000001cddf5 <+21701>:	mov    DWORD PTR [rsp+0x3940],0xa54
   0x00000000001cde00 <+21712>:	lea    rax,[rsp+0x3938]
   0x00000000001cde08 <+21720>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cde10 <+21728>:	jmp    0x1cda9c <->+20844>
   0x00000000001cde15 <+21733>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cde1c <+21740>:	mov    eax,0x4da
   0x00000000001cde21 <+21745>:	cmp    eax,ecx
   0x00000000001cde23 <+21747>:	jne    0x1cde50 <->+21792>
   0x00000000001cde25 <+21749>:	mov    DWORD PTR [rsp+0x3928],0xa3e
   0x00000000001cde30 <+21760>:	mov    DWORD PTR [rsp+0x3930],0xa3e
   0x00000000001cde3b <+21771>:	lea    rax,[rsp+0x3928]
   0x00000000001cde43 <+21779>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cde4b <+21787>:	jmp    0x1cda9c <->+20844>
   0x00000000001cde50 <+21792>:	mov    ecx,DWORD PTR [rsp+0x3b8]
   0x00000000001cde57 <+21799>:	xor    eax,eax
   0x00000000001cde59 <+21801>:	cmp    eax,ecx
   0x00000000001cde5b <+21803>:	jne    0x1cde88 <->+21848>
   0x00000000001cde5d <+21805>:	mov    DWORD PTR [rsp+0x3918],0x72e
   0x00000000001cde68 <+21816>:	mov    DWORD PTR [rsp+0x3920],0x72e
   0x00000000001cde73 <+21827>:	lea    rax,[rsp+0x3918]
   0x00000000001cde7b <+21835>:	mov    QWORD PTR [rsp+0x390],rax
   0x00000000001cde83 <+21843>:	jmp    0x1cda9c <->+20844>
   0x00000000001cde88 <+21848>:	mov    rsi,QWORD PTR [rsp+0x540]
   0x00000000001cde90 <+21856>:	lea    rdi,[rsp+0x5d8]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
190	  Crinja.filter(:selectattr) do
   0x00000000001cde98 <+21864>:	call   0x33c880 <new>
   0x00000000001cde9d <+21869>:	mov    rcx,QWORD PTR [rsp+0x5d0]
   0x00000000001cdea5 <+21877>:	mov    rax,QWORD PTR [rsp+0x580]
   0x00000000001cdead <+21885>:	mov    edx,DWORD PTR [rsp+0x5d8]
   0x00000000001cdeb4 <+21892>:	mov    rsi,QWORD PTR [rsp+0x5e0]
   0x00000000001cdebc <+21900>:	mov    rdi,QWORD PTR [rsp+0x5e8]
   0x00000000001cdec4 <+21908>:	mov    r8,QWORD PTR [rsp+0x5f0]
   0x00000000001cdecc <+21916>:	mov    QWORD PTR [rsp+0x2180],r8
   0x00000000001cded4 <+21924>:	mov    QWORD PTR [rsp+0x2178],rdi
   0x00000000001cdedc <+21932>:	mov    QWORD PTR [rsp+0x2170],rsi
   0x00000000001cdee4 <+21940>:	mov    DWORD PTR [rsp+0x2168],edx
   0x00000000001cdeeb <+21947>:	mov    edx,DWORD PTR [rsp+0x2168]
   0x00000000001cdef2 <+21954>:	mov    rsi,QWORD PTR [rsp+0x2170]
   0x00000000001cdefa <+21962>:	mov    rdi,QWORD PTR [rsp+0x2178]
   0x00000000001cdf02 <+21970>:	mov    r8,QWORD PTR [rsp+0x2180]
   0x00000000001cdf0a <+21978>:	mov    QWORD PTR [rcx+0x18],r8
   0x00000000001cdf0e <+21982>:	mov    QWORD PTR [rcx+0x10],rdi
   0x00000000001cdf12 <+21986>:	mov    QWORD PTR [rcx+0x8],rsi
   0x00000000001cdf16 <+21990>:	mov    DWORD PTR [rcx],edx
   0x00000000001cdf18 <+21992>:	add    rsp,0x4aa0
   0x00000000001cdf1f <+21999>:	pop    rbx
   0x00000000001cdf20 <+22000>:	pop    r14
   0x00000000001cdf22 <+22002>:	pop    r15
   0x00000000001cdf24 <+22004>:	ret

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
241	    when Hash
   0x00000000001cdf25 <+22005>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001cdf2d <+22013>:	mov    QWORD PTR [rsp+0x388],rax

/usr/lib/crystal/hash.cr:
916	    return if @size == 0
   0x00000000001cdf35 <+22021>:	cmp    DWORD PTR [rax+0x18],0x0
   0x00000000001cdf39 <+22025>:	je     0x1cdf56 <->+22054>
   0x00000000001cdf3b <+22027>:	jmp    0x1cdf58 <->+22056>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
243	    when Iterable(Value), ::Iterator(Value)
   0x00000000001cdf3d <+22029>:	mov    edi,DWORD PTR [rsp+0x3820]
   0x00000000001cdf44 <+22036>:	call   0x182a10 <~match<(Array(Crinja::Value) | Crinja::Tuple)>>
   0x00000000001cdf49 <+22041>:	test   al,0x1
   0x00000000001cdf4b <+22043>:	jne    0x1ce9bf <->+24719>
   0x00000000001cdf51 <+22049>:	jmp    0x1ce9ca <->+24730>

/usr/lib/crystal/hash.cr:
916	    return if @size == 0
   0x00000000001cdf56 <+22054>:	jmp    0x1cdf81 <->+22097>
   0x00000000001cdf58 <+22056>:	mov    rdi,QWORD PTR [rsp+0x388]
   0x00000000001cdf60 <+22064>:	mov    eax,DWORD PTR [rdi+0x4]
   0x00000000001cdf63 <+22067>:	mov    DWORD PTR [rsp+0x380],eax

917	
918	    @first.upto(entries_size - 1) do |i|
   0x00000000001cdf6a <+22074>:	call   0x327930 <entries_size>
   0x00000000001cdf6f <+22079>:	dec    eax
   0x00000000001cdf71 <+22081>:	mov    DWORD PTR [rsp+0x384],eax
   0x00000000001cdf78 <+22088>:	seto   al
   0x00000000001cdf7b <+22091>:	test   al,0x1
   0x00000000001cdf7d <+22093>:	jne    0x1cdf86 <->+22102>
   0x00000000001cdf7f <+22095>:	jmp    0x1cdf8b <->+22107>

/usr/lib/crystal/int.cr:
582	      x += 1
   0x00000000001cdf81 <+22097>:	jmp    0x1ce97a <->+24650>

/usr/lib/crystal/hash.cr:
918	    @first.upto(entries_size - 1) do |i|
   0x00000000001cdf86 <+22102>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001cdf8b <+22107>:	mov    eax,DWORD PTR [rsp+0x380]
   0x00000000001cdf92 <+22114>:	mov    ecx,DWORD PTR [rsp+0x384]
   0x00000000001cdf99 <+22121>:	mov    DWORD PTR [rsp+0x3744],ecx

/usr/lib/crystal/int.cr:
577	    return unless self <= to
   0x00000000001cdfa0 <+22128>:	cmp    eax,DWORD PTR [rsp+0x3744]
   0x00000000001cdfa7 <+22135>:	jg     0x1cdfab <->+22139>
   0x00000000001cdfa9 <+22137>:	jmp    0x1cdfad <->+22141>
   0x00000000001cdfab <+22139>:	jmp    0x1cdfbd <->+22157>
   0x00000000001cdfad <+22141>:	mov    eax,DWORD PTR [rsp+0x380]

578	    x = self
   0x00000000001cdfb4 <+22148>:	mov    DWORD PTR [rsp+0x3740],eax
   0x00000000001cdfbb <+22155>:	jmp    0x1cdfbf <->+22159>

582	      x += 1
   0x00000000001cdfbd <+22157>:	jmp    0x1cdf81 <->+22097>
   0x00000000001cdfbf <+22159>:	mov    rsi,QWORD PTR [rsp+0x388]

578	    x = self
   0x00000000001cdfc7 <+22167>:	mov    eax,DWORD PTR [rsp+0x3740]
   0x00000000001cdfce <+22174>:	mov    DWORD PTR [rsp+0x3790],eax
   0x00000000001cdfd5 <+22181>:	mov    edx,DWORD PTR [rsp+0x3790]
   0x00000000001cdfdc <+22188>:	lea    rdi,[rsp+0x1128]

/usr/lib/crystal/hash.cr:
919	      entry = get_entry(i)
   0x00000000001cdfe4 <+22196>:	call   0x327950 <get_entry>
   0x00000000001cdfe9 <+22201>:	mov    eax,DWORD PTR [rsp+0x1128]
   0x00000000001cdff0 <+22208>:	mov    ecx,DWORD PTR [rsp+0x1130]
   0x00000000001cdff7 <+22215>:	mov    rdx,QWORD PTR [rsp+0x1138]
   0x00000000001cdfff <+22223>:	mov    rsi,QWORD PTR [rsp+0x1140]
   0x00000000001ce007 <+22231>:	mov    rdi,QWORD PTR [rsp+0x1148]
   0x00000000001ce00f <+22239>:	mov    r8d,DWORD PTR [rsp+0x1150]
   0x00000000001ce017 <+22247>:	mov    r9,QWORD PTR [rsp+0x1158]
   0x00000000001ce01f <+22255>:	mov    r10,QWORD PTR [rsp+0x1160]
   0x00000000001ce027 <+22263>:	mov    r11,QWORD PTR [rsp+0x1168]
   0x00000000001ce02f <+22271>:	mov    QWORD PTR [rsp+0x3738],r11
   0x00000000001ce037 <+22279>:	mov    QWORD PTR [rsp+0x3730],r10
   0x00000000001ce03f <+22287>:	mov    QWORD PTR [rsp+0x3728],r9
   0x00000000001ce047 <+22295>:	mov    DWORD PTR [rsp+0x3720],r8d
   0x00000000001ce04f <+22303>:	mov    QWORD PTR [rsp+0x3718],rdi
   0x00000000001ce057 <+22311>:	mov    QWORD PTR [rsp+0x3710],rsi
   0x00000000001ce05f <+22319>:	mov    QWORD PTR [rsp+0x3708],rdx
   0x00000000001ce067 <+22327>:	mov    DWORD PTR [rsp+0x3700],ecx
   0x00000000001ce06e <+22334>:	mov    DWORD PTR [rsp+0x36f8],eax
   0x00000000001ce075 <+22341>:	mov    eax,DWORD PTR [rsp+0x36f8]
   0x00000000001ce07c <+22348>:	mov    ecx,DWORD PTR [rsp+0x3700]
   0x00000000001ce083 <+22355>:	mov    rdx,QWORD PTR [rsp+0x3708]
   0x00000000001ce08b <+22363>:	mov    rsi,QWORD PTR [rsp+0x3710]
   0x00000000001ce093 <+22371>:	mov    rdi,QWORD PTR [rsp+0x3718]
   0x00000000001ce09b <+22379>:	mov    r8d,DWORD PTR [rsp+0x3720]
   0x00000000001ce0a3 <+22387>:	mov    r9,QWORD PTR [rsp+0x3728]
   0x00000000001ce0ab <+22395>:	mov    r10,QWORD PTR [rsp+0x3730]
   0x00000000001ce0b3 <+22403>:	mov    r11,QWORD PTR [rsp+0x3738]
   0x00000000001ce0bb <+22411>:	mov    QWORD PTR [rsp+0x3788],r11
   0x00000000001ce0c3 <+22419>:	mov    QWORD PTR [rsp+0x3780],r10
   0x00000000001ce0cb <+22427>:	mov    QWORD PTR [rsp+0x3778],r9
   0x00000000001ce0d3 <+22435>:	mov    DWORD PTR [rsp+0x3770],r8d
   0x00000000001ce0db <+22443>:	mov    QWORD PTR [rsp+0x3768],rdi
   0x00000000001ce0e3 <+22451>:	mov    QWORD PTR [rsp+0x3760],rsi
   0x00000000001ce0eb <+22459>:	mov    QWORD PTR [rsp+0x3758],rdx
   0x00000000001ce0f3 <+22467>:	mov    DWORD PTR [rsp+0x3750],ecx
   0x00000000001ce0fa <+22474>:	mov    DWORD PTR [rsp+0x3748],eax

920	      yield entry, i unless entry.deleted?
   0x00000000001ce101 <+22481>:	lea    rdi,[rsp+0x3748]
   0x00000000001ce109 <+22489>:	call   0x333c70 <deleted?>
   0x00000000001ce10e <+22494>:	test   al,0x1
   0x00000000001ce110 <+22496>:	jne    0x1ce114 <->+22500>
   0x00000000001ce112 <+22498>:	jmp    0x1ce119 <->+22505>
   0x00000000001ce114 <+22500>:	jmp    0x1ce3ab <->+23163>
   0x00000000001ce119 <+22505>:	mov    eax,DWORD PTR [rsp+0x3790]
   0x00000000001ce120 <+22512>:	mov    ecx,DWORD PTR [rsp+0x3748]
   0x00000000001ce127 <+22519>:	mov    edx,DWORD PTR [rsp+0x3750]
   0x00000000001ce12e <+22526>:	mov    rsi,QWORD PTR [rsp+0x3758]
   0x00000000001ce136 <+22534>:	mov    rdi,QWORD PTR [rsp+0x3760]
   0x00000000001ce13e <+22542>:	mov    r8,QWORD PTR [rsp+0x3768]
   0x00000000001ce146 <+22550>:	mov    r9d,DWORD PTR [rsp+0x3770]
   0x00000000001ce14e <+22558>:	mov    r10,QWORD PTR [rsp+0x3778]
   0x00000000001ce156 <+22566>:	mov    r11,QWORD PTR [rsp+0x3780]
   0x00000000001ce15e <+22574>:	mov    rbx,QWORD PTR [rsp+0x3788]
   0x00000000001ce166 <+22582>:	mov    QWORD PTR [rsp+0x37d8],rbx
   0x00000000001ce16e <+22590>:	mov    QWORD PTR [rsp+0x37d0],r11
   0x00000000001ce176 <+22598>:	mov    QWORD PTR [rsp+0x37c8],r10
   0x00000000001ce17e <+22606>:	mov    DWORD PTR [rsp+0x37c0],r9d
   0x00000000001ce186 <+22614>:	mov    QWORD PTR [rsp+0x37b8],r8
   0x00000000001ce18e <+22622>:	mov    QWORD PTR [rsp+0x37b0],rdi
   0x00000000001ce196 <+22630>:	mov    QWORD PTR [rsp+0x37a8],rsi
   0x00000000001ce19e <+22638>:	mov    DWORD PTR [rsp+0x37a0],edx
   0x00000000001ce1a5 <+22645>:	mov    DWORD PTR [rsp+0x3798],ecx
   0x00000000001ce1ac <+22652>:	mov    DWORD PTR [rsp+0x3794],eax
   0x00000000001ce1b3 <+22659>:	mov    eax,DWORD PTR [rsp+0x37a0]
   0x00000000001ce1ba <+22666>:	mov    rcx,QWORD PTR [rsp+0x37a8]
   0x00000000001ce1c2 <+22674>:	mov    rdx,QWORD PTR [rsp+0x37b0]
   0x00000000001ce1ca <+22682>:	mov    rsi,QWORD PTR [rsp+0x37b8]
   0x00000000001ce1d2 <+22690>:	mov    QWORD PTR [rsp+0x36d0],rsi
   0x00000000001ce1da <+22698>:	mov    QWORD PTR [rsp+0x36c8],rdx
   0x00000000001ce1e2 <+22706>:	mov    QWORD PTR [rsp+0x36c0],rcx
   0x00000000001ce1ea <+22714>:	mov    DWORD PTR [rsp+0x36b8],eax
   0x00000000001ce1f1 <+22721>:	mov    eax,DWORD PTR [rsp+0x37c0]
   0x00000000001ce1f8 <+22728>:	mov    rcx,QWORD PTR [rsp+0x37c8]
   0x00000000001ce200 <+22736>:	mov    rdx,QWORD PTR [rsp+0x37d0]
   0x00000000001ce208 <+22744>:	mov    rsi,QWORD PTR [rsp+0x37d8]
   0x00000000001ce210 <+22752>:	mov    QWORD PTR [rsp+0x36f0],rsi
   0x00000000001ce218 <+22760>:	mov    QWORD PTR [rsp+0x36e8],rdx
   0x00000000001ce220 <+22768>:	mov    QWORD PTR [rsp+0x36e0],rcx
   0x00000000001ce228 <+22776>:	mov    DWORD PTR [rsp+0x36d8],eax
   0x00000000001ce22f <+22783>:	mov    eax,DWORD PTR [rsp+0x36b8]
   0x00000000001ce236 <+22790>:	mov    rcx,QWORD PTR [rsp+0x36c0]
   0x00000000001ce23e <+22798>:	mov    rdx,QWORD PTR [rsp+0x36c8]
   0x00000000001ce246 <+22806>:	mov    rsi,QWORD PTR [rsp+0x36d0]
   0x00000000001ce24e <+22814>:	mov    QWORD PTR [rsp+0x3818],rsi
   0x00000000001ce256 <+22822>:	mov    QWORD PTR [rsp+0x3810],rdx
   0x00000000001ce25e <+22830>:	mov    QWORD PTR [rsp+0x3808],rcx
   0x00000000001ce266 <+22838>:	mov    DWORD PTR [rsp+0x3800],eax
   0x00000000001ce26d <+22845>:	mov    eax,DWORD PTR [rsp+0x36d8]
   0x00000000001ce274 <+22852>:	mov    rcx,QWORD PTR [rsp+0x36e0]
   0x00000000001ce27c <+22860>:	mov    rdx,QWORD PTR [rsp+0x36e8]
   0x00000000001ce284 <+22868>:	mov    rsi,QWORD PTR [rsp+0x36f0]
   0x00000000001ce28c <+22876>:	mov    QWORD PTR [rsp+0x37f8],rsi
   0x00000000001ce294 <+22884>:	mov    QWORD PTR [rsp+0x37f0],rdx
   0x00000000001ce29c <+22892>:	mov    QWORD PTR [rsp+0x37e8],rcx
   0x00000000001ce2a4 <+22900>:	mov    DWORD PTR [rsp+0x37e0],eax
   0x00000000001ce2ab <+22907>:	mov    eax,DWORD PTR [rsp+0x3800]
   0x00000000001ce2b2 <+22914>:	mov    rcx,QWORD PTR [rsp+0x3808]
   0x00000000001ce2ba <+22922>:	mov    rdx,QWORD PTR [rsp+0x3810]
   0x00000000001ce2c2 <+22930>:	mov    rsi,QWORD PTR [rsp+0x3818]
   0x00000000001ce2ca <+22938>:	mov    QWORD PTR [rsp+0x3690],rsi
   0x00000000001ce2d2 <+22946>:	mov    QWORD PTR [rsp+0x3688],rdx
   0x00000000001ce2da <+22954>:	mov    QWORD PTR [rsp+0x3680],rcx
   0x00000000001ce2e2 <+22962>:	mov    DWORD PTR [rsp+0x3678],eax
   0x00000000001ce2e9 <+22969>:	mov    eax,DWORD PTR [rsp+0x37e0]
   0x00000000001ce2f0 <+22976>:	mov    rcx,QWORD PTR [rsp+0x37e8]
   0x00000000001ce2f8 <+22984>:	mov    rdx,QWORD PTR [rsp+0x37f0]
   0x00000000001ce300 <+22992>:	mov    rsi,QWORD PTR [rsp+0x37f8]
   0x00000000001ce308 <+23000>:	mov    QWORD PTR [rsp+0x36b0],rsi
   0x00000000001ce310 <+23008>:	mov    QWORD PTR [rsp+0x36a8],rdx
   0x00000000001ce318 <+23016>:	mov    QWORD PTR [rsp+0x36a0],rcx
   0x00000000001ce320 <+23024>:	mov    DWORD PTR [rsp+0x3698],eax
   0x00000000001ce327 <+23031>:	mov    r10,QWORD PTR [rsp+0x36b0]
   0x00000000001ce32f <+23039>:	mov    r11,QWORD PTR [rsp+0x36a8]
   0x00000000001ce337 <+23047>:	mov    r9,QWORD PTR [rsp+0x36a0]
   0x00000000001ce33f <+23055>:	mov    r8d,DWORD PTR [rsp+0x3698]
   0x00000000001ce347 <+23063>:	mov    rcx,QWORD PTR [rsp+0x3690]
   0x00000000001ce34f <+23071>:	mov    rdx,QWORD PTR [rsp+0x3688]
   0x00000000001ce357 <+23079>:	mov    rsi,QWORD PTR [rsp+0x3680]
   0x00000000001ce35f <+23087>:	mov    edi,DWORD PTR [rsp+0x3678]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
242	      object.each { |key, value| yield Crinja::Tuple.from({key, value}) }
   0x00000000001ce366 <+23094>:	mov    rax,rsp
   0x00000000001ce369 <+23097>:	mov    QWORD PTR [rax],r11
   0x00000000001ce36c <+23100>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ce370 <+23104>:	call   0x3348b0 <from>
   0x00000000001ce375 <+23109>:	mov    DWORD PTR [rsp+0x3840],0x12a
   0x00000000001ce380 <+23120>:	mov    QWORD PTR [rsp+0x3848],rax
   0x00000000001ce388 <+23128>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001ce38f <+23135>:	mov    DWORD PTR [rsp+0x37c],ecx
   0x00000000001ce396 <+23142>:	mov    eax,0x4ed
   0x00000000001ce39b <+23147>:	cmp    eax,ecx
   0x00000000001ce39d <+23149>:	sete   al
   0x00000000001ce3a0 <+23152>:	and    al,0x1
   0x00000000001ce3a2 <+23154>:	test   al,0x1
   0x00000000001ce3a4 <+23156>:	jne    0x1ce3c4 <->+23188>
   0x00000000001ce3a6 <+23158>:	jmp    0x1ce440 <->+23312>

/usr/lib/crystal/int.cr:
581	      return if x == to
   0x00000000001ce3ab <+23163>:	mov    eax,DWORD PTR [rsp+0x3740]
   0x00000000001ce3b2 <+23170>:	cmp    eax,DWORD PTR [rsp+0x3744]
   0x00000000001ce3b9 <+23177>:	je     0x1ce944 <->+24596>
   0x00000000001ce3bf <+23183>:	jmp    0x1ce949 <->+24601>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
242	      object.each { |key, value| yield Crinja::Tuple.from({key, value}) }
   0x00000000001ce3c4 <+23188>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001ce3cc <+23196>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001ce3d4 <+23204>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001ce3dc <+23212>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001ce3e3 <+23219>:	lea    rdi,[rsp+0x10c8]

254	    end
255	  end
256	
257	  # Assumes the underlying value is an `Iterable` and yields each
258	  # of the elements or key/values, always as `Value`.
259	  def each
260	    raw_each do |raw|
261	      yield Value.new raw
   0x00000000001ce3eb <+23227>:	call   0x339d20 <new>
   0x00000000001ce3f0 <+23232>:	mov    eax,DWORD PTR [rsp+0x10c8]
   0x00000000001ce3f7 <+23239>:	mov    rcx,QWORD PTR [rsp+0x10d0]
   0x00000000001ce3ff <+23247>:	mov    rdx,QWORD PTR [rsp+0x10d8]
   0x00000000001ce407 <+23255>:	mov    rsi,QWORD PTR [rsp+0x10e0]
   0x00000000001ce40f <+23263>:	mov    QWORD PTR [rsp+0x3670],rsi
   0x00000000001ce417 <+23271>:	mov    QWORD PTR [rsp+0x3668],rdx
   0x00000000001ce41f <+23279>:	mov    QWORD PTR [rsp+0x3660],rcx
   0x00000000001ce427 <+23287>:	mov    DWORD PTR [rsp+0x3658],eax
   0x00000000001ce42e <+23294>:	lea    rax,[rsp+0x3658]
   0x00000000001ce436 <+23302>:	mov    QWORD PTR [rsp+0x370],rax
   0x00000000001ce43e <+23310>:	jmp    0x1ce45b <->+23339>
   0x00000000001ce440 <+23312>:	mov    edi,DWORD PTR [rsp+0x37c]
   0x00000000001ce447 <+23319>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ce44c <+23324>:	and    al,0x1
   0x00000000001ce44e <+23326>:	test   al,0x1
   0x00000000001ce450 <+23328>:	jne    0x1ce7d8 <->+24232>
   0x00000000001ce456 <+23334>:	jmp    0x1ce857 <->+24359>
   0x00000000001ce45b <+23339>:	mov    rsi,QWORD PTR [rsp+0x370]
   0x00000000001ce463 <+23347>:	mov    eax,DWORD PTR [rsi]
   0x00000000001ce465 <+23349>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001ce469 <+23353>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001ce46d <+23357>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001ce471 <+23361>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001ce479 <+23369>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001ce481 <+23377>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001ce489 <+23385>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ce490 <+23392>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001ce497 <+23399>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001ce49f <+23407>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001ce4a7 <+23415>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001ce4af <+23423>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001ce4b7 <+23431>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001ce4bf <+23439>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001ce4c7 <+23447>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001ce4ce <+23454>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001ce4d6 <+23462>:	mov    QWORD PTR [rsp+0x358],rax
   0x00000000001ce4de <+23470>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001ce4e6 <+23478>:	mov    QWORD PTR [rsp+0x360],rax
   0x00000000001ce4ee <+23486>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001ce4f6 <+23494>:	mov    QWORD PTR [rsp+0x368],rax
   0x00000000001ce4fe <+23502>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001ce506 <+23510>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001ce50e <+23518>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001ce516 <+23526>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001ce51d <+23533>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001ce525 <+23541>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001ce52d <+23549>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001ce535 <+23557>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ce53d <+23565>:	mov    rax,rsp
   0x00000000001ce540 <+23568>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001ce544 <+23572>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ce548 <+23576>:	mov    QWORD PTR [rax],rdi
   0x00000000001ce54b <+23579>:	lea    rdi,[rsp+0x10a8]
   0x00000000001ce553 <+23587>:	call   0x511190 <resolve_getattr>
   0x00000000001ce558 <+23592>:	mov    rsi,QWORD PTR [rsp+0x358]
   0x00000000001ce560 <+23600>:	mov    rdx,QWORD PTR [rsp+0x360]
   0x00000000001ce568 <+23608>:	mov    rcx,QWORD PTR [rsp+0x368]
   0x00000000001ce570 <+23616>:	mov    eax,DWORD PTR [rsp+0x10a8]
   0x00000000001ce577 <+23623>:	mov    rdi,QWORD PTR [rsp+0x10b0]
   0x00000000001ce57f <+23631>:	mov    r8,QWORD PTR [rsp+0x10b8]
   0x00000000001ce587 <+23639>:	mov    r9,QWORD PTR [rsp+0x10c0]
   0x00000000001ce58f <+23647>:	mov    QWORD PTR [rsp+0x3610],r9
   0x00000000001ce597 <+23655>:	mov    QWORD PTR [rsp+0x3608],r8
   0x00000000001ce59f <+23663>:	mov    QWORD PTR [rsp+0x3600],rdi
   0x00000000001ce5a7 <+23671>:	mov    DWORD PTR [rsp+0x35f8],eax
   0x00000000001ce5ae <+23678>:	mov    r9,QWORD PTR [rsp+0x3600]
   0x00000000001ce5b6 <+23686>:	mov    r8d,DWORD PTR [rsp+0x35f8]
   0x00000000001ce5be <+23694>:	mov    rdi,QWORD PTR [rsp+0x3608]
   0x00000000001ce5c6 <+23702>:	mov    r10,QWORD PTR [rsp+0x3610]
   0x00000000001ce5ce <+23710>:	mov    rax,rsp
   0x00000000001ce5d1 <+23713>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ce5d5 <+23717>:	mov    QWORD PTR [rax],rdi
   0x00000000001ce5d8 <+23720>:	lea    rdi,[rsp+0x1060]
   0x00000000001ce5e0 <+23728>:	call   0x4bd1f0 <new:target>
   0x00000000001ce5e5 <+23733>:	mov    rax,QWORD PTR [rsp+0x1060]
   0x00000000001ce5ed <+23741>:	mov    ecx,DWORD PTR [rsp+0x1068]
   0x00000000001ce5f4 <+23748>:	mov    rdx,QWORD PTR [rsp+0x1070]
   0x00000000001ce5fc <+23756>:	mov    rsi,QWORD PTR [rsp+0x1078]
   0x00000000001ce604 <+23764>:	mov    rdi,QWORD PTR [rsp+0x1080]
   0x00000000001ce60c <+23772>:	mov    r8,QWORD PTR [rsp+0x1088]
   0x00000000001ce614 <+23780>:	mov    r9,QWORD PTR [rsp+0x1090]
   0x00000000001ce61c <+23788>:	mov    r10,QWORD PTR [rsp+0x1098]
   0x00000000001ce624 <+23796>:	mov    r11,QWORD PTR [rsp+0x10a0]
   0x00000000001ce62c <+23804>:	mov    QWORD PTR [rsp+0x35f0],r11
   0x00000000001ce634 <+23812>:	mov    QWORD PTR [rsp+0x35e8],r10
   0x00000000001ce63c <+23820>:	mov    QWORD PTR [rsp+0x35e0],r9
   0x00000000001ce644 <+23828>:	mov    QWORD PTR [rsp+0x35d8],r8
   0x00000000001ce64c <+23836>:	mov    QWORD PTR [rsp+0x35d0],rdi
   0x00000000001ce654 <+23844>:	mov    QWORD PTR [rsp+0x35c8],rsi
   0x00000000001ce65c <+23852>:	mov    QWORD PTR [rsp+0x35c0],rdx
   0x00000000001ce664 <+23860>:	mov    DWORD PTR [rsp+0x35b8],ecx
   0x00000000001ce66b <+23867>:	mov    QWORD PTR [rsp+0x35b0],rax
   0x00000000001ce673 <+23875>:	mov    rax,QWORD PTR [rsp+0x35b0]
   0x00000000001ce67b <+23883>:	mov    ecx,DWORD PTR [rsp+0x35b8]
   0x00000000001ce682 <+23890>:	mov    rdx,QWORD PTR [rsp+0x35c0]
   0x00000000001ce68a <+23898>:	mov    rsi,QWORD PTR [rsp+0x35c8]
   0x00000000001ce692 <+23906>:	mov    rdi,QWORD PTR [rsp+0x35d0]
   0x00000000001ce69a <+23914>:	mov    r8,QWORD PTR [rsp+0x35d8]
   0x00000000001ce6a2 <+23922>:	mov    r9,QWORD PTR [rsp+0x35e0]
   0x00000000001ce6aa <+23930>:	mov    r10,QWORD PTR [rsp+0x35e8]
   0x00000000001ce6b2 <+23938>:	mov    r11,QWORD PTR [rsp+0x35f0]
   0x00000000001ce6ba <+23946>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001ce6c2 <+23954>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001ce6ca <+23962>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001ce6d2 <+23970>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001ce6da <+23978>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001ce6e2 <+23986>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001ce6ea <+23994>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001ce6f2 <+24002>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001ce6f9 <+24009>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001ce701 <+24017>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001ce709 <+24025>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001ce711 <+24033>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001ce719 <+24041>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001ce721 <+24049>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001ce729 <+24057>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001ce731 <+24065>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001ce739 <+24073>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001ce741 <+24081>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001ce749 <+24089>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001ce751 <+24097>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001ce759 <+24105>:	mov    rax,rsp
   0x00000000001ce75c <+24108>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001ce760 <+24112>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001ce764 <+24116>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001ce768 <+24120>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001ce76c <+24124>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ce770 <+24128>:	mov    QWORD PTR [rax],rdi
   0x00000000001ce773 <+24131>:	lea    rdi,[rsp+0x1040]
   0x00000000001ce77b <+24139>:	call   0x3ae5e0 <execute_call>
   0x00000000001ce780 <+24144>:	mov    eax,DWORD PTR [rsp+0x1040]
   0x00000000001ce787 <+24151>:	mov    rcx,QWORD PTR [rsp+0x1048]
   0x00000000001ce78f <+24159>:	mov    rdx,QWORD PTR [rsp+0x1050]
   0x00000000001ce797 <+24167>:	mov    rsi,QWORD PTR [rsp+0x1058]
   0x00000000001ce79f <+24175>:	mov    QWORD PTR [rsp+0x35a8],rsi
   0x00000000001ce7a7 <+24183>:	mov    QWORD PTR [rsp+0x35a0],rdx
   0x00000000001ce7af <+24191>:	mov    QWORD PTR [rsp+0x3598],rcx
   0x00000000001ce7b7 <+24199>:	mov    DWORD PTR [rsp+0x3590],eax
   0x00000000001ce7be <+24206>:	lea    rdi,[rsp+0x3590]
   0x00000000001ce7c6 <+24214>:	call   0x343280 <truthy?>
   0x00000000001ce7cb <+24219>:	test   al,0x1
   0x00000000001ce7cd <+24221>:	jne    0x1ce8f5 <->+24517>
   0x00000000001ce7d3 <+24227>:	jmp    0x1ce92b <->+24571>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ce7d8 <+24232>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001ce7e0 <+24240>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001ce7e8 <+24248>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001ce7f0 <+24256>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001ce7f7 <+24263>:	lea    rdi,[rsp+0x10e8]
   0x00000000001ce7ff <+24271>:	call   0x340b10 <new>
   0x00000000001ce804 <+24276>:	mov    eax,DWORD PTR [rsp+0x10e8]
   0x00000000001ce80b <+24283>:	mov    rcx,QWORD PTR [rsp+0x10f0]
   0x00000000001ce813 <+24291>:	mov    rdx,QWORD PTR [rsp+0x10f8]
   0x00000000001ce81b <+24299>:	mov    rsi,QWORD PTR [rsp+0x1100]
   0x00000000001ce823 <+24307>:	mov    QWORD PTR [rsp+0x3650],rsi
   0x00000000001ce82b <+24315>:	mov    QWORD PTR [rsp+0x3648],rdx
   0x00000000001ce833 <+24323>:	mov    QWORD PTR [rsp+0x3640],rcx
   0x00000000001ce83b <+24331>:	mov    DWORD PTR [rsp+0x3638],eax
   0x00000000001ce842 <+24338>:	lea    rax,[rsp+0x3638]
   0x00000000001ce84a <+24346>:	mov    QWORD PTR [rsp+0x370],rax
   0x00000000001ce852 <+24354>:	jmp    0x1ce45b <->+23339>
   0x00000000001ce857 <+24359>:	mov    edi,DWORD PTR [rsp+0x37c]
   0x00000000001ce85e <+24366>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001ce863 <+24371>:	and    al,0x1
   0x00000000001ce865 <+24373>:	test   al,0x1
   0x00000000001ce867 <+24375>:	jne    0x1ce86e <->+24382>
   0x00000000001ce869 <+24377>:	jmp    0x1ce8f5 <->+24517>
   0x00000000001ce86e <+24382>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001ce876 <+24390>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001ce87e <+24398>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001ce886 <+24406>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001ce88e <+24414>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001ce895 <+24421>:	lea    rdi,[rsp+0x1108]
   0x00000000001ce89d <+24429>:	call   0x340cb0 <new>
   0x00000000001ce8a2 <+24434>:	mov    eax,DWORD PTR [rsp+0x1108]
   0x00000000001ce8a9 <+24441>:	mov    rcx,QWORD PTR [rsp+0x1110]
   0x00000000001ce8b1 <+24449>:	mov    rdx,QWORD PTR [rsp+0x1118]
   0x00000000001ce8b9 <+24457>:	mov    rsi,QWORD PTR [rsp+0x1120]
   0x00000000001ce8c1 <+24465>:	mov    QWORD PTR [rsp+0x3630],rsi
   0x00000000001ce8c9 <+24473>:	mov    QWORD PTR [rsp+0x3628],rdx
   0x00000000001ce8d1 <+24481>:	mov    QWORD PTR [rsp+0x3620],rcx
   0x00000000001ce8d9 <+24489>:	mov    DWORD PTR [rsp+0x3618],eax
   0x00000000001ce8e0 <+24496>:	lea    rax,[rsp+0x3618]
   0x00000000001ce8e8 <+24504>:	mov    QWORD PTR [rsp+0x370],rax
   0x00000000001ce8f0 <+24512>:	jmp    0x1ce45b <->+23339>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001ce8f5 <+24517>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001ce8fd <+24525>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001ce905 <+24533>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001ce90d <+24541>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001ce915 <+24549>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001ce91c <+24556>:	call   0x326080 <<<>
   0x00000000001ce921 <+24561>:	mov    QWORD PTR [rsp+0x350],rax
   0x00000000001ce929 <+24569>:	jmp    0x1ce937 <->+24583>
   0x00000000001ce92b <+24571>:	xor    eax,eax
   0x00000000001ce92d <+24573>:	mov    QWORD PTR [rsp+0x350],rax
   0x00000000001ce935 <+24581>:	jmp    0x1ce937 <->+24583>
   0x00000000001ce937 <+24583>:	mov    rax,QWORD PTR [rsp+0x350]
   0x00000000001ce93f <+24591>:	jmp    0x1ce3ab <->+23163>

/usr/lib/crystal/int.cr:
581	      return if x == to
   0x00000000001ce944 <+24596>:	jmp    0x1cdfbd <->+22157>
   0x00000000001ce949 <+24601>:	mov    eax,DWORD PTR [rsp+0x3740]
   0x00000000001ce950 <+24608>:	inc    eax
   0x00000000001ce952 <+24610>:	mov    DWORD PTR [rsp+0x34c],eax
   0x00000000001ce959 <+24617>:	seto   al
   0x00000000001ce95c <+24620>:	test   al,0x1
   0x00000000001ce95e <+24622>:	jne    0x1ce962 <->+24626>
   0x00000000001ce960 <+24624>:	jmp    0x1ce967 <->+24631>

582	      x += 1
   0x00000000001ce962 <+24626>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001ce967 <+24631>:	mov    eax,DWORD PTR [rsp+0x34c]
   0x00000000001ce96e <+24638>:	mov    DWORD PTR [rsp+0x3740],eax
   0x00000000001ce975 <+24645>:	jmp    0x1cdfbf <->+22159>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001ce97a <+24650>:	mov    rax,QWORD PTR [rsp+0x3888]
   0x00000000001ce982 <+24658>:	mov    QWORD PTR [rsp+0x540],rax
   0x00000000001ce98a <+24666>:	jmp    0x1cde88 <->+21848>

243	    when Iterable(Value), ::Iterator(Value)
   0x00000000001ce98f <+24671>:	mov    ecx,DWORD PTR [rsp+0x3820]
   0x00000000001ce996 <+24678>:	mov    DWORD PTR [rsp+0x348],ecx
   0x00000000001ce99d <+24685>:	mov    eax,0x3
   0x00000000001ce9a2 <+24690>:	cmp    eax,ecx
   0x00000000001ce9a4 <+24692>:	je     0x1ce9ea <->+24762>
   0x00000000001ce9a6 <+24694>:	jmp    0x1cea07 <->+24791>

245	    when Iterable, ::Iterator
   0x00000000001ce9a8 <+24696>:	mov    eax,0x12a
   0x00000000001ce9ad <+24701>:	cmp    eax,DWORD PTR [rsp+0x3820]
   0x00000000001ce9b4 <+24708>:	je     0x1d364d <->+44317>
   0x00000000001ce9ba <+24714>:	jmp    0x1d3658 <->+44328>

243	    when Iterable(Value), ::Iterator(Value)
   0x00000000001ce9bf <+24719>:	mov    al,0x1
   0x00000000001ce9c1 <+24721>:	mov    BYTE PTR [rsp+0x347],al
   0x00000000001ce9c8 <+24728>:	jmp    0x1ce9dd <->+24749>
   0x00000000001ce9ca <+24730>:	mov    edi,DWORD PTR [rsp+0x3820]
   0x00000000001ce9d1 <+24737>:	call   0x182990 <~match<(Crinja::Function::Cycler | Iterator(Crinja::Value))>>
   0x00000000001ce9d6 <+24742>:	mov    BYTE PTR [rsp+0x347],al
   0x00000000001ce9dd <+24749>:	mov    al,BYTE PTR [rsp+0x347]
   0x00000000001ce9e4 <+24756>:	test   al,0x1
   0x00000000001ce9e6 <+24758>:	jne    0x1ce98f <->+24671>
   0x00000000001ce9e8 <+24760>:	jmp    0x1ce9a8 <->+24696>
   0x00000000001ce9ea <+24762>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001ce9f2 <+24770>:	mov    QWORD PTR [rsp+0x338],rax

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001ce9fa <+24778>:	mov    DWORD PTR [rsp+0x3568],0x0
   0x00000000001cea05 <+24789>:	jmp    0x1cea20 <->+24816>
   0x00000000001cea07 <+24791>:	mov    ecx,DWORD PTR [rsp+0x348]

575	      yield i
576	      i += 1
   0x00000000001cea0e <+24798>:	mov    eax,0x193
   0x00000000001cea13 <+24803>:	cmp    eax,ecx
   0x00000000001cea15 <+24805>:	je     0x1cf0db <->+26539>
   0x00000000001cea1b <+24811>:	jmp    0x1cf0ed <->+26557>
   0x00000000001cea20 <+24816>:	mov    rcx,QWORD PTR [rsp+0x338]

574	    while i < size
   0x00000000001cea28 <+24824>:	mov    eax,DWORD PTR [rsp+0x3568]
   0x00000000001cea2f <+24831>:	cmp    eax,DWORD PTR [rcx+0x4]
   0x00000000001cea32 <+24834>:	jge    0x1ceb3f <->+25103>
   0x00000000001cea38 <+24840>:	mov    rsi,QWORD PTR [rsp+0x338]
   0x00000000001cea40 <+24848>:	mov    eax,DWORD PTR [rsp+0x3568]
   0x00000000001cea47 <+24855>:	mov    DWORD PTR [rsp+0x356c],eax
   0x00000000001cea4e <+24862>:	mov    edx,DWORD PTR [rsp+0x356c]
   0x00000000001cea55 <+24869>:	lea    rdi,[rsp+0x1258]

495	      yield unsafe_fetch(i)
   0x00000000001cea5d <+24877>:	call   0x324f10 <unsafe_fetch>
   0x00000000001cea62 <+24882>:	mov    eax,DWORD PTR [rsp+0x1258]
   0x00000000001cea69 <+24889>:	mov    rcx,QWORD PTR [rsp+0x1260]
   0x00000000001cea71 <+24897>:	mov    rdx,QWORD PTR [rsp+0x1268]
   0x00000000001cea79 <+24905>:	mov    rsi,QWORD PTR [rsp+0x1270]
   0x00000000001cea81 <+24913>:	mov    QWORD PTR [rsp+0x3560],rsi
   0x00000000001cea89 <+24921>:	mov    QWORD PTR [rsp+0x3558],rdx
   0x00000000001cea91 <+24929>:	mov    QWORD PTR [rsp+0x3550],rcx
   0x00000000001cea99 <+24937>:	mov    DWORD PTR [rsp+0x3548],eax
   0x00000000001ceaa0 <+24944>:	mov    eax,DWORD PTR [rsp+0x3548]
   0x00000000001ceaa7 <+24951>:	mov    rcx,QWORD PTR [rsp+0x3550]
   0x00000000001ceaaf <+24959>:	mov    rdx,QWORD PTR [rsp+0x3558]
   0x00000000001ceab7 <+24967>:	mov    rsi,QWORD PTR [rsp+0x3560]
   0x00000000001ceabf <+24975>:	mov    QWORD PTR [rsp+0x3588],rsi
   0x00000000001ceac7 <+24983>:	mov    QWORD PTR [rsp+0x3580],rdx
   0x00000000001ceacf <+24991>:	mov    QWORD PTR [rsp+0x3578],rcx
   0x00000000001cead7 <+24999>:	mov    DWORD PTR [rsp+0x3570],eax
   0x00000000001ceade <+25006>:	mov    eax,DWORD PTR [rsp+0x3570]
   0x00000000001ceae5 <+25013>:	mov    rcx,QWORD PTR [rsp+0x3578]
   0x00000000001ceaed <+25021>:	mov    rdx,QWORD PTR [rsp+0x3580]
   0x00000000001ceaf5 <+25029>:	mov    rsi,QWORD PTR [rsp+0x3588]
   0x00000000001ceafd <+25037>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001ceb05 <+25045>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001ceb0d <+25053>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001ceb15 <+25061>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001ceb1c <+25068>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001ceb23 <+25075>:	mov    DWORD PTR [rsp+0x334],ecx
   0x00000000001ceb2a <+25082>:	mov    eax,0x4ed
   0x00000000001ceb2f <+25087>:	cmp    eax,ecx
   0x00000000001ceb31 <+25089>:	sete   al
   0x00000000001ceb34 <+25092>:	and    al,0x1
   0x00000000001ceb36 <+25094>:	test   al,0x1
   0x00000000001ceb38 <+25096>:	jne    0x1ceb44 <->+25108>
   0x00000000001ceb3a <+25098>:	jmp    0x1cebc0 <->+25232>

575	      yield i
576	      i += 1
   0x00000000001ceb3f <+25103>:	jmp    0x1cf0d6 <->+26534>

495	      yield unsafe_fetch(i)
   0x00000000001ceb44 <+25108>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001ceb4c <+25116>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001ceb54 <+25124>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001ceb5c <+25132>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001ceb63 <+25139>:	lea    rdi,[rsp+0x11f8]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001ceb6b <+25147>:	call   0x339d20 <new>
   0x00000000001ceb70 <+25152>:	mov    eax,DWORD PTR [rsp+0x11f8]
   0x00000000001ceb77 <+25159>:	mov    rcx,QWORD PTR [rsp+0x1200]
   0x00000000001ceb7f <+25167>:	mov    rdx,QWORD PTR [rsp+0x1208]
   0x00000000001ceb87 <+25175>:	mov    rsi,QWORD PTR [rsp+0x1210]
   0x00000000001ceb8f <+25183>:	mov    QWORD PTR [rsp+0x3540],rsi
   0x00000000001ceb97 <+25191>:	mov    QWORD PTR [rsp+0x3538],rdx
   0x00000000001ceb9f <+25199>:	mov    QWORD PTR [rsp+0x3530],rcx
   0x00000000001ceba7 <+25207>:	mov    DWORD PTR [rsp+0x3528],eax
   0x00000000001cebae <+25214>:	lea    rax,[rsp+0x3528]
   0x00000000001cebb6 <+25222>:	mov    QWORD PTR [rsp+0x328],rax
   0x00000000001cebbe <+25230>:	jmp    0x1cebdb <->+25259>
   0x00000000001cebc0 <+25232>:	mov    edi,DWORD PTR [rsp+0x334]
   0x00000000001cebc7 <+25239>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cebcc <+25244>:	and    al,0x1
   0x00000000001cebce <+25246>:	test   al,0x1
   0x00000000001cebd0 <+25248>:	jne    0x1cef58 <->+26152>
   0x00000000001cebd6 <+25254>:	jmp    0x1cefd7 <->+26279>
   0x00000000001cebdb <+25259>:	mov    rsi,QWORD PTR [rsp+0x328]
   0x00000000001cebe3 <+25267>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cebe5 <+25269>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cebe9 <+25273>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cebed <+25277>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cebf1 <+25281>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001cebf9 <+25289>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001cec01 <+25297>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001cec09 <+25305>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cec10 <+25312>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001cec17 <+25319>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001cec1f <+25327>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001cec27 <+25335>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001cec2f <+25343>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001cec37 <+25351>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001cec3f <+25359>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001cec47 <+25367>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001cec4e <+25374>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001cec56 <+25382>:	mov    QWORD PTR [rsp+0x310],rax
   0x00000000001cec5e <+25390>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001cec66 <+25398>:	mov    QWORD PTR [rsp+0x318],rax
   0x00000000001cec6e <+25406>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001cec76 <+25414>:	mov    QWORD PTR [rsp+0x320],rax
   0x00000000001cec7e <+25422>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cec86 <+25430>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cec8e <+25438>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cec96 <+25446>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cec9d <+25453>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001ceca5 <+25461>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001cecad <+25469>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001cecb5 <+25477>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cecbd <+25485>:	mov    rax,rsp
   0x00000000001cecc0 <+25488>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cecc4 <+25492>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cecc8 <+25496>:	mov    QWORD PTR [rax],rdi
   0x00000000001ceccb <+25499>:	lea    rdi,[rsp+0x11d8]
   0x00000000001cecd3 <+25507>:	call   0x511190 <resolve_getattr>
   0x00000000001cecd8 <+25512>:	mov    rsi,QWORD PTR [rsp+0x310]
   0x00000000001cece0 <+25520>:	mov    rdx,QWORD PTR [rsp+0x318]
   0x00000000001cece8 <+25528>:	mov    rcx,QWORD PTR [rsp+0x320]
   0x00000000001cecf0 <+25536>:	mov    eax,DWORD PTR [rsp+0x11d8]
   0x00000000001cecf7 <+25543>:	mov    rdi,QWORD PTR [rsp+0x11e0]
   0x00000000001cecff <+25551>:	mov    r8,QWORD PTR [rsp+0x11e8]
   0x00000000001ced07 <+25559>:	mov    r9,QWORD PTR [rsp+0x11f0]
   0x00000000001ced0f <+25567>:	mov    QWORD PTR [rsp+0x34e0],r9
   0x00000000001ced17 <+25575>:	mov    QWORD PTR [rsp+0x34d8],r8
   0x00000000001ced1f <+25583>:	mov    QWORD PTR [rsp+0x34d0],rdi
   0x00000000001ced27 <+25591>:	mov    DWORD PTR [rsp+0x34c8],eax
   0x00000000001ced2e <+25598>:	mov    r9,QWORD PTR [rsp+0x34d0]
   0x00000000001ced36 <+25606>:	mov    r8d,DWORD PTR [rsp+0x34c8]
   0x00000000001ced3e <+25614>:	mov    rdi,QWORD PTR [rsp+0x34d8]
   0x00000000001ced46 <+25622>:	mov    r10,QWORD PTR [rsp+0x34e0]
   0x00000000001ced4e <+25630>:	mov    rax,rsp
   0x00000000001ced51 <+25633>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ced55 <+25637>:	mov    QWORD PTR [rax],rdi
   0x00000000001ced58 <+25640>:	lea    rdi,[rsp+0x1190]
   0x00000000001ced60 <+25648>:	call   0x4bd1f0 <new:target>
   0x00000000001ced65 <+25653>:	mov    rax,QWORD PTR [rsp+0x1190]
   0x00000000001ced6d <+25661>:	mov    ecx,DWORD PTR [rsp+0x1198]
   0x00000000001ced74 <+25668>:	mov    rdx,QWORD PTR [rsp+0x11a0]
   0x00000000001ced7c <+25676>:	mov    rsi,QWORD PTR [rsp+0x11a8]
   0x00000000001ced84 <+25684>:	mov    rdi,QWORD PTR [rsp+0x11b0]
   0x00000000001ced8c <+25692>:	mov    r8,QWORD PTR [rsp+0x11b8]
   0x00000000001ced94 <+25700>:	mov    r9,QWORD PTR [rsp+0x11c0]
   0x00000000001ced9c <+25708>:	mov    r10,QWORD PTR [rsp+0x11c8]
   0x00000000001ceda4 <+25716>:	mov    r11,QWORD PTR [rsp+0x11d0]
   0x00000000001cedac <+25724>:	mov    QWORD PTR [rsp+0x34c0],r11
   0x00000000001cedb4 <+25732>:	mov    QWORD PTR [rsp+0x34b8],r10
   0x00000000001cedbc <+25740>:	mov    QWORD PTR [rsp+0x34b0],r9
   0x00000000001cedc4 <+25748>:	mov    QWORD PTR [rsp+0x34a8],r8
   0x00000000001cedcc <+25756>:	mov    QWORD PTR [rsp+0x34a0],rdi
   0x00000000001cedd4 <+25764>:	mov    QWORD PTR [rsp+0x3498],rsi
   0x00000000001ceddc <+25772>:	mov    QWORD PTR [rsp+0x3490],rdx
   0x00000000001cede4 <+25780>:	mov    DWORD PTR [rsp+0x3488],ecx
   0x00000000001cedeb <+25787>:	mov    QWORD PTR [rsp+0x3480],rax
   0x00000000001cedf3 <+25795>:	mov    rax,QWORD PTR [rsp+0x3480]
   0x00000000001cedfb <+25803>:	mov    ecx,DWORD PTR [rsp+0x3488]
   0x00000000001cee02 <+25810>:	mov    rdx,QWORD PTR [rsp+0x3490]
   0x00000000001cee0a <+25818>:	mov    rsi,QWORD PTR [rsp+0x3498]
   0x00000000001cee12 <+25826>:	mov    rdi,QWORD PTR [rsp+0x34a0]
   0x00000000001cee1a <+25834>:	mov    r8,QWORD PTR [rsp+0x34a8]
   0x00000000001cee22 <+25842>:	mov    r9,QWORD PTR [rsp+0x34b0]
   0x00000000001cee2a <+25850>:	mov    r10,QWORD PTR [rsp+0x34b8]
   0x00000000001cee32 <+25858>:	mov    r11,QWORD PTR [rsp+0x34c0]
   0x00000000001cee3a <+25866>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001cee42 <+25874>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001cee4a <+25882>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001cee52 <+25890>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001cee5a <+25898>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001cee62 <+25906>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001cee6a <+25914>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001cee72 <+25922>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001cee79 <+25929>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001cee81 <+25937>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001cee89 <+25945>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001cee91 <+25953>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001cee99 <+25961>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001ceea1 <+25969>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001ceea9 <+25977>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001ceeb1 <+25985>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001ceeb9 <+25993>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001ceec1 <+26001>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001ceec9 <+26009>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001ceed1 <+26017>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001ceed9 <+26025>:	mov    rax,rsp
   0x00000000001ceedc <+26028>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001ceee0 <+26032>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001ceee4 <+26036>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001ceee8 <+26040>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001ceeec <+26044>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001ceef0 <+26048>:	mov    QWORD PTR [rax],rdi
   0x00000000001ceef3 <+26051>:	lea    rdi,[rsp+0x1170]
   0x00000000001ceefb <+26059>:	call   0x3ae5e0 <execute_call>
   0x00000000001cef00 <+26064>:	mov    eax,DWORD PTR [rsp+0x1170]
   0x00000000001cef07 <+26071>:	mov    rcx,QWORD PTR [rsp+0x1178]
   0x00000000001cef0f <+26079>:	mov    rdx,QWORD PTR [rsp+0x1180]
   0x00000000001cef17 <+26087>:	mov    rsi,QWORD PTR [rsp+0x1188]
   0x00000000001cef1f <+26095>:	mov    QWORD PTR [rsp+0x3478],rsi
   0x00000000001cef27 <+26103>:	mov    QWORD PTR [rsp+0x3470],rdx
   0x00000000001cef2f <+26111>:	mov    QWORD PTR [rsp+0x3468],rcx
   0x00000000001cef37 <+26119>:	mov    DWORD PTR [rsp+0x3460],eax
   0x00000000001cef3e <+26126>:	lea    rdi,[rsp+0x3460]
   0x00000000001cef46 <+26134>:	call   0x343280 <truthy?>
   0x00000000001cef4b <+26139>:	test   al,0x1
   0x00000000001cef4d <+26141>:	jne    0x1cf075 <->+26437>
   0x00000000001cef53 <+26147>:	jmp    0x1cf0a3 <->+26483>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cef58 <+26152>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001cef60 <+26160>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001cef68 <+26168>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001cef70 <+26176>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001cef77 <+26183>:	lea    rdi,[rsp+0x1218]
   0x00000000001cef7f <+26191>:	call   0x340b10 <new>
   0x00000000001cef84 <+26196>:	mov    eax,DWORD PTR [rsp+0x1218]
   0x00000000001cef8b <+26203>:	mov    rcx,QWORD PTR [rsp+0x1220]
   0x00000000001cef93 <+26211>:	mov    rdx,QWORD PTR [rsp+0x1228]
   0x00000000001cef9b <+26219>:	mov    rsi,QWORD PTR [rsp+0x1230]
   0x00000000001cefa3 <+26227>:	mov    QWORD PTR [rsp+0x3520],rsi
   0x00000000001cefab <+26235>:	mov    QWORD PTR [rsp+0x3518],rdx
   0x00000000001cefb3 <+26243>:	mov    QWORD PTR [rsp+0x3510],rcx
   0x00000000001cefbb <+26251>:	mov    DWORD PTR [rsp+0x3508],eax
   0x00000000001cefc2 <+26258>:	lea    rax,[rsp+0x3508]
   0x00000000001cefca <+26266>:	mov    QWORD PTR [rsp+0x328],rax
   0x00000000001cefd2 <+26274>:	jmp    0x1cebdb <->+25259>
   0x00000000001cefd7 <+26279>:	mov    edi,DWORD PTR [rsp+0x334]
   0x00000000001cefde <+26286>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cefe3 <+26291>:	and    al,0x1
   0x00000000001cefe5 <+26293>:	test   al,0x1
   0x00000000001cefe7 <+26295>:	jne    0x1cefee <->+26302>
   0x00000000001cefe9 <+26297>:	jmp    0x1cf075 <->+26437>
   0x00000000001cefee <+26302>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001ceff6 <+26310>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001ceffe <+26318>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001cf006 <+26326>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001cf00e <+26334>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001cf015 <+26341>:	lea    rdi,[rsp+0x1238]
   0x00000000001cf01d <+26349>:	call   0x340cb0 <new>
   0x00000000001cf022 <+26354>:	mov    eax,DWORD PTR [rsp+0x1238]
   0x00000000001cf029 <+26361>:	mov    rcx,QWORD PTR [rsp+0x1240]
   0x00000000001cf031 <+26369>:	mov    rdx,QWORD PTR [rsp+0x1248]
   0x00000000001cf039 <+26377>:	mov    rsi,QWORD PTR [rsp+0x1250]
   0x00000000001cf041 <+26385>:	mov    QWORD PTR [rsp+0x3500],rsi
   0x00000000001cf049 <+26393>:	mov    QWORD PTR [rsp+0x34f8],rdx
   0x00000000001cf051 <+26401>:	mov    QWORD PTR [rsp+0x34f0],rcx
   0x00000000001cf059 <+26409>:	mov    DWORD PTR [rsp+0x34e8],eax
   0x00000000001cf060 <+26416>:	lea    rax,[rsp+0x34e8]
   0x00000000001cf068 <+26424>:	mov    QWORD PTR [rsp+0x328],rax
   0x00000000001cf070 <+26432>:	jmp    0x1cebdb <->+25259>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cf075 <+26437>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001cf07d <+26445>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001cf085 <+26453>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001cf08d <+26461>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001cf095 <+26469>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cf09c <+26476>:	call   0x326080 <<<>
   0x00000000001cf0a1 <+26481>:	jmp    0x1cf0a5 <->+26485>
   0x00000000001cf0a3 <+26483>:	jmp    0x1cf0a5 <->+26485>
   0x00000000001cf0a5 <+26485>:	mov    eax,DWORD PTR [rsp+0x3568]
   0x00000000001cf0ac <+26492>:	inc    eax
   0x00000000001cf0ae <+26494>:	mov    DWORD PTR [rsp+0x30c],eax
   0x00000000001cf0b5 <+26501>:	seto   al
   0x00000000001cf0b8 <+26504>:	test   al,0x1
   0x00000000001cf0ba <+26506>:	jne    0x1cf0be <->+26510>
   0x00000000001cf0bc <+26508>:	jmp    0x1cf0c3 <->+26515>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001cf0be <+26510>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001cf0c3 <+26515>:	mov    eax,DWORD PTR [rsp+0x30c]
   0x00000000001cf0ca <+26522>:	mov    DWORD PTR [rsp+0x3568],eax
   0x00000000001cf0d1 <+26529>:	jmp    0x1cea20 <->+24816>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cf0d6 <+26534>:	jmp    0x1d360d <->+44253>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001cf0db <+26539>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001cf0e3 <+26547>:	mov    QWORD PTR [rsp+0x300],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cf0eb <+26555>:	jmp    0x1cf106 <->+26582>
   0x00000000001cf0ed <+26557>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cf0f4 <+26564>:	mov    eax,0x12a
   0x00000000001cf0f9 <+26569>:	cmp    eax,ecx
   0x00000000001cf0fb <+26571>:	je     0x1cf799 <->+28265>
   0x00000000001cf101 <+26577>:	jmp    0x1cf7b6 <->+28294>
   0x00000000001cf106 <+26582>:	mov    rsi,QWORD PTR [rsp+0x300]
   0x00000000001cf10e <+26590>:	lea    rdi,[rsp+0x1360]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cf116 <+26598>:	call   0x356ed0 <next>
   0x00000000001cf11b <+26603>:	mov    eax,DWORD PTR [rsp+0x1360]
   0x00000000001cf122 <+26610>:	mov    rcx,QWORD PTR [rsp+0x1368]
   0x00000000001cf12a <+26618>:	mov    rdx,QWORD PTR [rsp+0x1370]
   0x00000000001cf132 <+26626>:	mov    rsi,QWORD PTR [rsp+0x1378]
   0x00000000001cf13a <+26634>:	mov    QWORD PTR [rsp+0x3418],rsi
   0x00000000001cf142 <+26642>:	mov    QWORD PTR [rsp+0x3410],rdx
   0x00000000001cf14a <+26650>:	mov    QWORD PTR [rsp+0x3408],rcx
   0x00000000001cf152 <+26658>:	mov    DWORD PTR [rsp+0x3400],eax
   0x00000000001cf159 <+26665>:	mov    eax,DWORD PTR [rsp+0x3400]
   0x00000000001cf160 <+26672>:	mov    rcx,QWORD PTR [rsp+0x3408]
   0x00000000001cf168 <+26680>:	mov    rdx,QWORD PTR [rsp+0x3410]
   0x00000000001cf170 <+26688>:	mov    rsi,QWORD PTR [rsp+0x3418]
   0x00000000001cf178 <+26696>:	mov    QWORD PTR [rsp+0x3438],rsi
   0x00000000001cf180 <+26704>:	mov    QWORD PTR [rsp+0x3430],rdx
   0x00000000001cf188 <+26712>:	mov    QWORD PTR [rsp+0x3428],rcx
   0x00000000001cf190 <+26720>:	mov    DWORD PTR [rsp+0x3420],eax
   0x00000000001cf197 <+26727>:	mov    eax,DWORD PTR [rsp+0x3420]
   0x00000000001cf19e <+26734>:	mov    rcx,QWORD PTR [rsp+0x3428]
   0x00000000001cf1a6 <+26742>:	mov    rdx,QWORD PTR [rsp+0x3430]
   0x00000000001cf1ae <+26750>:	mov    rsi,QWORD PTR [rsp+0x3438]
   0x00000000001cf1b6 <+26758>:	mov    QWORD PTR [rsp+0x3458],rsi
   0x00000000001cf1be <+26766>:	mov    QWORD PTR [rsp+0x3450],rdx
   0x00000000001cf1c6 <+26774>:	mov    QWORD PTR [rsp+0x3448],rcx
   0x00000000001cf1ce <+26782>:	mov    DWORD PTR [rsp+0x3440],eax
   0x00000000001cf1d5 <+26789>:	mov    eax,DWORD PTR [rsp+0x3440]
   0x00000000001cf1dc <+26796>:	mov    rcx,QWORD PTR [rsp+0x3448]
   0x00000000001cf1e4 <+26804>:	mov    rdx,QWORD PTR [rsp+0x3450]
   0x00000000001cf1ec <+26812>:	mov    rsi,QWORD PTR [rsp+0x3458]
   0x00000000001cf1f4 <+26820>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001cf1fc <+26828>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001cf204 <+26836>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001cf20c <+26844>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001cf213 <+26851>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001cf21a <+26858>:	mov    DWORD PTR [rsp+0x2fc],ecx
   0x00000000001cf221 <+26865>:	mov    eax,0x4ed
   0x00000000001cf226 <+26870>:	cmp    eax,ecx
   0x00000000001cf228 <+26872>:	sete   al
   0x00000000001cf22b <+26875>:	and    al,0x1
   0x00000000001cf22d <+26877>:	test   al,0x1
   0x00000000001cf22f <+26879>:	jne    0x1cf233 <->+26883>
   0x00000000001cf231 <+26881>:	jmp    0x1cf2af <->+27007>
   0x00000000001cf233 <+26883>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001cf23b <+26891>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001cf243 <+26899>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001cf24b <+26907>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001cf252 <+26914>:	lea    rdi,[rsp+0x1300]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cf25a <+26922>:	call   0x339d20 <new>
   0x00000000001cf25f <+26927>:	mov    eax,DWORD PTR [rsp+0x1300]
   0x00000000001cf266 <+26934>:	mov    rcx,QWORD PTR [rsp+0x1308]
   0x00000000001cf26e <+26942>:	mov    rdx,QWORD PTR [rsp+0x1310]
   0x00000000001cf276 <+26950>:	mov    rsi,QWORD PTR [rsp+0x1318]
   0x00000000001cf27e <+26958>:	mov    QWORD PTR [rsp+0x33f8],rsi
   0x00000000001cf286 <+26966>:	mov    QWORD PTR [rsp+0x33f0],rdx
   0x00000000001cf28e <+26974>:	mov    QWORD PTR [rsp+0x33e8],rcx
   0x00000000001cf296 <+26982>:	mov    DWORD PTR [rsp+0x33e0],eax
   0x00000000001cf29d <+26989>:	lea    rax,[rsp+0x33e0]
   0x00000000001cf2a5 <+26997>:	mov    QWORD PTR [rsp+0x2f0],rax
   0x00000000001cf2ad <+27005>:	jmp    0x1cf2ca <->+27034>
   0x00000000001cf2af <+27007>:	mov    edi,DWORD PTR [rsp+0x2fc]
   0x00000000001cf2b6 <+27014>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cf2bb <+27019>:	and    al,0x1
   0x00000000001cf2bd <+27021>:	test   al,0x1
   0x00000000001cf2bf <+27023>:	jne    0x1cf647 <->+27927>
   0x00000000001cf2c5 <+27029>:	jmp    0x1cf6c6 <->+28054>
   0x00000000001cf2ca <+27034>:	mov    rsi,QWORD PTR [rsp+0x2f0]
   0x00000000001cf2d2 <+27042>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cf2d4 <+27044>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cf2d8 <+27048>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cf2dc <+27052>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cf2e0 <+27056>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001cf2e8 <+27064>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001cf2f0 <+27072>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001cf2f8 <+27080>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cf2ff <+27087>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001cf306 <+27094>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001cf30e <+27102>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001cf316 <+27110>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001cf31e <+27118>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001cf326 <+27126>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001cf32e <+27134>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001cf336 <+27142>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001cf33d <+27149>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001cf345 <+27157>:	mov    QWORD PTR [rsp+0x2d8],rax
   0x00000000001cf34d <+27165>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001cf355 <+27173>:	mov    QWORD PTR [rsp+0x2e0],rax
   0x00000000001cf35d <+27181>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001cf365 <+27189>:	mov    QWORD PTR [rsp+0x2e8],rax
   0x00000000001cf36d <+27197>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cf375 <+27205>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cf37d <+27213>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cf385 <+27221>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cf38c <+27228>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001cf394 <+27236>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001cf39c <+27244>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001cf3a4 <+27252>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cf3ac <+27260>:	mov    rax,rsp
   0x00000000001cf3af <+27263>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cf3b3 <+27267>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cf3b7 <+27271>:	mov    QWORD PTR [rax],rdi
   0x00000000001cf3ba <+27274>:	lea    rdi,[rsp+0x12e0]
   0x00000000001cf3c2 <+27282>:	call   0x511190 <resolve_getattr>
   0x00000000001cf3c7 <+27287>:	mov    rsi,QWORD PTR [rsp+0x2d8]
   0x00000000001cf3cf <+27295>:	mov    rdx,QWORD PTR [rsp+0x2e0]
   0x00000000001cf3d7 <+27303>:	mov    rcx,QWORD PTR [rsp+0x2e8]
   0x00000000001cf3df <+27311>:	mov    eax,DWORD PTR [rsp+0x12e0]
   0x00000000001cf3e6 <+27318>:	mov    rdi,QWORD PTR [rsp+0x12e8]
   0x00000000001cf3ee <+27326>:	mov    r8,QWORD PTR [rsp+0x12f0]
   0x00000000001cf3f6 <+27334>:	mov    r9,QWORD PTR [rsp+0x12f8]
   0x00000000001cf3fe <+27342>:	mov    QWORD PTR [rsp+0x3398],r9
   0x00000000001cf406 <+27350>:	mov    QWORD PTR [rsp+0x3390],r8
   0x00000000001cf40e <+27358>:	mov    QWORD PTR [rsp+0x3388],rdi
   0x00000000001cf416 <+27366>:	mov    DWORD PTR [rsp+0x3380],eax
   0x00000000001cf41d <+27373>:	mov    r9,QWORD PTR [rsp+0x3388]
   0x00000000001cf425 <+27381>:	mov    r8d,DWORD PTR [rsp+0x3380]
   0x00000000001cf42d <+27389>:	mov    rdi,QWORD PTR [rsp+0x3390]
   0x00000000001cf435 <+27397>:	mov    r10,QWORD PTR [rsp+0x3398]
   0x00000000001cf43d <+27405>:	mov    rax,rsp
   0x00000000001cf440 <+27408>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cf444 <+27412>:	mov    QWORD PTR [rax],rdi
   0x00000000001cf447 <+27415>:	lea    rdi,[rsp+0x1298]
   0x00000000001cf44f <+27423>:	call   0x4bd1f0 <new:target>
   0x00000000001cf454 <+27428>:	mov    rax,QWORD PTR [rsp+0x1298]
   0x00000000001cf45c <+27436>:	mov    ecx,DWORD PTR [rsp+0x12a0]
   0x00000000001cf463 <+27443>:	mov    rdx,QWORD PTR [rsp+0x12a8]
   0x00000000001cf46b <+27451>:	mov    rsi,QWORD PTR [rsp+0x12b0]
   0x00000000001cf473 <+27459>:	mov    rdi,QWORD PTR [rsp+0x12b8]
   0x00000000001cf47b <+27467>:	mov    r8,QWORD PTR [rsp+0x12c0]
   0x00000000001cf483 <+27475>:	mov    r9,QWORD PTR [rsp+0x12c8]
   0x00000000001cf48b <+27483>:	mov    r10,QWORD PTR [rsp+0x12d0]
   0x00000000001cf493 <+27491>:	mov    r11,QWORD PTR [rsp+0x12d8]
   0x00000000001cf49b <+27499>:	mov    QWORD PTR [rsp+0x3378],r11
   0x00000000001cf4a3 <+27507>:	mov    QWORD PTR [rsp+0x3370],r10
   0x00000000001cf4ab <+27515>:	mov    QWORD PTR [rsp+0x3368],r9
   0x00000000001cf4b3 <+27523>:	mov    QWORD PTR [rsp+0x3360],r8
   0x00000000001cf4bb <+27531>:	mov    QWORD PTR [rsp+0x3358],rdi
   0x00000000001cf4c3 <+27539>:	mov    QWORD PTR [rsp+0x3350],rsi
   0x00000000001cf4cb <+27547>:	mov    QWORD PTR [rsp+0x3348],rdx
   0x00000000001cf4d3 <+27555>:	mov    DWORD PTR [rsp+0x3340],ecx
   0x00000000001cf4da <+27562>:	mov    QWORD PTR [rsp+0x3338],rax
   0x00000000001cf4e2 <+27570>:	mov    rax,QWORD PTR [rsp+0x3338]
   0x00000000001cf4ea <+27578>:	mov    ecx,DWORD PTR [rsp+0x3340]
   0x00000000001cf4f1 <+27585>:	mov    rdx,QWORD PTR [rsp+0x3348]
   0x00000000001cf4f9 <+27593>:	mov    rsi,QWORD PTR [rsp+0x3350]
   0x00000000001cf501 <+27601>:	mov    rdi,QWORD PTR [rsp+0x3358]
   0x00000000001cf509 <+27609>:	mov    r8,QWORD PTR [rsp+0x3360]
   0x00000000001cf511 <+27617>:	mov    r9,QWORD PTR [rsp+0x3368]
   0x00000000001cf519 <+27625>:	mov    r10,QWORD PTR [rsp+0x3370]
   0x00000000001cf521 <+27633>:	mov    r11,QWORD PTR [rsp+0x3378]
   0x00000000001cf529 <+27641>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001cf531 <+27649>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001cf539 <+27657>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001cf541 <+27665>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001cf549 <+27673>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001cf551 <+27681>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001cf559 <+27689>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001cf561 <+27697>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001cf568 <+27704>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001cf570 <+27712>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001cf578 <+27720>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001cf580 <+27728>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001cf588 <+27736>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001cf590 <+27744>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001cf598 <+27752>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001cf5a0 <+27760>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001cf5a8 <+27768>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001cf5b0 <+27776>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001cf5b8 <+27784>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001cf5c0 <+27792>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001cf5c8 <+27800>:	mov    rax,rsp
   0x00000000001cf5cb <+27803>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001cf5cf <+27807>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001cf5d3 <+27811>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001cf5d7 <+27815>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cf5db <+27819>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cf5df <+27823>:	mov    QWORD PTR [rax],rdi
   0x00000000001cf5e2 <+27826>:	lea    rdi,[rsp+0x1278]
   0x00000000001cf5ea <+27834>:	call   0x3ae5e0 <execute_call>
   0x00000000001cf5ef <+27839>:	mov    eax,DWORD PTR [rsp+0x1278]
   0x00000000001cf5f6 <+27846>:	mov    rcx,QWORD PTR [rsp+0x1280]
   0x00000000001cf5fe <+27854>:	mov    rdx,QWORD PTR [rsp+0x1288]
   0x00000000001cf606 <+27862>:	mov    rsi,QWORD PTR [rsp+0x1290]
   0x00000000001cf60e <+27870>:	mov    QWORD PTR [rsp+0x3330],rsi
   0x00000000001cf616 <+27878>:	mov    QWORD PTR [rsp+0x3328],rdx
   0x00000000001cf61e <+27886>:	mov    QWORD PTR [rsp+0x3320],rcx
   0x00000000001cf626 <+27894>:	mov    DWORD PTR [rsp+0x3318],eax
   0x00000000001cf62d <+27901>:	lea    rdi,[rsp+0x3318]
   0x00000000001cf635 <+27909>:	call   0x343280 <truthy?>
   0x00000000001cf63a <+27914>:	test   al,0x1
   0x00000000001cf63c <+27916>:	jne    0x1cf764 <->+28212>
   0x00000000001cf642 <+27922>:	jmp    0x1cf792 <->+28258>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cf647 <+27927>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001cf64f <+27935>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001cf657 <+27943>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001cf65f <+27951>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001cf666 <+27958>:	lea    rdi,[rsp+0x1320]
   0x00000000001cf66e <+27966>:	call   0x340b10 <new>
   0x00000000001cf673 <+27971>:	mov    eax,DWORD PTR [rsp+0x1320]
   0x00000000001cf67a <+27978>:	mov    rcx,QWORD PTR [rsp+0x1328]
   0x00000000001cf682 <+27986>:	mov    rdx,QWORD PTR [rsp+0x1330]
   0x00000000001cf68a <+27994>:	mov    rsi,QWORD PTR [rsp+0x1338]
   0x00000000001cf692 <+28002>:	mov    QWORD PTR [rsp+0x33d8],rsi
   0x00000000001cf69a <+28010>:	mov    QWORD PTR [rsp+0x33d0],rdx
   0x00000000001cf6a2 <+28018>:	mov    QWORD PTR [rsp+0x33c8],rcx
   0x00000000001cf6aa <+28026>:	mov    DWORD PTR [rsp+0x33c0],eax
   0x00000000001cf6b1 <+28033>:	lea    rax,[rsp+0x33c0]
   0x00000000001cf6b9 <+28041>:	mov    QWORD PTR [rsp+0x2f0],rax
   0x00000000001cf6c1 <+28049>:	jmp    0x1cf2ca <->+27034>
   0x00000000001cf6c6 <+28054>:	mov    edi,DWORD PTR [rsp+0x2fc]
   0x00000000001cf6cd <+28061>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cf6d2 <+28066>:	and    al,0x1
   0x00000000001cf6d4 <+28068>:	test   al,0x1
   0x00000000001cf6d6 <+28070>:	jne    0x1cf6dd <->+28077>
   0x00000000001cf6d8 <+28072>:	jmp    0x1cf764 <->+28212>
   0x00000000001cf6dd <+28077>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001cf6e5 <+28085>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001cf6ed <+28093>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001cf6f5 <+28101>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001cf6fd <+28109>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001cf704 <+28116>:	lea    rdi,[rsp+0x1340]
   0x00000000001cf70c <+28124>:	call   0x340cb0 <new>
   0x00000000001cf711 <+28129>:	mov    eax,DWORD PTR [rsp+0x1340]
   0x00000000001cf718 <+28136>:	mov    rcx,QWORD PTR [rsp+0x1348]
   0x00000000001cf720 <+28144>:	mov    rdx,QWORD PTR [rsp+0x1350]
   0x00000000001cf728 <+28152>:	mov    rsi,QWORD PTR [rsp+0x1358]
   0x00000000001cf730 <+28160>:	mov    QWORD PTR [rsp+0x33b8],rsi
   0x00000000001cf738 <+28168>:	mov    QWORD PTR [rsp+0x33b0],rdx
   0x00000000001cf740 <+28176>:	mov    QWORD PTR [rsp+0x33a8],rcx
   0x00000000001cf748 <+28184>:	mov    DWORD PTR [rsp+0x33a0],eax
   0x00000000001cf74f <+28191>:	lea    rax,[rsp+0x33a0]
   0x00000000001cf757 <+28199>:	mov    QWORD PTR [rsp+0x2f0],rax
   0x00000000001cf75f <+28207>:	jmp    0x1cf2ca <->+27034>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cf764 <+28212>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001cf76c <+28220>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001cf774 <+28228>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001cf77c <+28236>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001cf784 <+28244>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cf78b <+28251>:	call   0x326080 <<<>
   0x00000000001cf790 <+28256>:	jmp    0x1cf794 <->+28260>
   0x00000000001cf792 <+28258>:	jmp    0x1cf794 <->+28260>
   0x00000000001cf794 <+28260>:	jmp    0x1cf106 <->+26582>
   0x00000000001cf799 <+28265>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001cf7a1 <+28273>:	mov    QWORD PTR [rsp+0x2d0],rax

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001cf7a9 <+28281>:	mov    DWORD PTR [rsp+0x32f0],0x0
   0x00000000001cf7b4 <+28292>:	jmp    0x1cf7cf <->+28319>
   0x00000000001cf7b6 <+28294>:	mov    ecx,DWORD PTR [rsp+0x348]

575	      yield i
576	      i += 1
   0x00000000001cf7bd <+28301>:	mov    eax,0x193
   0x00000000001cf7c2 <+28306>:	cmp    eax,ecx
   0x00000000001cf7c4 <+28308>:	je     0x1cfe99 <->+30057>
   0x00000000001cf7ca <+28314>:	jmp    0x1cfeab <->+30075>
   0x00000000001cf7cf <+28319>:	mov    rdi,QWORD PTR [rsp+0x2d0]

574	    while i < size
   0x00000000001cf7d7 <+28327>:	mov    eax,DWORD PTR [rsp+0x32f0]
   0x00000000001cf7de <+28334>:	mov    DWORD PTR [rsp+0x2cc],eax
   0x00000000001cf7e5 <+28341>:	call   0x334030 <size>
   0x00000000001cf7ea <+28346>:	mov    ecx,eax
   0x00000000001cf7ec <+28348>:	mov    eax,DWORD PTR [rsp+0x2cc]
   0x00000000001cf7f3 <+28355>:	cmp    eax,ecx
   0x00000000001cf7f5 <+28357>:	jge    0x1cf902 <->+28626>
   0x00000000001cf7fb <+28363>:	mov    rsi,QWORD PTR [rsp+0x2d0]
   0x00000000001cf803 <+28371>:	mov    eax,DWORD PTR [rsp+0x32f0]
   0x00000000001cf80a <+28378>:	mov    DWORD PTR [rsp+0x32f4],eax
   0x00000000001cf811 <+28385>:	mov    edx,DWORD PTR [rsp+0x32f4]
   0x00000000001cf818 <+28392>:	lea    rdi,[rsp+0x1468]

495	      yield unsafe_fetch(i)
   0x00000000001cf820 <+28400>:	call   0x334050 <unsafe_fetch>
   0x00000000001cf825 <+28405>:	mov    eax,DWORD PTR [rsp+0x1468]
   0x00000000001cf82c <+28412>:	mov    rcx,QWORD PTR [rsp+0x1470]
   0x00000000001cf834 <+28420>:	mov    rdx,QWORD PTR [rsp+0x1478]
   0x00000000001cf83c <+28428>:	mov    rsi,QWORD PTR [rsp+0x1480]
   0x00000000001cf844 <+28436>:	mov    QWORD PTR [rsp+0x32e8],rsi
   0x00000000001cf84c <+28444>:	mov    QWORD PTR [rsp+0x32e0],rdx
   0x00000000001cf854 <+28452>:	mov    QWORD PTR [rsp+0x32d8],rcx
   0x00000000001cf85c <+28460>:	mov    DWORD PTR [rsp+0x32d0],eax
   0x00000000001cf863 <+28467>:	mov    eax,DWORD PTR [rsp+0x32d0]
   0x00000000001cf86a <+28474>:	mov    rcx,QWORD PTR [rsp+0x32d8]
   0x00000000001cf872 <+28482>:	mov    rdx,QWORD PTR [rsp+0x32e0]
   0x00000000001cf87a <+28490>:	mov    rsi,QWORD PTR [rsp+0x32e8]
   0x00000000001cf882 <+28498>:	mov    QWORD PTR [rsp+0x3310],rsi
   0x00000000001cf88a <+28506>:	mov    QWORD PTR [rsp+0x3308],rdx
   0x00000000001cf892 <+28514>:	mov    QWORD PTR [rsp+0x3300],rcx
   0x00000000001cf89a <+28522>:	mov    DWORD PTR [rsp+0x32f8],eax
   0x00000000001cf8a1 <+28529>:	mov    eax,DWORD PTR [rsp+0x32f8]
   0x00000000001cf8a8 <+28536>:	mov    rcx,QWORD PTR [rsp+0x3300]
   0x00000000001cf8b0 <+28544>:	mov    rdx,QWORD PTR [rsp+0x3308]
   0x00000000001cf8b8 <+28552>:	mov    rsi,QWORD PTR [rsp+0x3310]
   0x00000000001cf8c0 <+28560>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001cf8c8 <+28568>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001cf8d0 <+28576>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001cf8d8 <+28584>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001cf8df <+28591>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001cf8e6 <+28598>:	mov    DWORD PTR [rsp+0x2c8],ecx
   0x00000000001cf8ed <+28605>:	mov    eax,0x4ed
   0x00000000001cf8f2 <+28610>:	cmp    eax,ecx
   0x00000000001cf8f4 <+28612>:	sete   al
   0x00000000001cf8f7 <+28615>:	and    al,0x1
   0x00000000001cf8f9 <+28617>:	test   al,0x1
   0x00000000001cf8fb <+28619>:	jne    0x1cf907 <->+28631>
   0x00000000001cf8fd <+28621>:	jmp    0x1cf983 <->+28755>

575	      yield i
576	      i += 1
   0x00000000001cf902 <+28626>:	jmp    0x1cf0d6 <->+26534>

495	      yield unsafe_fetch(i)
   0x00000000001cf907 <+28631>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001cf90f <+28639>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001cf917 <+28647>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001cf91f <+28655>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001cf926 <+28662>:	lea    rdi,[rsp+0x1408]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cf92e <+28670>:	call   0x339d20 <new>
   0x00000000001cf933 <+28675>:	mov    eax,DWORD PTR [rsp+0x1408]
   0x00000000001cf93a <+28682>:	mov    rcx,QWORD PTR [rsp+0x1410]
   0x00000000001cf942 <+28690>:	mov    rdx,QWORD PTR [rsp+0x1418]
   0x00000000001cf94a <+28698>:	mov    rsi,QWORD PTR [rsp+0x1420]
   0x00000000001cf952 <+28706>:	mov    QWORD PTR [rsp+0x32c8],rsi
   0x00000000001cf95a <+28714>:	mov    QWORD PTR [rsp+0x32c0],rdx
   0x00000000001cf962 <+28722>:	mov    QWORD PTR [rsp+0x32b8],rcx
   0x00000000001cf96a <+28730>:	mov    DWORD PTR [rsp+0x32b0],eax
   0x00000000001cf971 <+28737>:	lea    rax,[rsp+0x32b0]
   0x00000000001cf979 <+28745>:	mov    QWORD PTR [rsp+0x2c0],rax
   0x00000000001cf981 <+28753>:	jmp    0x1cf99e <->+28782>
   0x00000000001cf983 <+28755>:	mov    edi,DWORD PTR [rsp+0x2c8]
   0x00000000001cf98a <+28762>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cf98f <+28767>:	and    al,0x1
   0x00000000001cf991 <+28769>:	test   al,0x1
   0x00000000001cf993 <+28771>:	jne    0x1cfd1b <->+29675>
   0x00000000001cf999 <+28777>:	jmp    0x1cfd9a <->+29802>
   0x00000000001cf99e <+28782>:	mov    rsi,QWORD PTR [rsp+0x2c0]
   0x00000000001cf9a6 <+28790>:	mov    eax,DWORD PTR [rsi]
   0x00000000001cf9a8 <+28792>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001cf9ac <+28796>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001cf9b0 <+28800>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001cf9b4 <+28804>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001cf9bc <+28812>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001cf9c4 <+28820>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001cf9cc <+28828>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cf9d3 <+28835>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001cf9da <+28842>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001cf9e2 <+28850>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001cf9ea <+28858>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001cf9f2 <+28866>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001cf9fa <+28874>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001cfa02 <+28882>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001cfa0a <+28890>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001cfa11 <+28897>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001cfa19 <+28905>:	mov    QWORD PTR [rsp+0x2a8],rax
   0x00000000001cfa21 <+28913>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001cfa29 <+28921>:	mov    QWORD PTR [rsp+0x2b0],rax
   0x00000000001cfa31 <+28929>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001cfa39 <+28937>:	mov    QWORD PTR [rsp+0x2b8],rax
   0x00000000001cfa41 <+28945>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001cfa49 <+28953>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001cfa51 <+28961>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001cfa59 <+28969>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001cfa60 <+28976>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001cfa68 <+28984>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001cfa70 <+28992>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001cfa78 <+29000>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cfa80 <+29008>:	mov    rax,rsp
   0x00000000001cfa83 <+29011>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cfa87 <+29015>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cfa8b <+29019>:	mov    QWORD PTR [rax],rdi
   0x00000000001cfa8e <+29022>:	lea    rdi,[rsp+0x13e8]
   0x00000000001cfa96 <+29030>:	call   0x511190 <resolve_getattr>
   0x00000000001cfa9b <+29035>:	mov    rsi,QWORD PTR [rsp+0x2a8]
   0x00000000001cfaa3 <+29043>:	mov    rdx,QWORD PTR [rsp+0x2b0]
   0x00000000001cfaab <+29051>:	mov    rcx,QWORD PTR [rsp+0x2b8]
   0x00000000001cfab3 <+29059>:	mov    eax,DWORD PTR [rsp+0x13e8]
   0x00000000001cfaba <+29066>:	mov    rdi,QWORD PTR [rsp+0x13f0]
   0x00000000001cfac2 <+29074>:	mov    r8,QWORD PTR [rsp+0x13f8]
   0x00000000001cfaca <+29082>:	mov    r9,QWORD PTR [rsp+0x1400]
   0x00000000001cfad2 <+29090>:	mov    QWORD PTR [rsp+0x3268],r9
   0x00000000001cfada <+29098>:	mov    QWORD PTR [rsp+0x3260],r8
   0x00000000001cfae2 <+29106>:	mov    QWORD PTR [rsp+0x3258],rdi
   0x00000000001cfaea <+29114>:	mov    DWORD PTR [rsp+0x3250],eax
   0x00000000001cfaf1 <+29121>:	mov    r9,QWORD PTR [rsp+0x3258]
   0x00000000001cfaf9 <+29129>:	mov    r8d,DWORD PTR [rsp+0x3250]
   0x00000000001cfb01 <+29137>:	mov    rdi,QWORD PTR [rsp+0x3260]
   0x00000000001cfb09 <+29145>:	mov    r10,QWORD PTR [rsp+0x3268]
   0x00000000001cfb11 <+29153>:	mov    rax,rsp
   0x00000000001cfb14 <+29156>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cfb18 <+29160>:	mov    QWORD PTR [rax],rdi
   0x00000000001cfb1b <+29163>:	lea    rdi,[rsp+0x13a0]
   0x00000000001cfb23 <+29171>:	call   0x4bd1f0 <new:target>
   0x00000000001cfb28 <+29176>:	mov    rax,QWORD PTR [rsp+0x13a0]
   0x00000000001cfb30 <+29184>:	mov    ecx,DWORD PTR [rsp+0x13a8]
   0x00000000001cfb37 <+29191>:	mov    rdx,QWORD PTR [rsp+0x13b0]
   0x00000000001cfb3f <+29199>:	mov    rsi,QWORD PTR [rsp+0x13b8]
   0x00000000001cfb47 <+29207>:	mov    rdi,QWORD PTR [rsp+0x13c0]
   0x00000000001cfb4f <+29215>:	mov    r8,QWORD PTR [rsp+0x13c8]
   0x00000000001cfb57 <+29223>:	mov    r9,QWORD PTR [rsp+0x13d0]
   0x00000000001cfb5f <+29231>:	mov    r10,QWORD PTR [rsp+0x13d8]
   0x00000000001cfb67 <+29239>:	mov    r11,QWORD PTR [rsp+0x13e0]
   0x00000000001cfb6f <+29247>:	mov    QWORD PTR [rsp+0x3248],r11
   0x00000000001cfb77 <+29255>:	mov    QWORD PTR [rsp+0x3240],r10
   0x00000000001cfb7f <+29263>:	mov    QWORD PTR [rsp+0x3238],r9
   0x00000000001cfb87 <+29271>:	mov    QWORD PTR [rsp+0x3230],r8
   0x00000000001cfb8f <+29279>:	mov    QWORD PTR [rsp+0x3228],rdi
   0x00000000001cfb97 <+29287>:	mov    QWORD PTR [rsp+0x3220],rsi
   0x00000000001cfb9f <+29295>:	mov    QWORD PTR [rsp+0x3218],rdx
   0x00000000001cfba7 <+29303>:	mov    DWORD PTR [rsp+0x3210],ecx
   0x00000000001cfbae <+29310>:	mov    QWORD PTR [rsp+0x3208],rax
   0x00000000001cfbb6 <+29318>:	mov    rax,QWORD PTR [rsp+0x3208]
   0x00000000001cfbbe <+29326>:	mov    ecx,DWORD PTR [rsp+0x3210]
   0x00000000001cfbc5 <+29333>:	mov    rdx,QWORD PTR [rsp+0x3218]
   0x00000000001cfbcd <+29341>:	mov    rsi,QWORD PTR [rsp+0x3220]
   0x00000000001cfbd5 <+29349>:	mov    rdi,QWORD PTR [rsp+0x3228]
   0x00000000001cfbdd <+29357>:	mov    r8,QWORD PTR [rsp+0x3230]
   0x00000000001cfbe5 <+29365>:	mov    r9,QWORD PTR [rsp+0x3238]
   0x00000000001cfbed <+29373>:	mov    r10,QWORD PTR [rsp+0x3240]
   0x00000000001cfbf5 <+29381>:	mov    r11,QWORD PTR [rsp+0x3248]
   0x00000000001cfbfd <+29389>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001cfc05 <+29397>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001cfc0d <+29405>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001cfc15 <+29413>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001cfc1d <+29421>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001cfc25 <+29429>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001cfc2d <+29437>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001cfc35 <+29445>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001cfc3c <+29452>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001cfc44 <+29460>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001cfc4c <+29468>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001cfc54 <+29476>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001cfc5c <+29484>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001cfc64 <+29492>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001cfc6c <+29500>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001cfc74 <+29508>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001cfc7c <+29516>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001cfc84 <+29524>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001cfc8c <+29532>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001cfc94 <+29540>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001cfc9c <+29548>:	mov    rax,rsp
   0x00000000001cfc9f <+29551>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001cfca3 <+29555>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001cfca7 <+29559>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001cfcab <+29563>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001cfcaf <+29567>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001cfcb3 <+29571>:	mov    QWORD PTR [rax],rdi
   0x00000000001cfcb6 <+29574>:	lea    rdi,[rsp+0x1380]
   0x00000000001cfcbe <+29582>:	call   0x3ae5e0 <execute_call>
   0x00000000001cfcc3 <+29587>:	mov    eax,DWORD PTR [rsp+0x1380]
   0x00000000001cfcca <+29594>:	mov    rcx,QWORD PTR [rsp+0x1388]
   0x00000000001cfcd2 <+29602>:	mov    rdx,QWORD PTR [rsp+0x1390]
   0x00000000001cfcda <+29610>:	mov    rsi,QWORD PTR [rsp+0x1398]
   0x00000000001cfce2 <+29618>:	mov    QWORD PTR [rsp+0x3200],rsi
   0x00000000001cfcea <+29626>:	mov    QWORD PTR [rsp+0x31f8],rdx
   0x00000000001cfcf2 <+29634>:	mov    QWORD PTR [rsp+0x31f0],rcx
   0x00000000001cfcfa <+29642>:	mov    DWORD PTR [rsp+0x31e8],eax
   0x00000000001cfd01 <+29649>:	lea    rdi,[rsp+0x31e8]
   0x00000000001cfd09 <+29657>:	call   0x343280 <truthy?>
   0x00000000001cfd0e <+29662>:	test   al,0x1
   0x00000000001cfd10 <+29664>:	jne    0x1cfe38 <->+29960>
   0x00000000001cfd16 <+29670>:	jmp    0x1cfe66 <->+30006>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001cfd1b <+29675>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001cfd23 <+29683>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001cfd2b <+29691>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001cfd33 <+29699>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001cfd3a <+29706>:	lea    rdi,[rsp+0x1428]
   0x00000000001cfd42 <+29714>:	call   0x340b10 <new>
   0x00000000001cfd47 <+29719>:	mov    eax,DWORD PTR [rsp+0x1428]
   0x00000000001cfd4e <+29726>:	mov    rcx,QWORD PTR [rsp+0x1430]
   0x00000000001cfd56 <+29734>:	mov    rdx,QWORD PTR [rsp+0x1438]
   0x00000000001cfd5e <+29742>:	mov    rsi,QWORD PTR [rsp+0x1440]
   0x00000000001cfd66 <+29750>:	mov    QWORD PTR [rsp+0x32a8],rsi
   0x00000000001cfd6e <+29758>:	mov    QWORD PTR [rsp+0x32a0],rdx
   0x00000000001cfd76 <+29766>:	mov    QWORD PTR [rsp+0x3298],rcx
   0x00000000001cfd7e <+29774>:	mov    DWORD PTR [rsp+0x3290],eax
   0x00000000001cfd85 <+29781>:	lea    rax,[rsp+0x3290]
   0x00000000001cfd8d <+29789>:	mov    QWORD PTR [rsp+0x2c0],rax
   0x00000000001cfd95 <+29797>:	jmp    0x1cf99e <->+28782>
   0x00000000001cfd9a <+29802>:	mov    edi,DWORD PTR [rsp+0x2c8]
   0x00000000001cfda1 <+29809>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001cfda6 <+29814>:	and    al,0x1
   0x00000000001cfda8 <+29816>:	test   al,0x1
   0x00000000001cfdaa <+29818>:	jne    0x1cfdb1 <->+29825>
   0x00000000001cfdac <+29820>:	jmp    0x1cfe38 <->+29960>
   0x00000000001cfdb1 <+29825>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001cfdb9 <+29833>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001cfdc1 <+29841>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001cfdc9 <+29849>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001cfdd1 <+29857>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001cfdd8 <+29864>:	lea    rdi,[rsp+0x1448]
   0x00000000001cfde0 <+29872>:	call   0x340cb0 <new>
   0x00000000001cfde5 <+29877>:	mov    eax,DWORD PTR [rsp+0x1448]
   0x00000000001cfdec <+29884>:	mov    rcx,QWORD PTR [rsp+0x1450]
   0x00000000001cfdf4 <+29892>:	mov    rdx,QWORD PTR [rsp+0x1458]
   0x00000000001cfdfc <+29900>:	mov    rsi,QWORD PTR [rsp+0x1460]
   0x00000000001cfe04 <+29908>:	mov    QWORD PTR [rsp+0x3288],rsi
   0x00000000001cfe0c <+29916>:	mov    QWORD PTR [rsp+0x3280],rdx
   0x00000000001cfe14 <+29924>:	mov    QWORD PTR [rsp+0x3278],rcx
   0x00000000001cfe1c <+29932>:	mov    DWORD PTR [rsp+0x3270],eax
   0x00000000001cfe23 <+29939>:	lea    rax,[rsp+0x3270]
   0x00000000001cfe2b <+29947>:	mov    QWORD PTR [rsp+0x2c0],rax
   0x00000000001cfe33 <+29955>:	jmp    0x1cf99e <->+28782>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001cfe38 <+29960>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001cfe40 <+29968>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001cfe48 <+29976>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001cfe50 <+29984>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001cfe58 <+29992>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cfe5f <+29999>:	call   0x326080 <<<>
   0x00000000001cfe64 <+30004>:	jmp    0x1cfe68 <->+30008>
   0x00000000001cfe66 <+30006>:	jmp    0x1cfe68 <->+30008>
   0x00000000001cfe68 <+30008>:	mov    eax,DWORD PTR [rsp+0x32f0]
   0x00000000001cfe6f <+30015>:	inc    eax
   0x00000000001cfe71 <+30017>:	mov    DWORD PTR [rsp+0x2a4],eax
   0x00000000001cfe78 <+30024>:	seto   al
   0x00000000001cfe7b <+30027>:	test   al,0x1
   0x00000000001cfe7d <+30029>:	jne    0x1cfe81 <->+30033>
   0x00000000001cfe7f <+30031>:	jmp    0x1cfe86 <->+30038>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001cfe81 <+30033>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001cfe86 <+30038>:	mov    eax,DWORD PTR [rsp+0x2a4]
   0x00000000001cfe8d <+30045>:	mov    DWORD PTR [rsp+0x32f0],eax
   0x00000000001cfe94 <+30052>:	jmp    0x1cf7cf <->+28319>
   0x00000000001cfe99 <+30057>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001cfea1 <+30065>:	mov    QWORD PTR [rsp+0x298],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001cfea9 <+30073>:	jmp    0x1cfec4 <->+30100>
   0x00000000001cfeab <+30075>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001cfeb2 <+30082>:	mov    eax,0x192
   0x00000000001cfeb7 <+30087>:	cmp    eax,ecx
   0x00000000001cfeb9 <+30089>:	je     0x1d0557 <->+31783>
   0x00000000001cfebf <+30095>:	jmp    0x1d0569 <->+31801>
   0x00000000001cfec4 <+30100>:	mov    rsi,QWORD PTR [rsp+0x298]
   0x00000000001cfecc <+30108>:	lea    rdi,[rsp+0x1570]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001cfed4 <+30116>:	call   0x356ed0 <next>
   0x00000000001cfed9 <+30121>:	mov    eax,DWORD PTR [rsp+0x1570]
   0x00000000001cfee0 <+30128>:	mov    rcx,QWORD PTR [rsp+0x1578]
   0x00000000001cfee8 <+30136>:	mov    rdx,QWORD PTR [rsp+0x1580]
   0x00000000001cfef0 <+30144>:	mov    rsi,QWORD PTR [rsp+0x1588]
   0x00000000001cfef8 <+30152>:	mov    QWORD PTR [rsp+0x31a0],rsi
   0x00000000001cff00 <+30160>:	mov    QWORD PTR [rsp+0x3198],rdx
   0x00000000001cff08 <+30168>:	mov    QWORD PTR [rsp+0x3190],rcx
   0x00000000001cff10 <+30176>:	mov    DWORD PTR [rsp+0x3188],eax
   0x00000000001cff17 <+30183>:	mov    eax,DWORD PTR [rsp+0x3188]
   0x00000000001cff1e <+30190>:	mov    rcx,QWORD PTR [rsp+0x3190]
   0x00000000001cff26 <+30198>:	mov    rdx,QWORD PTR [rsp+0x3198]
   0x00000000001cff2e <+30206>:	mov    rsi,QWORD PTR [rsp+0x31a0]
   0x00000000001cff36 <+30214>:	mov    QWORD PTR [rsp+0x31c0],rsi
   0x00000000001cff3e <+30222>:	mov    QWORD PTR [rsp+0x31b8],rdx
   0x00000000001cff46 <+30230>:	mov    QWORD PTR [rsp+0x31b0],rcx
   0x00000000001cff4e <+30238>:	mov    DWORD PTR [rsp+0x31a8],eax
   0x00000000001cff55 <+30245>:	mov    eax,DWORD PTR [rsp+0x31a8]
   0x00000000001cff5c <+30252>:	mov    rcx,QWORD PTR [rsp+0x31b0]
   0x00000000001cff64 <+30260>:	mov    rdx,QWORD PTR [rsp+0x31b8]
   0x00000000001cff6c <+30268>:	mov    rsi,QWORD PTR [rsp+0x31c0]
   0x00000000001cff74 <+30276>:	mov    QWORD PTR [rsp+0x31e0],rsi
   0x00000000001cff7c <+30284>:	mov    QWORD PTR [rsp+0x31d8],rdx
   0x00000000001cff84 <+30292>:	mov    QWORD PTR [rsp+0x31d0],rcx
   0x00000000001cff8c <+30300>:	mov    DWORD PTR [rsp+0x31c8],eax
   0x00000000001cff93 <+30307>:	mov    eax,DWORD PTR [rsp+0x31c8]
   0x00000000001cff9a <+30314>:	mov    rcx,QWORD PTR [rsp+0x31d0]
   0x00000000001cffa2 <+30322>:	mov    rdx,QWORD PTR [rsp+0x31d8]
   0x00000000001cffaa <+30330>:	mov    rsi,QWORD PTR [rsp+0x31e0]
   0x00000000001cffb2 <+30338>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001cffba <+30346>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001cffc2 <+30354>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001cffca <+30362>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001cffd1 <+30369>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001cffd8 <+30376>:	mov    DWORD PTR [rsp+0x294],ecx
   0x00000000001cffdf <+30383>:	mov    eax,0x4ed
   0x00000000001cffe4 <+30388>:	cmp    eax,ecx
   0x00000000001cffe6 <+30390>:	sete   al
   0x00000000001cffe9 <+30393>:	and    al,0x1
   0x00000000001cffeb <+30395>:	test   al,0x1
   0x00000000001cffed <+30397>:	jne    0x1cfff1 <->+30401>
   0x00000000001cffef <+30399>:	jmp    0x1d006d <->+30525>
   0x00000000001cfff1 <+30401>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001cfff9 <+30409>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d0001 <+30417>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d0009 <+30425>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d0010 <+30432>:	lea    rdi,[rsp+0x1510]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d0018 <+30440>:	call   0x339d20 <new>
   0x00000000001d001d <+30445>:	mov    eax,DWORD PTR [rsp+0x1510]
   0x00000000001d0024 <+30452>:	mov    rcx,QWORD PTR [rsp+0x1518]
   0x00000000001d002c <+30460>:	mov    rdx,QWORD PTR [rsp+0x1520]
   0x00000000001d0034 <+30468>:	mov    rsi,QWORD PTR [rsp+0x1528]
   0x00000000001d003c <+30476>:	mov    QWORD PTR [rsp+0x3180],rsi
   0x00000000001d0044 <+30484>:	mov    QWORD PTR [rsp+0x3178],rdx
   0x00000000001d004c <+30492>:	mov    QWORD PTR [rsp+0x3170],rcx
   0x00000000001d0054 <+30500>:	mov    DWORD PTR [rsp+0x3168],eax
   0x00000000001d005b <+30507>:	lea    rax,[rsp+0x3168]
   0x00000000001d0063 <+30515>:	mov    QWORD PTR [rsp+0x288],rax
   0x00000000001d006b <+30523>:	jmp    0x1d0088 <->+30552>
   0x00000000001d006d <+30525>:	mov    edi,DWORD PTR [rsp+0x294]
   0x00000000001d0074 <+30532>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d0079 <+30537>:	and    al,0x1
   0x00000000001d007b <+30539>:	test   al,0x1
   0x00000000001d007d <+30541>:	jne    0x1d0405 <->+31445>
   0x00000000001d0083 <+30547>:	jmp    0x1d0484 <->+31572>
   0x00000000001d0088 <+30552>:	mov    rsi,QWORD PTR [rsp+0x288]
   0x00000000001d0090 <+30560>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d0092 <+30562>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d0096 <+30566>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d009a <+30570>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d009e <+30574>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d00a6 <+30582>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d00ae <+30590>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d00b6 <+30598>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d00bd <+30605>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d00c4 <+30612>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d00cc <+30620>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d00d4 <+30628>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d00dc <+30636>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d00e4 <+30644>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d00ec <+30652>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d00f4 <+30660>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d00fb <+30667>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d0103 <+30675>:	mov    QWORD PTR [rsp+0x270],rax
   0x00000000001d010b <+30683>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d0113 <+30691>:	mov    QWORD PTR [rsp+0x278],rax
   0x00000000001d011b <+30699>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d0123 <+30707>:	mov    QWORD PTR [rsp+0x280],rax
   0x00000000001d012b <+30715>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d0133 <+30723>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d013b <+30731>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d0143 <+30739>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d014a <+30746>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d0152 <+30754>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d015a <+30762>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d0162 <+30770>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d016a <+30778>:	mov    rax,rsp
   0x00000000001d016d <+30781>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d0171 <+30785>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d0175 <+30789>:	mov    QWORD PTR [rax],rdi
   0x00000000001d0178 <+30792>:	lea    rdi,[rsp+0x14f0]
   0x00000000001d0180 <+30800>:	call   0x511190 <resolve_getattr>
   0x00000000001d0185 <+30805>:	mov    rsi,QWORD PTR [rsp+0x270]
   0x00000000001d018d <+30813>:	mov    rdx,QWORD PTR [rsp+0x278]
   0x00000000001d0195 <+30821>:	mov    rcx,QWORD PTR [rsp+0x280]
   0x00000000001d019d <+30829>:	mov    eax,DWORD PTR [rsp+0x14f0]
   0x00000000001d01a4 <+30836>:	mov    rdi,QWORD PTR [rsp+0x14f8]
   0x00000000001d01ac <+30844>:	mov    r8,QWORD PTR [rsp+0x1500]
   0x00000000001d01b4 <+30852>:	mov    r9,QWORD PTR [rsp+0x1508]
   0x00000000001d01bc <+30860>:	mov    QWORD PTR [rsp+0x3120],r9
   0x00000000001d01c4 <+30868>:	mov    QWORD PTR [rsp+0x3118],r8
   0x00000000001d01cc <+30876>:	mov    QWORD PTR [rsp+0x3110],rdi
   0x00000000001d01d4 <+30884>:	mov    DWORD PTR [rsp+0x3108],eax
   0x00000000001d01db <+30891>:	mov    r9,QWORD PTR [rsp+0x3110]
   0x00000000001d01e3 <+30899>:	mov    r8d,DWORD PTR [rsp+0x3108]
   0x00000000001d01eb <+30907>:	mov    rdi,QWORD PTR [rsp+0x3118]
   0x00000000001d01f3 <+30915>:	mov    r10,QWORD PTR [rsp+0x3120]
   0x00000000001d01fb <+30923>:	mov    rax,rsp
   0x00000000001d01fe <+30926>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d0202 <+30930>:	mov    QWORD PTR [rax],rdi
   0x00000000001d0205 <+30933>:	lea    rdi,[rsp+0x14a8]
   0x00000000001d020d <+30941>:	call   0x4bd1f0 <new:target>
   0x00000000001d0212 <+30946>:	mov    rax,QWORD PTR [rsp+0x14a8]
   0x00000000001d021a <+30954>:	mov    ecx,DWORD PTR [rsp+0x14b0]
   0x00000000001d0221 <+30961>:	mov    rdx,QWORD PTR [rsp+0x14b8]
   0x00000000001d0229 <+30969>:	mov    rsi,QWORD PTR [rsp+0x14c0]
   0x00000000001d0231 <+30977>:	mov    rdi,QWORD PTR [rsp+0x14c8]
   0x00000000001d0239 <+30985>:	mov    r8,QWORD PTR [rsp+0x14d0]
   0x00000000001d0241 <+30993>:	mov    r9,QWORD PTR [rsp+0x14d8]
   0x00000000001d0249 <+31001>:	mov    r10,QWORD PTR [rsp+0x14e0]
   0x00000000001d0251 <+31009>:	mov    r11,QWORD PTR [rsp+0x14e8]
   0x00000000001d0259 <+31017>:	mov    QWORD PTR [rsp+0x3100],r11
   0x00000000001d0261 <+31025>:	mov    QWORD PTR [rsp+0x30f8],r10
   0x00000000001d0269 <+31033>:	mov    QWORD PTR [rsp+0x30f0],r9
   0x00000000001d0271 <+31041>:	mov    QWORD PTR [rsp+0x30e8],r8
   0x00000000001d0279 <+31049>:	mov    QWORD PTR [rsp+0x30e0],rdi
   0x00000000001d0281 <+31057>:	mov    QWORD PTR [rsp+0x30d8],rsi
   0x00000000001d0289 <+31065>:	mov    QWORD PTR [rsp+0x30d0],rdx
   0x00000000001d0291 <+31073>:	mov    DWORD PTR [rsp+0x30c8],ecx
   0x00000000001d0298 <+31080>:	mov    QWORD PTR [rsp+0x30c0],rax
   0x00000000001d02a0 <+31088>:	mov    rax,QWORD PTR [rsp+0x30c0]
   0x00000000001d02a8 <+31096>:	mov    ecx,DWORD PTR [rsp+0x30c8]
   0x00000000001d02af <+31103>:	mov    rdx,QWORD PTR [rsp+0x30d0]
   0x00000000001d02b7 <+31111>:	mov    rsi,QWORD PTR [rsp+0x30d8]
   0x00000000001d02bf <+31119>:	mov    rdi,QWORD PTR [rsp+0x30e0]
   0x00000000001d02c7 <+31127>:	mov    r8,QWORD PTR [rsp+0x30e8]
   0x00000000001d02cf <+31135>:	mov    r9,QWORD PTR [rsp+0x30f0]
   0x00000000001d02d7 <+31143>:	mov    r10,QWORD PTR [rsp+0x30f8]
   0x00000000001d02df <+31151>:	mov    r11,QWORD PTR [rsp+0x3100]
   0x00000000001d02e7 <+31159>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d02ef <+31167>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d02f7 <+31175>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d02ff <+31183>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d0307 <+31191>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d030f <+31199>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d0317 <+31207>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d031f <+31215>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d0326 <+31222>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d032e <+31230>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d0336 <+31238>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d033e <+31246>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d0346 <+31254>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d034e <+31262>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d0356 <+31270>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d035e <+31278>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d0366 <+31286>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d036e <+31294>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d0376 <+31302>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d037e <+31310>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d0386 <+31318>:	mov    rax,rsp
   0x00000000001d0389 <+31321>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d038d <+31325>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d0391 <+31329>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d0395 <+31333>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d0399 <+31337>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d039d <+31341>:	mov    QWORD PTR [rax],rdi
   0x00000000001d03a0 <+31344>:	lea    rdi,[rsp+0x1488]
   0x00000000001d03a8 <+31352>:	call   0x3ae5e0 <execute_call>
   0x00000000001d03ad <+31357>:	mov    eax,DWORD PTR [rsp+0x1488]
   0x00000000001d03b4 <+31364>:	mov    rcx,QWORD PTR [rsp+0x1490]
   0x00000000001d03bc <+31372>:	mov    rdx,QWORD PTR [rsp+0x1498]
   0x00000000001d03c4 <+31380>:	mov    rsi,QWORD PTR [rsp+0x14a0]
   0x00000000001d03cc <+31388>:	mov    QWORD PTR [rsp+0x30b8],rsi
   0x00000000001d03d4 <+31396>:	mov    QWORD PTR [rsp+0x30b0],rdx
   0x00000000001d03dc <+31404>:	mov    QWORD PTR [rsp+0x30a8],rcx
   0x00000000001d03e4 <+31412>:	mov    DWORD PTR [rsp+0x30a0],eax
   0x00000000001d03eb <+31419>:	lea    rdi,[rsp+0x30a0]
   0x00000000001d03f3 <+31427>:	call   0x343280 <truthy?>
   0x00000000001d03f8 <+31432>:	test   al,0x1
   0x00000000001d03fa <+31434>:	jne    0x1d0522 <->+31730>
   0x00000000001d0400 <+31440>:	jmp    0x1d0550 <->+31776>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d0405 <+31445>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d040d <+31453>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d0415 <+31461>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d041d <+31469>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d0424 <+31476>:	lea    rdi,[rsp+0x1530]
   0x00000000001d042c <+31484>:	call   0x340b10 <new>
   0x00000000001d0431 <+31489>:	mov    eax,DWORD PTR [rsp+0x1530]
   0x00000000001d0438 <+31496>:	mov    rcx,QWORD PTR [rsp+0x1538]
   0x00000000001d0440 <+31504>:	mov    rdx,QWORD PTR [rsp+0x1540]
   0x00000000001d0448 <+31512>:	mov    rsi,QWORD PTR [rsp+0x1548]
   0x00000000001d0450 <+31520>:	mov    QWORD PTR [rsp+0x3160],rsi
   0x00000000001d0458 <+31528>:	mov    QWORD PTR [rsp+0x3158],rdx
   0x00000000001d0460 <+31536>:	mov    QWORD PTR [rsp+0x3150],rcx
   0x00000000001d0468 <+31544>:	mov    DWORD PTR [rsp+0x3148],eax
   0x00000000001d046f <+31551>:	lea    rax,[rsp+0x3148]
   0x00000000001d0477 <+31559>:	mov    QWORD PTR [rsp+0x288],rax
   0x00000000001d047f <+31567>:	jmp    0x1d0088 <->+30552>
   0x00000000001d0484 <+31572>:	mov    edi,DWORD PTR [rsp+0x294]
   0x00000000001d048b <+31579>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d0490 <+31584>:	and    al,0x1
   0x00000000001d0492 <+31586>:	test   al,0x1
   0x00000000001d0494 <+31588>:	jne    0x1d049b <->+31595>
   0x00000000001d0496 <+31590>:	jmp    0x1d0522 <->+31730>
   0x00000000001d049b <+31595>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d04a3 <+31603>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d04ab <+31611>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d04b3 <+31619>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d04bb <+31627>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d04c2 <+31634>:	lea    rdi,[rsp+0x1550]
   0x00000000001d04ca <+31642>:	call   0x340cb0 <new>
   0x00000000001d04cf <+31647>:	mov    eax,DWORD PTR [rsp+0x1550]
   0x00000000001d04d6 <+31654>:	mov    rcx,QWORD PTR [rsp+0x1558]
   0x00000000001d04de <+31662>:	mov    rdx,QWORD PTR [rsp+0x1560]
   0x00000000001d04e6 <+31670>:	mov    rsi,QWORD PTR [rsp+0x1568]
   0x00000000001d04ee <+31678>:	mov    QWORD PTR [rsp+0x3140],rsi
   0x00000000001d04f6 <+31686>:	mov    QWORD PTR [rsp+0x3138],rdx
   0x00000000001d04fe <+31694>:	mov    QWORD PTR [rsp+0x3130],rcx
   0x00000000001d0506 <+31702>:	mov    DWORD PTR [rsp+0x3128],eax
   0x00000000001d050d <+31709>:	lea    rax,[rsp+0x3128]
   0x00000000001d0515 <+31717>:	mov    QWORD PTR [rsp+0x288],rax
   0x00000000001d051d <+31725>:	jmp    0x1d0088 <->+30552>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d0522 <+31730>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d052a <+31738>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d0532 <+31746>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d053a <+31754>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d0542 <+31762>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d0549 <+31769>:	call   0x326080 <<<>
   0x00000000001d054e <+31774>:	jmp    0x1d0552 <->+31778>
   0x00000000001d0550 <+31776>:	jmp    0x1d0552 <->+31778>
   0x00000000001d0552 <+31778>:	jmp    0x1cfec4 <->+30100>
   0x00000000001d0557 <+31783>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d055f <+31791>:	mov    QWORD PTR [rsp+0x268],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001d0567 <+31799>:	jmp    0x1d0582 <->+31826>
   0x00000000001d0569 <+31801>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d0570 <+31808>:	mov    eax,0x127
   0x00000000001d0575 <+31813>:	cmp    eax,ecx
   0x00000000001d0577 <+31815>:	je     0x1d0c50 <->+33568>
   0x00000000001d057d <+31821>:	jmp    0x1d0c62 <->+33586>
   0x00000000001d0582 <+31826>:	mov    rsi,QWORD PTR [rsp+0x268]
   0x00000000001d058a <+31834>:	lea    rdi,[rsp+0x1678]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d0592 <+31842>:	call   0x359c60 <next>
   0x00000000001d0597 <+31847>:	mov    eax,DWORD PTR [rsp+0x1678]
   0x00000000001d059e <+31854>:	mov    rcx,QWORD PTR [rsp+0x1680]
   0x00000000001d05a6 <+31862>:	mov    rdx,QWORD PTR [rsp+0x1688]
   0x00000000001d05ae <+31870>:	mov    rsi,QWORD PTR [rsp+0x1690]
   0x00000000001d05b6 <+31878>:	mov    rdi,QWORD PTR [rsp+0x1698]
   0x00000000001d05be <+31886>:	mov    QWORD PTR [rsp+0x3050],rdi
   0x00000000001d05c6 <+31894>:	mov    QWORD PTR [rsp+0x3048],rsi
   0x00000000001d05ce <+31902>:	mov    QWORD PTR [rsp+0x3040],rdx
   0x00000000001d05d6 <+31910>:	mov    QWORD PTR [rsp+0x3038],rcx
   0x00000000001d05de <+31918>:	mov    DWORD PTR [rsp+0x3030],eax
   0x00000000001d05e5 <+31925>:	mov    eax,DWORD PTR [rsp+0x3030]
   0x00000000001d05ec <+31932>:	mov    rcx,QWORD PTR [rsp+0x3038]
   0x00000000001d05f4 <+31940>:	mov    rdx,QWORD PTR [rsp+0x3040]
   0x00000000001d05fc <+31948>:	mov    rsi,QWORD PTR [rsp+0x3048]
   0x00000000001d0604 <+31956>:	mov    rdi,QWORD PTR [rsp+0x3050]
   0x00000000001d060c <+31964>:	mov    QWORD PTR [rsp+0x3078],rdi
   0x00000000001d0614 <+31972>:	mov    QWORD PTR [rsp+0x3070],rsi
   0x00000000001d061c <+31980>:	mov    QWORD PTR [rsp+0x3068],rdx
   0x00000000001d0624 <+31988>:	mov    QWORD PTR [rsp+0x3060],rcx
   0x00000000001d062c <+31996>:	mov    DWORD PTR [rsp+0x3058],eax

637	      break if value.is_a?(Stop)
   0x00000000001d0633 <+32003>:	mov    eax,0xa3
   0x00000000001d0638 <+32008>:	cmp    eax,DWORD PTR [rsp+0x3058]
   0x00000000001d063f <+32015>:	jne    0x1d0646 <->+32022>
   0x00000000001d0641 <+32017>:	jmp    0x1d06e5 <->+32181>
   0x00000000001d0646 <+32022>:	mov    eax,DWORD PTR [rsp+0x3060]
   0x00000000001d064d <+32029>:	mov    rcx,QWORD PTR [rsp+0x3068]
   0x00000000001d0655 <+32037>:	mov    rdx,QWORD PTR [rsp+0x3070]
   0x00000000001d065d <+32045>:	mov    rsi,QWORD PTR [rsp+0x3078]
   0x00000000001d0665 <+32053>:	mov    QWORD PTR [rsp+0x3098],rsi
   0x00000000001d066d <+32061>:	mov    QWORD PTR [rsp+0x3090],rdx
   0x00000000001d0675 <+32069>:	mov    QWORD PTR [rsp+0x3088],rcx
   0x00000000001d067d <+32077>:	mov    DWORD PTR [rsp+0x3080],eax
   0x00000000001d0684 <+32084>:	mov    eax,DWORD PTR [rsp+0x3080]
   0x00000000001d068b <+32091>:	mov    rcx,QWORD PTR [rsp+0x3088]
   0x00000000001d0693 <+32099>:	mov    rdx,QWORD PTR [rsp+0x3090]
   0x00000000001d069b <+32107>:	mov    rsi,QWORD PTR [rsp+0x3098]
   0x00000000001d06a3 <+32115>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001d06ab <+32123>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001d06b3 <+32131>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001d06bb <+32139>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001d06c2 <+32146>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d06c9 <+32153>:	mov    DWORD PTR [rsp+0x264],ecx
   0x00000000001d06d0 <+32160>:	mov    eax,0x4ed
   0x00000000001d06d5 <+32165>:	cmp    eax,ecx
   0x00000000001d06d7 <+32167>:	sete   al
   0x00000000001d06da <+32170>:	and    al,0x1
   0x00000000001d06dc <+32172>:	test   al,0x1
   0x00000000001d06de <+32174>:	jne    0x1d06ea <->+32186>
   0x00000000001d06e0 <+32176>:	jmp    0x1d0766 <->+32310>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d06e5 <+32181>:	jmp    0x1cf0d6 <->+26534>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001d06ea <+32186>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d06f2 <+32194>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d06fa <+32202>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d0702 <+32210>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d0709 <+32217>:	lea    rdi,[rsp+0x1618]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d0711 <+32225>:	call   0x339d20 <new>
   0x00000000001d0716 <+32230>:	mov    eax,DWORD PTR [rsp+0x1618]
   0x00000000001d071d <+32237>:	mov    rcx,QWORD PTR [rsp+0x1620]
   0x00000000001d0725 <+32245>:	mov    rdx,QWORD PTR [rsp+0x1628]
   0x00000000001d072d <+32253>:	mov    rsi,QWORD PTR [rsp+0x1630]
   0x00000000001d0735 <+32261>:	mov    QWORD PTR [rsp+0x3028],rsi
   0x00000000001d073d <+32269>:	mov    QWORD PTR [rsp+0x3020],rdx
   0x00000000001d0745 <+32277>:	mov    QWORD PTR [rsp+0x3018],rcx
   0x00000000001d074d <+32285>:	mov    DWORD PTR [rsp+0x3010],eax
   0x00000000001d0754 <+32292>:	lea    rax,[rsp+0x3010]
   0x00000000001d075c <+32300>:	mov    QWORD PTR [rsp+0x258],rax
   0x00000000001d0764 <+32308>:	jmp    0x1d0781 <->+32337>
   0x00000000001d0766 <+32310>:	mov    edi,DWORD PTR [rsp+0x264]
   0x00000000001d076d <+32317>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d0772 <+32322>:	and    al,0x1
   0x00000000001d0774 <+32324>:	test   al,0x1
   0x00000000001d0776 <+32326>:	jne    0x1d0afe <->+33230>
   0x00000000001d077c <+32332>:	jmp    0x1d0b7d <->+33357>
   0x00000000001d0781 <+32337>:	mov    rsi,QWORD PTR [rsp+0x258]
   0x00000000001d0789 <+32345>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d078b <+32347>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d078f <+32351>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d0793 <+32355>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d0797 <+32359>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d079f <+32367>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d07a7 <+32375>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d07af <+32383>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d07b6 <+32390>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d07bd <+32397>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d07c5 <+32405>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d07cd <+32413>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d07d5 <+32421>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d07dd <+32429>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d07e5 <+32437>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d07ed <+32445>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d07f4 <+32452>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d07fc <+32460>:	mov    QWORD PTR [rsp+0x240],rax
   0x00000000001d0804 <+32468>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d080c <+32476>:	mov    QWORD PTR [rsp+0x248],rax
   0x00000000001d0814 <+32484>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d081c <+32492>:	mov    QWORD PTR [rsp+0x250],rax
   0x00000000001d0824 <+32500>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d082c <+32508>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d0834 <+32516>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d083c <+32524>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d0843 <+32531>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d084b <+32539>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d0853 <+32547>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d085b <+32555>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d0863 <+32563>:	mov    rax,rsp
   0x00000000001d0866 <+32566>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d086a <+32570>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d086e <+32574>:	mov    QWORD PTR [rax],rdi
   0x00000000001d0871 <+32577>:	lea    rdi,[rsp+0x15f8]
   0x00000000001d0879 <+32585>:	call   0x511190 <resolve_getattr>
   0x00000000001d087e <+32590>:	mov    rsi,QWORD PTR [rsp+0x240]
   0x00000000001d0886 <+32598>:	mov    rdx,QWORD PTR [rsp+0x248]
   0x00000000001d088e <+32606>:	mov    rcx,QWORD PTR [rsp+0x250]
   0x00000000001d0896 <+32614>:	mov    eax,DWORD PTR [rsp+0x15f8]
   0x00000000001d089d <+32621>:	mov    rdi,QWORD PTR [rsp+0x1600]
   0x00000000001d08a5 <+32629>:	mov    r8,QWORD PTR [rsp+0x1608]
   0x00000000001d08ad <+32637>:	mov    r9,QWORD PTR [rsp+0x1610]
   0x00000000001d08b5 <+32645>:	mov    QWORD PTR [rsp+0x2fc8],r9
   0x00000000001d08bd <+32653>:	mov    QWORD PTR [rsp+0x2fc0],r8
   0x00000000001d08c5 <+32661>:	mov    QWORD PTR [rsp+0x2fb8],rdi
   0x00000000001d08cd <+32669>:	mov    DWORD PTR [rsp+0x2fb0],eax
   0x00000000001d08d4 <+32676>:	mov    r9,QWORD PTR [rsp+0x2fb8]
   0x00000000001d08dc <+32684>:	mov    r8d,DWORD PTR [rsp+0x2fb0]
   0x00000000001d08e4 <+32692>:	mov    rdi,QWORD PTR [rsp+0x2fc0]
   0x00000000001d08ec <+32700>:	mov    r10,QWORD PTR [rsp+0x2fc8]
   0x00000000001d08f4 <+32708>:	mov    rax,rsp
   0x00000000001d08f7 <+32711>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d08fb <+32715>:	mov    QWORD PTR [rax],rdi
   0x00000000001d08fe <+32718>:	lea    rdi,[rsp+0x15b0]
   0x00000000001d0906 <+32726>:	call   0x4bd1f0 <new:target>
   0x00000000001d090b <+32731>:	mov    rax,QWORD PTR [rsp+0x15b0]
   0x00000000001d0913 <+32739>:	mov    ecx,DWORD PTR [rsp+0x15b8]
   0x00000000001d091a <+32746>:	mov    rdx,QWORD PTR [rsp+0x15c0]
   0x00000000001d0922 <+32754>:	mov    rsi,QWORD PTR [rsp+0x15c8]
   0x00000000001d092a <+32762>:	mov    rdi,QWORD PTR [rsp+0x15d0]
   0x00000000001d0932 <+32770>:	mov    r8,QWORD PTR [rsp+0x15d8]
   0x00000000001d093a <+32778>:	mov    r9,QWORD PTR [rsp+0x15e0]
   0x00000000001d0942 <+32786>:	mov    r10,QWORD PTR [rsp+0x15e8]
   0x00000000001d094a <+32794>:	mov    r11,QWORD PTR [rsp+0x15f0]
   0x00000000001d0952 <+32802>:	mov    QWORD PTR [rsp+0x2fa8],r11
   0x00000000001d095a <+32810>:	mov    QWORD PTR [rsp+0x2fa0],r10
   0x00000000001d0962 <+32818>:	mov    QWORD PTR [rsp+0x2f98],r9
   0x00000000001d096a <+32826>:	mov    QWORD PTR [rsp+0x2f90],r8
   0x00000000001d0972 <+32834>:	mov    QWORD PTR [rsp+0x2f88],rdi
   0x00000000001d097a <+32842>:	mov    QWORD PTR [rsp+0x2f80],rsi
   0x00000000001d0982 <+32850>:	mov    QWORD PTR [rsp+0x2f78],rdx
   0x00000000001d098a <+32858>:	mov    DWORD PTR [rsp+0x2f70],ecx
   0x00000000001d0991 <+32865>:	mov    QWORD PTR [rsp+0x2f68],rax
   0x00000000001d0999 <+32873>:	mov    rax,QWORD PTR [rsp+0x2f68]
   0x00000000001d09a1 <+32881>:	mov    ecx,DWORD PTR [rsp+0x2f70]
   0x00000000001d09a8 <+32888>:	mov    rdx,QWORD PTR [rsp+0x2f78]
   0x00000000001d09b0 <+32896>:	mov    rsi,QWORD PTR [rsp+0x2f80]
   0x00000000001d09b8 <+32904>:	mov    rdi,QWORD PTR [rsp+0x2f88]
   0x00000000001d09c0 <+32912>:	mov    r8,QWORD PTR [rsp+0x2f90]
   0x00000000001d09c8 <+32920>:	mov    r9,QWORD PTR [rsp+0x2f98]
   0x00000000001d09d0 <+32928>:	mov    r10,QWORD PTR [rsp+0x2fa0]
   0x00000000001d09d8 <+32936>:	mov    r11,QWORD PTR [rsp+0x2fa8]
   0x00000000001d09e0 <+32944>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d09e8 <+32952>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d09f0 <+32960>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d09f8 <+32968>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d0a00 <+32976>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d0a08 <+32984>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d0a10 <+32992>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d0a18 <+33000>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d0a1f <+33007>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d0a27 <+33015>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d0a2f <+33023>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d0a37 <+33031>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d0a3f <+33039>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d0a47 <+33047>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d0a4f <+33055>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d0a57 <+33063>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d0a5f <+33071>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d0a67 <+33079>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d0a6f <+33087>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d0a77 <+33095>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d0a7f <+33103>:	mov    rax,rsp
   0x00000000001d0a82 <+33106>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d0a86 <+33110>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d0a8a <+33114>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d0a8e <+33118>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d0a92 <+33122>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d0a96 <+33126>:	mov    QWORD PTR [rax],rdi
   0x00000000001d0a99 <+33129>:	lea    rdi,[rsp+0x1590]
   0x00000000001d0aa1 <+33137>:	call   0x3ae5e0 <execute_call>
   0x00000000001d0aa6 <+33142>:	mov    eax,DWORD PTR [rsp+0x1590]
   0x00000000001d0aad <+33149>:	mov    rcx,QWORD PTR [rsp+0x1598]
   0x00000000001d0ab5 <+33157>:	mov    rdx,QWORD PTR [rsp+0x15a0]
   0x00000000001d0abd <+33165>:	mov    rsi,QWORD PTR [rsp+0x15a8]
   0x00000000001d0ac5 <+33173>:	mov    QWORD PTR [rsp+0x2f60],rsi
   0x00000000001d0acd <+33181>:	mov    QWORD PTR [rsp+0x2f58],rdx
   0x00000000001d0ad5 <+33189>:	mov    QWORD PTR [rsp+0x2f50],rcx
   0x00000000001d0add <+33197>:	mov    DWORD PTR [rsp+0x2f48],eax
   0x00000000001d0ae4 <+33204>:	lea    rdi,[rsp+0x2f48]
   0x00000000001d0aec <+33212>:	call   0x343280 <truthy?>
   0x00000000001d0af1 <+33217>:	test   al,0x1
   0x00000000001d0af3 <+33219>:	jne    0x1d0c1b <->+33515>
   0x00000000001d0af9 <+33225>:	jmp    0x1d0c49 <->+33561>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d0afe <+33230>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d0b06 <+33238>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d0b0e <+33246>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d0b16 <+33254>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d0b1d <+33261>:	lea    rdi,[rsp+0x1638]
   0x00000000001d0b25 <+33269>:	call   0x340b10 <new>
   0x00000000001d0b2a <+33274>:	mov    eax,DWORD PTR [rsp+0x1638]
   0x00000000001d0b31 <+33281>:	mov    rcx,QWORD PTR [rsp+0x1640]
   0x00000000001d0b39 <+33289>:	mov    rdx,QWORD PTR [rsp+0x1648]
   0x00000000001d0b41 <+33297>:	mov    rsi,QWORD PTR [rsp+0x1650]
   0x00000000001d0b49 <+33305>:	mov    QWORD PTR [rsp+0x3008],rsi
   0x00000000001d0b51 <+33313>:	mov    QWORD PTR [rsp+0x3000],rdx
   0x00000000001d0b59 <+33321>:	mov    QWORD PTR [rsp+0x2ff8],rcx
   0x00000000001d0b61 <+33329>:	mov    DWORD PTR [rsp+0x2ff0],eax
   0x00000000001d0b68 <+33336>:	lea    rax,[rsp+0x2ff0]
   0x00000000001d0b70 <+33344>:	mov    QWORD PTR [rsp+0x258],rax
   0x00000000001d0b78 <+33352>:	jmp    0x1d0781 <->+32337>
   0x00000000001d0b7d <+33357>:	mov    edi,DWORD PTR [rsp+0x264]
   0x00000000001d0b84 <+33364>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d0b89 <+33369>:	and    al,0x1
   0x00000000001d0b8b <+33371>:	test   al,0x1
   0x00000000001d0b8d <+33373>:	jne    0x1d0b94 <->+33380>
   0x00000000001d0b8f <+33375>:	jmp    0x1d0c1b <->+33515>
   0x00000000001d0b94 <+33380>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d0b9c <+33388>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d0ba4 <+33396>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d0bac <+33404>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d0bb4 <+33412>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d0bbb <+33419>:	lea    rdi,[rsp+0x1658]
   0x00000000001d0bc3 <+33427>:	call   0x340cb0 <new>
   0x00000000001d0bc8 <+33432>:	mov    eax,DWORD PTR [rsp+0x1658]
   0x00000000001d0bcf <+33439>:	mov    rcx,QWORD PTR [rsp+0x1660]
   0x00000000001d0bd7 <+33447>:	mov    rdx,QWORD PTR [rsp+0x1668]
   0x00000000001d0bdf <+33455>:	mov    rsi,QWORD PTR [rsp+0x1670]
   0x00000000001d0be7 <+33463>:	mov    QWORD PTR [rsp+0x2fe8],rsi
   0x00000000001d0bef <+33471>:	mov    QWORD PTR [rsp+0x2fe0],rdx
   0x00000000001d0bf7 <+33479>:	mov    QWORD PTR [rsp+0x2fd8],rcx
   0x00000000001d0bff <+33487>:	mov    DWORD PTR [rsp+0x2fd0],eax
   0x00000000001d0c06 <+33494>:	lea    rax,[rsp+0x2fd0]
   0x00000000001d0c0e <+33502>:	mov    QWORD PTR [rsp+0x258],rax
   0x00000000001d0c16 <+33510>:	jmp    0x1d0781 <->+32337>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d0c1b <+33515>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d0c23 <+33523>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d0c2b <+33531>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d0c33 <+33539>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d0c3b <+33547>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d0c42 <+33554>:	call   0x326080 <<<>
   0x00000000001d0c47 <+33559>:	jmp    0x1d0c4b <->+33563>
   0x00000000001d0c49 <+33561>:	jmp    0x1d0c4b <->+33563>
   0x00000000001d0c4b <+33563>:	jmp    0x1d0582 <->+31826>
   0x00000000001d0c50 <+33568>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d0c58 <+33576>:	mov    QWORD PTR [rsp+0x238],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001d0c60 <+33584>:	jmp    0x1d0c7b <->+33611>
   0x00000000001d0c62 <+33586>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d0c69 <+33593>:	mov    eax,0x128
   0x00000000001d0c6e <+33598>:	cmp    eax,ecx
   0x00000000001d0c70 <+33600>:	je     0x1d1349 <->+35353>
   0x00000000001d0c76 <+33606>:	jmp    0x1d135b <->+35371>
   0x00000000001d0c7b <+33611>:	mov    rsi,QWORD PTR [rsp+0x238]
   0x00000000001d0c83 <+33619>:	lea    rdi,[rsp+0x1788]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d0c8b <+33627>:	call   0x35cfa0 <next>
   0x00000000001d0c90 <+33632>:	mov    eax,DWORD PTR [rsp+0x1788]
   0x00000000001d0c97 <+33639>:	mov    rcx,QWORD PTR [rsp+0x1790]
   0x00000000001d0c9f <+33647>:	mov    rdx,QWORD PTR [rsp+0x1798]
   0x00000000001d0ca7 <+33655>:	mov    rsi,QWORD PTR [rsp+0x17a0]
   0x00000000001d0caf <+33663>:	mov    rdi,QWORD PTR [rsp+0x17a8]
   0x00000000001d0cb7 <+33671>:	mov    QWORD PTR [rsp+0x2ef8],rdi
   0x00000000001d0cbf <+33679>:	mov    QWORD PTR [rsp+0x2ef0],rsi
   0x00000000001d0cc7 <+33687>:	mov    QWORD PTR [rsp+0x2ee8],rdx
   0x00000000001d0ccf <+33695>:	mov    QWORD PTR [rsp+0x2ee0],rcx
   0x00000000001d0cd7 <+33703>:	mov    DWORD PTR [rsp+0x2ed8],eax
   0x00000000001d0cde <+33710>:	mov    eax,DWORD PTR [rsp+0x2ed8]
   0x00000000001d0ce5 <+33717>:	mov    rcx,QWORD PTR [rsp+0x2ee0]
   0x00000000001d0ced <+33725>:	mov    rdx,QWORD PTR [rsp+0x2ee8]
   0x00000000001d0cf5 <+33733>:	mov    rsi,QWORD PTR [rsp+0x2ef0]
   0x00000000001d0cfd <+33741>:	mov    rdi,QWORD PTR [rsp+0x2ef8]
   0x00000000001d0d05 <+33749>:	mov    QWORD PTR [rsp+0x2f20],rdi
   0x00000000001d0d0d <+33757>:	mov    QWORD PTR [rsp+0x2f18],rsi
   0x00000000001d0d15 <+33765>:	mov    QWORD PTR [rsp+0x2f10],rdx
   0x00000000001d0d1d <+33773>:	mov    QWORD PTR [rsp+0x2f08],rcx
   0x00000000001d0d25 <+33781>:	mov    DWORD PTR [rsp+0x2f00],eax

637	      break if value.is_a?(Stop)
   0x00000000001d0d2c <+33788>:	mov    eax,0xa3
   0x00000000001d0d31 <+33793>:	cmp    eax,DWORD PTR [rsp+0x2f00]
   0x00000000001d0d38 <+33800>:	jne    0x1d0d3f <->+33807>
   0x00000000001d0d3a <+33802>:	jmp    0x1d0dde <->+33966>
   0x00000000001d0d3f <+33807>:	mov    eax,DWORD PTR [rsp+0x2f08]
   0x00000000001d0d46 <+33814>:	mov    rcx,QWORD PTR [rsp+0x2f10]
   0x00000000001d0d4e <+33822>:	mov    rdx,QWORD PTR [rsp+0x2f18]
   0x00000000001d0d56 <+33830>:	mov    rsi,QWORD PTR [rsp+0x2f20]
   0x00000000001d0d5e <+33838>:	mov    QWORD PTR [rsp+0x2f40],rsi
   0x00000000001d0d66 <+33846>:	mov    QWORD PTR [rsp+0x2f38],rdx
   0x00000000001d0d6e <+33854>:	mov    QWORD PTR [rsp+0x2f30],rcx
   0x00000000001d0d76 <+33862>:	mov    DWORD PTR [rsp+0x2f28],eax
   0x00000000001d0d7d <+33869>:	mov    eax,DWORD PTR [rsp+0x2f28]
   0x00000000001d0d84 <+33876>:	mov    rcx,QWORD PTR [rsp+0x2f30]
   0x00000000001d0d8c <+33884>:	mov    rdx,QWORD PTR [rsp+0x2f38]
   0x00000000001d0d94 <+33892>:	mov    rsi,QWORD PTR [rsp+0x2f40]
   0x00000000001d0d9c <+33900>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001d0da4 <+33908>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001d0dac <+33916>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001d0db4 <+33924>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001d0dbb <+33931>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d0dc2 <+33938>:	mov    DWORD PTR [rsp+0x234],ecx
   0x00000000001d0dc9 <+33945>:	mov    eax,0x4ed
   0x00000000001d0dce <+33950>:	cmp    eax,ecx
   0x00000000001d0dd0 <+33952>:	sete   al
   0x00000000001d0dd3 <+33955>:	and    al,0x1
   0x00000000001d0dd5 <+33957>:	test   al,0x1
   0x00000000001d0dd7 <+33959>:	jne    0x1d0de3 <->+33971>
   0x00000000001d0dd9 <+33961>:	jmp    0x1d0e5f <->+34095>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d0dde <+33966>:	jmp    0x1cf0d6 <->+26534>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001d0de3 <+33971>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d0deb <+33979>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d0df3 <+33987>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d0dfb <+33995>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d0e02 <+34002>:	lea    rdi,[rsp+0x1728]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d0e0a <+34010>:	call   0x339d20 <new>
   0x00000000001d0e0f <+34015>:	mov    eax,DWORD PTR [rsp+0x1728]
   0x00000000001d0e16 <+34022>:	mov    rcx,QWORD PTR [rsp+0x1730]
   0x00000000001d0e1e <+34030>:	mov    rdx,QWORD PTR [rsp+0x1738]
   0x00000000001d0e26 <+34038>:	mov    rsi,QWORD PTR [rsp+0x1740]
   0x00000000001d0e2e <+34046>:	mov    QWORD PTR [rsp+0x2ed0],rsi
   0x00000000001d0e36 <+34054>:	mov    QWORD PTR [rsp+0x2ec8],rdx
   0x00000000001d0e3e <+34062>:	mov    QWORD PTR [rsp+0x2ec0],rcx
   0x00000000001d0e46 <+34070>:	mov    DWORD PTR [rsp+0x2eb8],eax
   0x00000000001d0e4d <+34077>:	lea    rax,[rsp+0x2eb8]
   0x00000000001d0e55 <+34085>:	mov    QWORD PTR [rsp+0x228],rax
   0x00000000001d0e5d <+34093>:	jmp    0x1d0e7a <->+34122>
   0x00000000001d0e5f <+34095>:	mov    edi,DWORD PTR [rsp+0x234]
   0x00000000001d0e66 <+34102>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d0e6b <+34107>:	and    al,0x1
   0x00000000001d0e6d <+34109>:	test   al,0x1
   0x00000000001d0e6f <+34111>:	jne    0x1d11f7 <->+35015>
   0x00000000001d0e75 <+34117>:	jmp    0x1d1276 <->+35142>
   0x00000000001d0e7a <+34122>:	mov    rsi,QWORD PTR [rsp+0x228]
   0x00000000001d0e82 <+34130>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d0e84 <+34132>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d0e88 <+34136>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d0e8c <+34140>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d0e90 <+34144>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d0e98 <+34152>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d0ea0 <+34160>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d0ea8 <+34168>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d0eaf <+34175>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d0eb6 <+34182>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d0ebe <+34190>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d0ec6 <+34198>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d0ece <+34206>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d0ed6 <+34214>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d0ede <+34222>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d0ee6 <+34230>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d0eed <+34237>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d0ef5 <+34245>:	mov    QWORD PTR [rsp+0x210],rax
   0x00000000001d0efd <+34253>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d0f05 <+34261>:	mov    QWORD PTR [rsp+0x218],rax
   0x00000000001d0f0d <+34269>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d0f15 <+34277>:	mov    QWORD PTR [rsp+0x220],rax
   0x00000000001d0f1d <+34285>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d0f25 <+34293>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d0f2d <+34301>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d0f35 <+34309>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d0f3c <+34316>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d0f44 <+34324>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d0f4c <+34332>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d0f54 <+34340>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d0f5c <+34348>:	mov    rax,rsp
   0x00000000001d0f5f <+34351>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d0f63 <+34355>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d0f67 <+34359>:	mov    QWORD PTR [rax],rdi
   0x00000000001d0f6a <+34362>:	lea    rdi,[rsp+0x1708]
   0x00000000001d0f72 <+34370>:	call   0x511190 <resolve_getattr>
   0x00000000001d0f77 <+34375>:	mov    rsi,QWORD PTR [rsp+0x210]
   0x00000000001d0f7f <+34383>:	mov    rdx,QWORD PTR [rsp+0x218]
   0x00000000001d0f87 <+34391>:	mov    rcx,QWORD PTR [rsp+0x220]
   0x00000000001d0f8f <+34399>:	mov    eax,DWORD PTR [rsp+0x1708]
   0x00000000001d0f96 <+34406>:	mov    rdi,QWORD PTR [rsp+0x1710]
   0x00000000001d0f9e <+34414>:	mov    r8,QWORD PTR [rsp+0x1718]
   0x00000000001d0fa6 <+34422>:	mov    r9,QWORD PTR [rsp+0x1720]
   0x00000000001d0fae <+34430>:	mov    QWORD PTR [rsp+0x2e70],r9
   0x00000000001d0fb6 <+34438>:	mov    QWORD PTR [rsp+0x2e68],r8
   0x00000000001d0fbe <+34446>:	mov    QWORD PTR [rsp+0x2e60],rdi
   0x00000000001d0fc6 <+34454>:	mov    DWORD PTR [rsp+0x2e58],eax
   0x00000000001d0fcd <+34461>:	mov    r9,QWORD PTR [rsp+0x2e60]
   0x00000000001d0fd5 <+34469>:	mov    r8d,DWORD PTR [rsp+0x2e58]
   0x00000000001d0fdd <+34477>:	mov    rdi,QWORD PTR [rsp+0x2e68]
   0x00000000001d0fe5 <+34485>:	mov    r10,QWORD PTR [rsp+0x2e70]
   0x00000000001d0fed <+34493>:	mov    rax,rsp
   0x00000000001d0ff0 <+34496>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d0ff4 <+34500>:	mov    QWORD PTR [rax],rdi
   0x00000000001d0ff7 <+34503>:	lea    rdi,[rsp+0x16c0]
   0x00000000001d0fff <+34511>:	call   0x4bd1f0 <new:target>
   0x00000000001d1004 <+34516>:	mov    rax,QWORD PTR [rsp+0x16c0]
   0x00000000001d100c <+34524>:	mov    ecx,DWORD PTR [rsp+0x16c8]
   0x00000000001d1013 <+34531>:	mov    rdx,QWORD PTR [rsp+0x16d0]
   0x00000000001d101b <+34539>:	mov    rsi,QWORD PTR [rsp+0x16d8]
   0x00000000001d1023 <+34547>:	mov    rdi,QWORD PTR [rsp+0x16e0]
   0x00000000001d102b <+34555>:	mov    r8,QWORD PTR [rsp+0x16e8]
   0x00000000001d1033 <+34563>:	mov    r9,QWORD PTR [rsp+0x16f0]
   0x00000000001d103b <+34571>:	mov    r10,QWORD PTR [rsp+0x16f8]
   0x00000000001d1043 <+34579>:	mov    r11,QWORD PTR [rsp+0x1700]
   0x00000000001d104b <+34587>:	mov    QWORD PTR [rsp+0x2e50],r11
   0x00000000001d1053 <+34595>:	mov    QWORD PTR [rsp+0x2e48],r10
   0x00000000001d105b <+34603>:	mov    QWORD PTR [rsp+0x2e40],r9
   0x00000000001d1063 <+34611>:	mov    QWORD PTR [rsp+0x2e38],r8
   0x00000000001d106b <+34619>:	mov    QWORD PTR [rsp+0x2e30],rdi
   0x00000000001d1073 <+34627>:	mov    QWORD PTR [rsp+0x2e28],rsi
   0x00000000001d107b <+34635>:	mov    QWORD PTR [rsp+0x2e20],rdx
   0x00000000001d1083 <+34643>:	mov    DWORD PTR [rsp+0x2e18],ecx
   0x00000000001d108a <+34650>:	mov    QWORD PTR [rsp+0x2e10],rax
   0x00000000001d1092 <+34658>:	mov    rax,QWORD PTR [rsp+0x2e10]
   0x00000000001d109a <+34666>:	mov    ecx,DWORD PTR [rsp+0x2e18]
   0x00000000001d10a1 <+34673>:	mov    rdx,QWORD PTR [rsp+0x2e20]
   0x00000000001d10a9 <+34681>:	mov    rsi,QWORD PTR [rsp+0x2e28]
   0x00000000001d10b1 <+34689>:	mov    rdi,QWORD PTR [rsp+0x2e30]
   0x00000000001d10b9 <+34697>:	mov    r8,QWORD PTR [rsp+0x2e38]
   0x00000000001d10c1 <+34705>:	mov    r9,QWORD PTR [rsp+0x2e40]
   0x00000000001d10c9 <+34713>:	mov    r10,QWORD PTR [rsp+0x2e48]
   0x00000000001d10d1 <+34721>:	mov    r11,QWORD PTR [rsp+0x2e50]
   0x00000000001d10d9 <+34729>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d10e1 <+34737>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d10e9 <+34745>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d10f1 <+34753>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d10f9 <+34761>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d1101 <+34769>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d1109 <+34777>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d1111 <+34785>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d1118 <+34792>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d1120 <+34800>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d1128 <+34808>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d1130 <+34816>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d1138 <+34824>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d1140 <+34832>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d1148 <+34840>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d1150 <+34848>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d1158 <+34856>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d1160 <+34864>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d1168 <+34872>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d1170 <+34880>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d1178 <+34888>:	mov    rax,rsp
   0x00000000001d117b <+34891>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d117f <+34895>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d1183 <+34899>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d1187 <+34903>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d118b <+34907>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d118f <+34911>:	mov    QWORD PTR [rax],rdi
   0x00000000001d1192 <+34914>:	lea    rdi,[rsp+0x16a0]
   0x00000000001d119a <+34922>:	call   0x3ae5e0 <execute_call>
   0x00000000001d119f <+34927>:	mov    eax,DWORD PTR [rsp+0x16a0]
   0x00000000001d11a6 <+34934>:	mov    rcx,QWORD PTR [rsp+0x16a8]
   0x00000000001d11ae <+34942>:	mov    rdx,QWORD PTR [rsp+0x16b0]
   0x00000000001d11b6 <+34950>:	mov    rsi,QWORD PTR [rsp+0x16b8]
   0x00000000001d11be <+34958>:	mov    QWORD PTR [rsp+0x2e08],rsi
   0x00000000001d11c6 <+34966>:	mov    QWORD PTR [rsp+0x2e00],rdx
   0x00000000001d11ce <+34974>:	mov    QWORD PTR [rsp+0x2df8],rcx
   0x00000000001d11d6 <+34982>:	mov    DWORD PTR [rsp+0x2df0],eax
   0x00000000001d11dd <+34989>:	lea    rdi,[rsp+0x2df0]
   0x00000000001d11e5 <+34997>:	call   0x343280 <truthy?>
   0x00000000001d11ea <+35002>:	test   al,0x1
   0x00000000001d11ec <+35004>:	jne    0x1d1314 <->+35300>
   0x00000000001d11f2 <+35010>:	jmp    0x1d1342 <->+35346>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d11f7 <+35015>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d11ff <+35023>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d1207 <+35031>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d120f <+35039>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d1216 <+35046>:	lea    rdi,[rsp+0x1748]
   0x00000000001d121e <+35054>:	call   0x340b10 <new>
   0x00000000001d1223 <+35059>:	mov    eax,DWORD PTR [rsp+0x1748]
   0x00000000001d122a <+35066>:	mov    rcx,QWORD PTR [rsp+0x1750]
   0x00000000001d1232 <+35074>:	mov    rdx,QWORD PTR [rsp+0x1758]
   0x00000000001d123a <+35082>:	mov    rsi,QWORD PTR [rsp+0x1760]
   0x00000000001d1242 <+35090>:	mov    QWORD PTR [rsp+0x2eb0],rsi
   0x00000000001d124a <+35098>:	mov    QWORD PTR [rsp+0x2ea8],rdx
   0x00000000001d1252 <+35106>:	mov    QWORD PTR [rsp+0x2ea0],rcx
   0x00000000001d125a <+35114>:	mov    DWORD PTR [rsp+0x2e98],eax
   0x00000000001d1261 <+35121>:	lea    rax,[rsp+0x2e98]
   0x00000000001d1269 <+35129>:	mov    QWORD PTR [rsp+0x228],rax
   0x00000000001d1271 <+35137>:	jmp    0x1d0e7a <->+34122>
   0x00000000001d1276 <+35142>:	mov    edi,DWORD PTR [rsp+0x234]
   0x00000000001d127d <+35149>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d1282 <+35154>:	and    al,0x1
   0x00000000001d1284 <+35156>:	test   al,0x1
   0x00000000001d1286 <+35158>:	jne    0x1d128d <->+35165>
   0x00000000001d1288 <+35160>:	jmp    0x1d1314 <->+35300>
   0x00000000001d128d <+35165>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d1295 <+35173>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d129d <+35181>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d12a5 <+35189>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d12ad <+35197>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d12b4 <+35204>:	lea    rdi,[rsp+0x1768]
   0x00000000001d12bc <+35212>:	call   0x340cb0 <new>
   0x00000000001d12c1 <+35217>:	mov    eax,DWORD PTR [rsp+0x1768]
   0x00000000001d12c8 <+35224>:	mov    rcx,QWORD PTR [rsp+0x1770]
   0x00000000001d12d0 <+35232>:	mov    rdx,QWORD PTR [rsp+0x1778]
   0x00000000001d12d8 <+35240>:	mov    rsi,QWORD PTR [rsp+0x1780]
   0x00000000001d12e0 <+35248>:	mov    QWORD PTR [rsp+0x2e90],rsi
   0x00000000001d12e8 <+35256>:	mov    QWORD PTR [rsp+0x2e88],rdx
   0x00000000001d12f0 <+35264>:	mov    QWORD PTR [rsp+0x2e80],rcx
   0x00000000001d12f8 <+35272>:	mov    DWORD PTR [rsp+0x2e78],eax
   0x00000000001d12ff <+35279>:	lea    rax,[rsp+0x2e78]
   0x00000000001d1307 <+35287>:	mov    QWORD PTR [rsp+0x228],rax
   0x00000000001d130f <+35295>:	jmp    0x1d0e7a <->+34122>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d1314 <+35300>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d131c <+35308>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d1324 <+35316>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d132c <+35324>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d1334 <+35332>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d133b <+35339>:	call   0x326080 <<<>
   0x00000000001d1340 <+35344>:	jmp    0x1d1344 <->+35348>
   0x00000000001d1342 <+35346>:	jmp    0x1d1344 <->+35348>
   0x00000000001d1344 <+35348>:	jmp    0x1d0c7b <->+33611>
   0x00000000001d1349 <+35353>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d1351 <+35361>:	mov    QWORD PTR [rsp+0x208],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001d1359 <+35369>:	jmp    0x1d1374 <->+35396>
   0x00000000001d135b <+35371>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d1362 <+35378>:	mov    eax,0xb6
   0x00000000001d1367 <+35383>:	cmp    eax,ecx
   0x00000000001d1369 <+35385>:	je     0x1d1a42 <->+37138>
   0x00000000001d136f <+35391>:	jmp    0x1d1a54 <->+37156>
   0x00000000001d1374 <+35396>:	mov    rsi,QWORD PTR [rsp+0x208]
   0x00000000001d137c <+35404>:	lea    rdi,[rsp+0x1898]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d1384 <+35412>:	call   0x362700 <next>
   0x00000000001d1389 <+35417>:	mov    eax,DWORD PTR [rsp+0x1898]
   0x00000000001d1390 <+35424>:	mov    rcx,QWORD PTR [rsp+0x18a0]
   0x00000000001d1398 <+35432>:	mov    rdx,QWORD PTR [rsp+0x18a8]
   0x00000000001d13a0 <+35440>:	mov    rsi,QWORD PTR [rsp+0x18b0]
   0x00000000001d13a8 <+35448>:	mov    rdi,QWORD PTR [rsp+0x18b8]
   0x00000000001d13b0 <+35456>:	mov    QWORD PTR [rsp+0x2da0],rdi
   0x00000000001d13b8 <+35464>:	mov    QWORD PTR [rsp+0x2d98],rsi
   0x00000000001d13c0 <+35472>:	mov    QWORD PTR [rsp+0x2d90],rdx
   0x00000000001d13c8 <+35480>:	mov    QWORD PTR [rsp+0x2d88],rcx
   0x00000000001d13d0 <+35488>:	mov    DWORD PTR [rsp+0x2d80],eax
   0x00000000001d13d7 <+35495>:	mov    eax,DWORD PTR [rsp+0x2d80]
   0x00000000001d13de <+35502>:	mov    rcx,QWORD PTR [rsp+0x2d88]
   0x00000000001d13e6 <+35510>:	mov    rdx,QWORD PTR [rsp+0x2d90]
   0x00000000001d13ee <+35518>:	mov    rsi,QWORD PTR [rsp+0x2d98]
   0x00000000001d13f6 <+35526>:	mov    rdi,QWORD PTR [rsp+0x2da0]
   0x00000000001d13fe <+35534>:	mov    QWORD PTR [rsp+0x2dc8],rdi
   0x00000000001d1406 <+35542>:	mov    QWORD PTR [rsp+0x2dc0],rsi
   0x00000000001d140e <+35550>:	mov    QWORD PTR [rsp+0x2db8],rdx
   0x00000000001d1416 <+35558>:	mov    QWORD PTR [rsp+0x2db0],rcx
   0x00000000001d141e <+35566>:	mov    DWORD PTR [rsp+0x2da8],eax

637	      break if value.is_a?(Stop)
   0x00000000001d1425 <+35573>:	mov    eax,0xa3
   0x00000000001d142a <+35578>:	cmp    eax,DWORD PTR [rsp+0x2da8]
   0x00000000001d1431 <+35585>:	jne    0x1d1438 <->+35592>
   0x00000000001d1433 <+35587>:	jmp    0x1d14d7 <->+35751>
   0x00000000001d1438 <+35592>:	mov    eax,DWORD PTR [rsp+0x2db0]
   0x00000000001d143f <+35599>:	mov    rcx,QWORD PTR [rsp+0x2db8]
   0x00000000001d1447 <+35607>:	mov    rdx,QWORD PTR [rsp+0x2dc0]
   0x00000000001d144f <+35615>:	mov    rsi,QWORD PTR [rsp+0x2dc8]
   0x00000000001d1457 <+35623>:	mov    QWORD PTR [rsp+0x2de8],rsi
   0x00000000001d145f <+35631>:	mov    QWORD PTR [rsp+0x2de0],rdx
   0x00000000001d1467 <+35639>:	mov    QWORD PTR [rsp+0x2dd8],rcx
   0x00000000001d146f <+35647>:	mov    DWORD PTR [rsp+0x2dd0],eax
   0x00000000001d1476 <+35654>:	mov    eax,DWORD PTR [rsp+0x2dd0]
   0x00000000001d147d <+35661>:	mov    rcx,QWORD PTR [rsp+0x2dd8]
   0x00000000001d1485 <+35669>:	mov    rdx,QWORD PTR [rsp+0x2de0]
   0x00000000001d148d <+35677>:	mov    rsi,QWORD PTR [rsp+0x2de8]
   0x00000000001d1495 <+35685>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001d149d <+35693>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001d14a5 <+35701>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001d14ad <+35709>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001d14b4 <+35716>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d14bb <+35723>:	mov    DWORD PTR [rsp+0x204],ecx
   0x00000000001d14c2 <+35730>:	mov    eax,0x4ed
   0x00000000001d14c7 <+35735>:	cmp    eax,ecx
   0x00000000001d14c9 <+35737>:	sete   al
   0x00000000001d14cc <+35740>:	and    al,0x1
   0x00000000001d14ce <+35742>:	test   al,0x1
   0x00000000001d14d0 <+35744>:	jne    0x1d14dc <->+35756>
   0x00000000001d14d2 <+35746>:	jmp    0x1d1558 <->+35880>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d14d7 <+35751>:	jmp    0x1cf0d6 <->+26534>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001d14dc <+35756>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d14e4 <+35764>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d14ec <+35772>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d14f4 <+35780>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d14fb <+35787>:	lea    rdi,[rsp+0x1838]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d1503 <+35795>:	call   0x339d20 <new>
   0x00000000001d1508 <+35800>:	mov    eax,DWORD PTR [rsp+0x1838]
   0x00000000001d150f <+35807>:	mov    rcx,QWORD PTR [rsp+0x1840]
   0x00000000001d1517 <+35815>:	mov    rdx,QWORD PTR [rsp+0x1848]
   0x00000000001d151f <+35823>:	mov    rsi,QWORD PTR [rsp+0x1850]
   0x00000000001d1527 <+35831>:	mov    QWORD PTR [rsp+0x2d78],rsi
   0x00000000001d152f <+35839>:	mov    QWORD PTR [rsp+0x2d70],rdx
   0x00000000001d1537 <+35847>:	mov    QWORD PTR [rsp+0x2d68],rcx
   0x00000000001d153f <+35855>:	mov    DWORD PTR [rsp+0x2d60],eax
   0x00000000001d1546 <+35862>:	lea    rax,[rsp+0x2d60]
   0x00000000001d154e <+35870>:	mov    QWORD PTR [rsp+0x1f8],rax
   0x00000000001d1556 <+35878>:	jmp    0x1d1573 <->+35907>
   0x00000000001d1558 <+35880>:	mov    edi,DWORD PTR [rsp+0x204]
   0x00000000001d155f <+35887>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d1564 <+35892>:	and    al,0x1
   0x00000000001d1566 <+35894>:	test   al,0x1
   0x00000000001d1568 <+35896>:	jne    0x1d18f0 <->+36800>
   0x00000000001d156e <+35902>:	jmp    0x1d196f <->+36927>
   0x00000000001d1573 <+35907>:	mov    rsi,QWORD PTR [rsp+0x1f8]
   0x00000000001d157b <+35915>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d157d <+35917>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d1581 <+35921>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d1585 <+35925>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d1589 <+35929>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d1591 <+35937>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d1599 <+35945>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d15a1 <+35953>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d15a8 <+35960>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d15af <+35967>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d15b7 <+35975>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d15bf <+35983>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d15c7 <+35991>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d15cf <+35999>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d15d7 <+36007>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d15df <+36015>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d15e6 <+36022>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d15ee <+36030>:	mov    QWORD PTR [rsp+0x1e0],rax
   0x00000000001d15f6 <+36038>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d15fe <+36046>:	mov    QWORD PTR [rsp+0x1e8],rax
   0x00000000001d1606 <+36054>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d160e <+36062>:	mov    QWORD PTR [rsp+0x1f0],rax
   0x00000000001d1616 <+36070>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d161e <+36078>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d1626 <+36086>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d162e <+36094>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d1635 <+36101>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d163d <+36109>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d1645 <+36117>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d164d <+36125>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d1655 <+36133>:	mov    rax,rsp
   0x00000000001d1658 <+36136>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d165c <+36140>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d1660 <+36144>:	mov    QWORD PTR [rax],rdi
   0x00000000001d1663 <+36147>:	lea    rdi,[rsp+0x1818]
   0x00000000001d166b <+36155>:	call   0x511190 <resolve_getattr>
   0x00000000001d1670 <+36160>:	mov    rsi,QWORD PTR [rsp+0x1e0]
   0x00000000001d1678 <+36168>:	mov    rdx,QWORD PTR [rsp+0x1e8]
   0x00000000001d1680 <+36176>:	mov    rcx,QWORD PTR [rsp+0x1f0]
   0x00000000001d1688 <+36184>:	mov    eax,DWORD PTR [rsp+0x1818]
   0x00000000001d168f <+36191>:	mov    rdi,QWORD PTR [rsp+0x1820]
   0x00000000001d1697 <+36199>:	mov    r8,QWORD PTR [rsp+0x1828]
   0x00000000001d169f <+36207>:	mov    r9,QWORD PTR [rsp+0x1830]
   0x00000000001d16a7 <+36215>:	mov    QWORD PTR [rsp+0x2d18],r9
   0x00000000001d16af <+36223>:	mov    QWORD PTR [rsp+0x2d10],r8
   0x00000000001d16b7 <+36231>:	mov    QWORD PTR [rsp+0x2d08],rdi
   0x00000000001d16bf <+36239>:	mov    DWORD PTR [rsp+0x2d00],eax
   0x00000000001d16c6 <+36246>:	mov    r9,QWORD PTR [rsp+0x2d08]
   0x00000000001d16ce <+36254>:	mov    r8d,DWORD PTR [rsp+0x2d00]
   0x00000000001d16d6 <+36262>:	mov    rdi,QWORD PTR [rsp+0x2d10]
   0x00000000001d16de <+36270>:	mov    r10,QWORD PTR [rsp+0x2d18]
   0x00000000001d16e6 <+36278>:	mov    rax,rsp
   0x00000000001d16e9 <+36281>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d16ed <+36285>:	mov    QWORD PTR [rax],rdi
   0x00000000001d16f0 <+36288>:	lea    rdi,[rsp+0x17d0]
   0x00000000001d16f8 <+36296>:	call   0x4bd1f0 <new:target>
   0x00000000001d16fd <+36301>:	mov    rax,QWORD PTR [rsp+0x17d0]
   0x00000000001d1705 <+36309>:	mov    ecx,DWORD PTR [rsp+0x17d8]
   0x00000000001d170c <+36316>:	mov    rdx,QWORD PTR [rsp+0x17e0]
   0x00000000001d1714 <+36324>:	mov    rsi,QWORD PTR [rsp+0x17e8]
   0x00000000001d171c <+36332>:	mov    rdi,QWORD PTR [rsp+0x17f0]
   0x00000000001d1724 <+36340>:	mov    r8,QWORD PTR [rsp+0x17f8]
   0x00000000001d172c <+36348>:	mov    r9,QWORD PTR [rsp+0x1800]
   0x00000000001d1734 <+36356>:	mov    r10,QWORD PTR [rsp+0x1808]
   0x00000000001d173c <+36364>:	mov    r11,QWORD PTR [rsp+0x1810]
   0x00000000001d1744 <+36372>:	mov    QWORD PTR [rsp+0x2cf8],r11
   0x00000000001d174c <+36380>:	mov    QWORD PTR [rsp+0x2cf0],r10
   0x00000000001d1754 <+36388>:	mov    QWORD PTR [rsp+0x2ce8],r9
   0x00000000001d175c <+36396>:	mov    QWORD PTR [rsp+0x2ce0],r8
   0x00000000001d1764 <+36404>:	mov    QWORD PTR [rsp+0x2cd8],rdi
   0x00000000001d176c <+36412>:	mov    QWORD PTR [rsp+0x2cd0],rsi
   0x00000000001d1774 <+36420>:	mov    QWORD PTR [rsp+0x2cc8],rdx
   0x00000000001d177c <+36428>:	mov    DWORD PTR [rsp+0x2cc0],ecx
   0x00000000001d1783 <+36435>:	mov    QWORD PTR [rsp+0x2cb8],rax
   0x00000000001d178b <+36443>:	mov    rax,QWORD PTR [rsp+0x2cb8]
   0x00000000001d1793 <+36451>:	mov    ecx,DWORD PTR [rsp+0x2cc0]
   0x00000000001d179a <+36458>:	mov    rdx,QWORD PTR [rsp+0x2cc8]
   0x00000000001d17a2 <+36466>:	mov    rsi,QWORD PTR [rsp+0x2cd0]
   0x00000000001d17aa <+36474>:	mov    rdi,QWORD PTR [rsp+0x2cd8]
   0x00000000001d17b2 <+36482>:	mov    r8,QWORD PTR [rsp+0x2ce0]
   0x00000000001d17ba <+36490>:	mov    r9,QWORD PTR [rsp+0x2ce8]
   0x00000000001d17c2 <+36498>:	mov    r10,QWORD PTR [rsp+0x2cf0]
   0x00000000001d17ca <+36506>:	mov    r11,QWORD PTR [rsp+0x2cf8]
   0x00000000001d17d2 <+36514>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d17da <+36522>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d17e2 <+36530>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d17ea <+36538>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d17f2 <+36546>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d17fa <+36554>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d1802 <+36562>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d180a <+36570>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d1811 <+36577>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d1819 <+36585>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d1821 <+36593>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d1829 <+36601>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d1831 <+36609>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d1839 <+36617>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d1841 <+36625>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d1849 <+36633>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d1851 <+36641>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d1859 <+36649>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d1861 <+36657>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d1869 <+36665>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d1871 <+36673>:	mov    rax,rsp
   0x00000000001d1874 <+36676>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d1878 <+36680>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d187c <+36684>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d1880 <+36688>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d1884 <+36692>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d1888 <+36696>:	mov    QWORD PTR [rax],rdi
   0x00000000001d188b <+36699>:	lea    rdi,[rsp+0x17b0]
   0x00000000001d1893 <+36707>:	call   0x3ae5e0 <execute_call>
   0x00000000001d1898 <+36712>:	mov    eax,DWORD PTR [rsp+0x17b0]
   0x00000000001d189f <+36719>:	mov    rcx,QWORD PTR [rsp+0x17b8]
   0x00000000001d18a7 <+36727>:	mov    rdx,QWORD PTR [rsp+0x17c0]
   0x00000000001d18af <+36735>:	mov    rsi,QWORD PTR [rsp+0x17c8]
   0x00000000001d18b7 <+36743>:	mov    QWORD PTR [rsp+0x2cb0],rsi
   0x00000000001d18bf <+36751>:	mov    QWORD PTR [rsp+0x2ca8],rdx
   0x00000000001d18c7 <+36759>:	mov    QWORD PTR [rsp+0x2ca0],rcx
   0x00000000001d18cf <+36767>:	mov    DWORD PTR [rsp+0x2c98],eax
   0x00000000001d18d6 <+36774>:	lea    rdi,[rsp+0x2c98]
   0x00000000001d18de <+36782>:	call   0x343280 <truthy?>
   0x00000000001d18e3 <+36787>:	test   al,0x1
   0x00000000001d18e5 <+36789>:	jne    0x1d1a0d <->+37085>
   0x00000000001d18eb <+36795>:	jmp    0x1d1a3b <->+37131>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d18f0 <+36800>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d18f8 <+36808>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d1900 <+36816>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d1908 <+36824>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d190f <+36831>:	lea    rdi,[rsp+0x1858]
   0x00000000001d1917 <+36839>:	call   0x340b10 <new>
   0x00000000001d191c <+36844>:	mov    eax,DWORD PTR [rsp+0x1858]
   0x00000000001d1923 <+36851>:	mov    rcx,QWORD PTR [rsp+0x1860]
   0x00000000001d192b <+36859>:	mov    rdx,QWORD PTR [rsp+0x1868]
   0x00000000001d1933 <+36867>:	mov    rsi,QWORD PTR [rsp+0x1870]
   0x00000000001d193b <+36875>:	mov    QWORD PTR [rsp+0x2d58],rsi
   0x00000000001d1943 <+36883>:	mov    QWORD PTR [rsp+0x2d50],rdx
   0x00000000001d194b <+36891>:	mov    QWORD PTR [rsp+0x2d48],rcx
   0x00000000001d1953 <+36899>:	mov    DWORD PTR [rsp+0x2d40],eax
   0x00000000001d195a <+36906>:	lea    rax,[rsp+0x2d40]
   0x00000000001d1962 <+36914>:	mov    QWORD PTR [rsp+0x1f8],rax
   0x00000000001d196a <+36922>:	jmp    0x1d1573 <->+35907>
   0x00000000001d196f <+36927>:	mov    edi,DWORD PTR [rsp+0x204]
   0x00000000001d1976 <+36934>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d197b <+36939>:	and    al,0x1
   0x00000000001d197d <+36941>:	test   al,0x1
   0x00000000001d197f <+36943>:	jne    0x1d1986 <->+36950>
   0x00000000001d1981 <+36945>:	jmp    0x1d1a0d <->+37085>
   0x00000000001d1986 <+36950>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d198e <+36958>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d1996 <+36966>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d199e <+36974>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d19a6 <+36982>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d19ad <+36989>:	lea    rdi,[rsp+0x1878]
   0x00000000001d19b5 <+36997>:	call   0x340cb0 <new>
   0x00000000001d19ba <+37002>:	mov    eax,DWORD PTR [rsp+0x1878]
   0x00000000001d19c1 <+37009>:	mov    rcx,QWORD PTR [rsp+0x1880]
   0x00000000001d19c9 <+37017>:	mov    rdx,QWORD PTR [rsp+0x1888]
   0x00000000001d19d1 <+37025>:	mov    rsi,QWORD PTR [rsp+0x1890]
   0x00000000001d19d9 <+37033>:	mov    QWORD PTR [rsp+0x2d38],rsi
   0x00000000001d19e1 <+37041>:	mov    QWORD PTR [rsp+0x2d30],rdx
   0x00000000001d19e9 <+37049>:	mov    QWORD PTR [rsp+0x2d28],rcx
   0x00000000001d19f1 <+37057>:	mov    DWORD PTR [rsp+0x2d20],eax
   0x00000000001d19f8 <+37064>:	lea    rax,[rsp+0x2d20]
   0x00000000001d1a00 <+37072>:	mov    QWORD PTR [rsp+0x1f8],rax
   0x00000000001d1a08 <+37080>:	jmp    0x1d1573 <->+35907>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d1a0d <+37085>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d1a15 <+37093>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d1a1d <+37101>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d1a25 <+37109>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d1a2d <+37117>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d1a34 <+37124>:	call   0x326080 <<<>
   0x00000000001d1a39 <+37129>:	jmp    0x1d1a3d <->+37133>
   0x00000000001d1a3b <+37131>:	jmp    0x1d1a3d <->+37133>
   0x00000000001d1a3d <+37133>:	jmp    0x1d1374 <->+35396>
   0x00000000001d1a42 <+37138>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d1a4a <+37146>:	mov    QWORD PTR [rsp+0x1d8],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001d1a52 <+37154>:	jmp    0x1d1a6d <->+37181>
   0x00000000001d1a54 <+37156>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d1a5b <+37163>:	mov    eax,0xb7
   0x00000000001d1a60 <+37168>:	cmp    eax,ecx
   0x00000000001d1a62 <+37170>:	je     0x1d213b <->+38923>
   0x00000000001d1a68 <+37176>:	jmp    0x1d214d <->+38941>
   0x00000000001d1a6d <+37181>:	mov    rsi,QWORD PTR [rsp+0x1d8]
   0x00000000001d1a75 <+37189>:	lea    rdi,[rsp+0x19a8]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d1a7d <+37197>:	call   0x363cf0 <next>
   0x00000000001d1a82 <+37202>:	mov    eax,DWORD PTR [rsp+0x19a8]
   0x00000000001d1a89 <+37209>:	mov    rcx,QWORD PTR [rsp+0x19b0]
   0x00000000001d1a91 <+37217>:	mov    rdx,QWORD PTR [rsp+0x19b8]
   0x00000000001d1a99 <+37225>:	mov    rsi,QWORD PTR [rsp+0x19c0]
   0x00000000001d1aa1 <+37233>:	mov    rdi,QWORD PTR [rsp+0x19c8]
   0x00000000001d1aa9 <+37241>:	mov    QWORD PTR [rsp+0x2c48],rdi
   0x00000000001d1ab1 <+37249>:	mov    QWORD PTR [rsp+0x2c40],rsi
   0x00000000001d1ab9 <+37257>:	mov    QWORD PTR [rsp+0x2c38],rdx
   0x00000000001d1ac1 <+37265>:	mov    QWORD PTR [rsp+0x2c30],rcx
   0x00000000001d1ac9 <+37273>:	mov    DWORD PTR [rsp+0x2c28],eax
   0x00000000001d1ad0 <+37280>:	mov    eax,DWORD PTR [rsp+0x2c28]
   0x00000000001d1ad7 <+37287>:	mov    rcx,QWORD PTR [rsp+0x2c30]
   0x00000000001d1adf <+37295>:	mov    rdx,QWORD PTR [rsp+0x2c38]
   0x00000000001d1ae7 <+37303>:	mov    rsi,QWORD PTR [rsp+0x2c40]
   0x00000000001d1aef <+37311>:	mov    rdi,QWORD PTR [rsp+0x2c48]
   0x00000000001d1af7 <+37319>:	mov    QWORD PTR [rsp+0x2c70],rdi
   0x00000000001d1aff <+37327>:	mov    QWORD PTR [rsp+0x2c68],rsi
   0x00000000001d1b07 <+37335>:	mov    QWORD PTR [rsp+0x2c60],rdx
   0x00000000001d1b0f <+37343>:	mov    QWORD PTR [rsp+0x2c58],rcx
   0x00000000001d1b17 <+37351>:	mov    DWORD PTR [rsp+0x2c50],eax

637	      break if value.is_a?(Stop)
   0x00000000001d1b1e <+37358>:	mov    eax,0xa3
   0x00000000001d1b23 <+37363>:	cmp    eax,DWORD PTR [rsp+0x2c50]
   0x00000000001d1b2a <+37370>:	jne    0x1d1b31 <->+37377>
   0x00000000001d1b2c <+37372>:	jmp    0x1d1bd0 <->+37536>
   0x00000000001d1b31 <+37377>:	mov    eax,DWORD PTR [rsp+0x2c58]
   0x00000000001d1b38 <+37384>:	mov    rcx,QWORD PTR [rsp+0x2c60]
   0x00000000001d1b40 <+37392>:	mov    rdx,QWORD PTR [rsp+0x2c68]
   0x00000000001d1b48 <+37400>:	mov    rsi,QWORD PTR [rsp+0x2c70]
   0x00000000001d1b50 <+37408>:	mov    QWORD PTR [rsp+0x2c90],rsi
   0x00000000001d1b58 <+37416>:	mov    QWORD PTR [rsp+0x2c88],rdx
   0x00000000001d1b60 <+37424>:	mov    QWORD PTR [rsp+0x2c80],rcx
   0x00000000001d1b68 <+37432>:	mov    DWORD PTR [rsp+0x2c78],eax
   0x00000000001d1b6f <+37439>:	mov    eax,DWORD PTR [rsp+0x2c78]
   0x00000000001d1b76 <+37446>:	mov    rcx,QWORD PTR [rsp+0x2c80]
   0x00000000001d1b7e <+37454>:	mov    rdx,QWORD PTR [rsp+0x2c88]
   0x00000000001d1b86 <+37462>:	mov    rsi,QWORD PTR [rsp+0x2c90]
   0x00000000001d1b8e <+37470>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001d1b96 <+37478>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001d1b9e <+37486>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001d1ba6 <+37494>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001d1bad <+37501>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d1bb4 <+37508>:	mov    DWORD PTR [rsp+0x1d4],ecx
   0x00000000001d1bbb <+37515>:	mov    eax,0x4ed
   0x00000000001d1bc0 <+37520>:	cmp    eax,ecx
   0x00000000001d1bc2 <+37522>:	sete   al
   0x00000000001d1bc5 <+37525>:	and    al,0x1
   0x00000000001d1bc7 <+37527>:	test   al,0x1
   0x00000000001d1bc9 <+37529>:	jne    0x1d1bd5 <->+37541>
   0x00000000001d1bcb <+37531>:	jmp    0x1d1c51 <->+37665>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d1bd0 <+37536>:	jmp    0x1cf0d6 <->+26534>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001d1bd5 <+37541>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d1bdd <+37549>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d1be5 <+37557>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d1bed <+37565>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d1bf4 <+37572>:	lea    rdi,[rsp+0x1948]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d1bfc <+37580>:	call   0x339d20 <new>
   0x00000000001d1c01 <+37585>:	mov    eax,DWORD PTR [rsp+0x1948]
   0x00000000001d1c08 <+37592>:	mov    rcx,QWORD PTR [rsp+0x1950]
   0x00000000001d1c10 <+37600>:	mov    rdx,QWORD PTR [rsp+0x1958]
   0x00000000001d1c18 <+37608>:	mov    rsi,QWORD PTR [rsp+0x1960]
   0x00000000001d1c20 <+37616>:	mov    QWORD PTR [rsp+0x2c20],rsi
   0x00000000001d1c28 <+37624>:	mov    QWORD PTR [rsp+0x2c18],rdx
   0x00000000001d1c30 <+37632>:	mov    QWORD PTR [rsp+0x2c10],rcx
   0x00000000001d1c38 <+37640>:	mov    DWORD PTR [rsp+0x2c08],eax
   0x00000000001d1c3f <+37647>:	lea    rax,[rsp+0x2c08]
   0x00000000001d1c47 <+37655>:	mov    QWORD PTR [rsp+0x1c8],rax
   0x00000000001d1c4f <+37663>:	jmp    0x1d1c6c <->+37692>
   0x00000000001d1c51 <+37665>:	mov    edi,DWORD PTR [rsp+0x1d4]
   0x00000000001d1c58 <+37672>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d1c5d <+37677>:	and    al,0x1
   0x00000000001d1c5f <+37679>:	test   al,0x1
   0x00000000001d1c61 <+37681>:	jne    0x1d1fe9 <->+38585>
   0x00000000001d1c67 <+37687>:	jmp    0x1d2068 <->+38712>
   0x00000000001d1c6c <+37692>:	mov    rsi,QWORD PTR [rsp+0x1c8]
   0x00000000001d1c74 <+37700>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d1c76 <+37702>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d1c7a <+37706>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d1c7e <+37710>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d1c82 <+37714>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d1c8a <+37722>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d1c92 <+37730>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d1c9a <+37738>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d1ca1 <+37745>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d1ca8 <+37752>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d1cb0 <+37760>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d1cb8 <+37768>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d1cc0 <+37776>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d1cc8 <+37784>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d1cd0 <+37792>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d1cd8 <+37800>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d1cdf <+37807>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d1ce7 <+37815>:	mov    QWORD PTR [rsp+0x1b0],rax
   0x00000000001d1cef <+37823>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d1cf7 <+37831>:	mov    QWORD PTR [rsp+0x1b8],rax
   0x00000000001d1cff <+37839>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d1d07 <+37847>:	mov    QWORD PTR [rsp+0x1c0],rax
   0x00000000001d1d0f <+37855>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d1d17 <+37863>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d1d1f <+37871>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d1d27 <+37879>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d1d2e <+37886>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d1d36 <+37894>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d1d3e <+37902>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d1d46 <+37910>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d1d4e <+37918>:	mov    rax,rsp
   0x00000000001d1d51 <+37921>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d1d55 <+37925>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d1d59 <+37929>:	mov    QWORD PTR [rax],rdi
   0x00000000001d1d5c <+37932>:	lea    rdi,[rsp+0x1928]
   0x00000000001d1d64 <+37940>:	call   0x511190 <resolve_getattr>
   0x00000000001d1d69 <+37945>:	mov    rsi,QWORD PTR [rsp+0x1b0]
   0x00000000001d1d71 <+37953>:	mov    rdx,QWORD PTR [rsp+0x1b8]
   0x00000000001d1d79 <+37961>:	mov    rcx,QWORD PTR [rsp+0x1c0]
   0x00000000001d1d81 <+37969>:	mov    eax,DWORD PTR [rsp+0x1928]
   0x00000000001d1d88 <+37976>:	mov    rdi,QWORD PTR [rsp+0x1930]
   0x00000000001d1d90 <+37984>:	mov    r8,QWORD PTR [rsp+0x1938]
   0x00000000001d1d98 <+37992>:	mov    r9,QWORD PTR [rsp+0x1940]
   0x00000000001d1da0 <+38000>:	mov    QWORD PTR [rsp+0x2bc0],r9
   0x00000000001d1da8 <+38008>:	mov    QWORD PTR [rsp+0x2bb8],r8
   0x00000000001d1db0 <+38016>:	mov    QWORD PTR [rsp+0x2bb0],rdi
   0x00000000001d1db8 <+38024>:	mov    DWORD PTR [rsp+0x2ba8],eax
   0x00000000001d1dbf <+38031>:	mov    r9,QWORD PTR [rsp+0x2bb0]
   0x00000000001d1dc7 <+38039>:	mov    r8d,DWORD PTR [rsp+0x2ba8]
   0x00000000001d1dcf <+38047>:	mov    rdi,QWORD PTR [rsp+0x2bb8]
   0x00000000001d1dd7 <+38055>:	mov    r10,QWORD PTR [rsp+0x2bc0]
   0x00000000001d1ddf <+38063>:	mov    rax,rsp
   0x00000000001d1de2 <+38066>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d1de6 <+38070>:	mov    QWORD PTR [rax],rdi
   0x00000000001d1de9 <+38073>:	lea    rdi,[rsp+0x18e0]
   0x00000000001d1df1 <+38081>:	call   0x4bd1f0 <new:target>
   0x00000000001d1df6 <+38086>:	mov    rax,QWORD PTR [rsp+0x18e0]
   0x00000000001d1dfe <+38094>:	mov    ecx,DWORD PTR [rsp+0x18e8]
   0x00000000001d1e05 <+38101>:	mov    rdx,QWORD PTR [rsp+0x18f0]
   0x00000000001d1e0d <+38109>:	mov    rsi,QWORD PTR [rsp+0x18f8]
   0x00000000001d1e15 <+38117>:	mov    rdi,QWORD PTR [rsp+0x1900]
   0x00000000001d1e1d <+38125>:	mov    r8,QWORD PTR [rsp+0x1908]
   0x00000000001d1e25 <+38133>:	mov    r9,QWORD PTR [rsp+0x1910]
   0x00000000001d1e2d <+38141>:	mov    r10,QWORD PTR [rsp+0x1918]
   0x00000000001d1e35 <+38149>:	mov    r11,QWORD PTR [rsp+0x1920]
   0x00000000001d1e3d <+38157>:	mov    QWORD PTR [rsp+0x2ba0],r11
   0x00000000001d1e45 <+38165>:	mov    QWORD PTR [rsp+0x2b98],r10
   0x00000000001d1e4d <+38173>:	mov    QWORD PTR [rsp+0x2b90],r9
   0x00000000001d1e55 <+38181>:	mov    QWORD PTR [rsp+0x2b88],r8
   0x00000000001d1e5d <+38189>:	mov    QWORD PTR [rsp+0x2b80],rdi
   0x00000000001d1e65 <+38197>:	mov    QWORD PTR [rsp+0x2b78],rsi
   0x00000000001d1e6d <+38205>:	mov    QWORD PTR [rsp+0x2b70],rdx
   0x00000000001d1e75 <+38213>:	mov    DWORD PTR [rsp+0x2b68],ecx
   0x00000000001d1e7c <+38220>:	mov    QWORD PTR [rsp+0x2b60],rax
   0x00000000001d1e84 <+38228>:	mov    rax,QWORD PTR [rsp+0x2b60]
   0x00000000001d1e8c <+38236>:	mov    ecx,DWORD PTR [rsp+0x2b68]
   0x00000000001d1e93 <+38243>:	mov    rdx,QWORD PTR [rsp+0x2b70]
   0x00000000001d1e9b <+38251>:	mov    rsi,QWORD PTR [rsp+0x2b78]
   0x00000000001d1ea3 <+38259>:	mov    rdi,QWORD PTR [rsp+0x2b80]
   0x00000000001d1eab <+38267>:	mov    r8,QWORD PTR [rsp+0x2b88]
   0x00000000001d1eb3 <+38275>:	mov    r9,QWORD PTR [rsp+0x2b90]
   0x00000000001d1ebb <+38283>:	mov    r10,QWORD PTR [rsp+0x2b98]
   0x00000000001d1ec3 <+38291>:	mov    r11,QWORD PTR [rsp+0x2ba0]
   0x00000000001d1ecb <+38299>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d1ed3 <+38307>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d1edb <+38315>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d1ee3 <+38323>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d1eeb <+38331>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d1ef3 <+38339>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d1efb <+38347>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d1f03 <+38355>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d1f0a <+38362>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d1f12 <+38370>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d1f1a <+38378>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d1f22 <+38386>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d1f2a <+38394>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d1f32 <+38402>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d1f3a <+38410>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d1f42 <+38418>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d1f4a <+38426>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d1f52 <+38434>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d1f5a <+38442>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d1f62 <+38450>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d1f6a <+38458>:	mov    rax,rsp
   0x00000000001d1f6d <+38461>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d1f71 <+38465>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d1f75 <+38469>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d1f79 <+38473>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d1f7d <+38477>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d1f81 <+38481>:	mov    QWORD PTR [rax],rdi
   0x00000000001d1f84 <+38484>:	lea    rdi,[rsp+0x18c0]
   0x00000000001d1f8c <+38492>:	call   0x3ae5e0 <execute_call>
   0x00000000001d1f91 <+38497>:	mov    eax,DWORD PTR [rsp+0x18c0]
   0x00000000001d1f98 <+38504>:	mov    rcx,QWORD PTR [rsp+0x18c8]
   0x00000000001d1fa0 <+38512>:	mov    rdx,QWORD PTR [rsp+0x18d0]
   0x00000000001d1fa8 <+38520>:	mov    rsi,QWORD PTR [rsp+0x18d8]
   0x00000000001d1fb0 <+38528>:	mov    QWORD PTR [rsp+0x2b58],rsi
   0x00000000001d1fb8 <+38536>:	mov    QWORD PTR [rsp+0x2b50],rdx
   0x00000000001d1fc0 <+38544>:	mov    QWORD PTR [rsp+0x2b48],rcx
   0x00000000001d1fc8 <+38552>:	mov    DWORD PTR [rsp+0x2b40],eax
   0x00000000001d1fcf <+38559>:	lea    rdi,[rsp+0x2b40]
   0x00000000001d1fd7 <+38567>:	call   0x343280 <truthy?>
   0x00000000001d1fdc <+38572>:	test   al,0x1
   0x00000000001d1fde <+38574>:	jne    0x1d2106 <->+38870>
   0x00000000001d1fe4 <+38580>:	jmp    0x1d2134 <->+38916>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d1fe9 <+38585>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d1ff1 <+38593>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d1ff9 <+38601>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d2001 <+38609>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d2008 <+38616>:	lea    rdi,[rsp+0x1968]
   0x00000000001d2010 <+38624>:	call   0x340b10 <new>
   0x00000000001d2015 <+38629>:	mov    eax,DWORD PTR [rsp+0x1968]
   0x00000000001d201c <+38636>:	mov    rcx,QWORD PTR [rsp+0x1970]
   0x00000000001d2024 <+38644>:	mov    rdx,QWORD PTR [rsp+0x1978]
   0x00000000001d202c <+38652>:	mov    rsi,QWORD PTR [rsp+0x1980]
   0x00000000001d2034 <+38660>:	mov    QWORD PTR [rsp+0x2c00],rsi
   0x00000000001d203c <+38668>:	mov    QWORD PTR [rsp+0x2bf8],rdx
   0x00000000001d2044 <+38676>:	mov    QWORD PTR [rsp+0x2bf0],rcx
   0x00000000001d204c <+38684>:	mov    DWORD PTR [rsp+0x2be8],eax
   0x00000000001d2053 <+38691>:	lea    rax,[rsp+0x2be8]
   0x00000000001d205b <+38699>:	mov    QWORD PTR [rsp+0x1c8],rax
   0x00000000001d2063 <+38707>:	jmp    0x1d1c6c <->+37692>
   0x00000000001d2068 <+38712>:	mov    edi,DWORD PTR [rsp+0x1d4]
   0x00000000001d206f <+38719>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d2074 <+38724>:	and    al,0x1
   0x00000000001d2076 <+38726>:	test   al,0x1
   0x00000000001d2078 <+38728>:	jne    0x1d207f <->+38735>
   0x00000000001d207a <+38730>:	jmp    0x1d2106 <->+38870>
   0x00000000001d207f <+38735>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d2087 <+38743>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d208f <+38751>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d2097 <+38759>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d209f <+38767>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d20a6 <+38774>:	lea    rdi,[rsp+0x1988]
   0x00000000001d20ae <+38782>:	call   0x340cb0 <new>
   0x00000000001d20b3 <+38787>:	mov    eax,DWORD PTR [rsp+0x1988]
   0x00000000001d20ba <+38794>:	mov    rcx,QWORD PTR [rsp+0x1990]
   0x00000000001d20c2 <+38802>:	mov    rdx,QWORD PTR [rsp+0x1998]
   0x00000000001d20ca <+38810>:	mov    rsi,QWORD PTR [rsp+0x19a0]
   0x00000000001d20d2 <+38818>:	mov    QWORD PTR [rsp+0x2be0],rsi
   0x00000000001d20da <+38826>:	mov    QWORD PTR [rsp+0x2bd8],rdx
   0x00000000001d20e2 <+38834>:	mov    QWORD PTR [rsp+0x2bd0],rcx
   0x00000000001d20ea <+38842>:	mov    DWORD PTR [rsp+0x2bc8],eax
   0x00000000001d20f1 <+38849>:	lea    rax,[rsp+0x2bc8]
   0x00000000001d20f9 <+38857>:	mov    QWORD PTR [rsp+0x1c8],rax
   0x00000000001d2101 <+38865>:	jmp    0x1d1c6c <->+37692>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d2106 <+38870>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d210e <+38878>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d2116 <+38886>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d211e <+38894>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d2126 <+38902>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d212d <+38909>:	call   0x326080 <<<>
   0x00000000001d2132 <+38914>:	jmp    0x1d2136 <->+38918>
   0x00000000001d2134 <+38916>:	jmp    0x1d2136 <->+38918>
   0x00000000001d2136 <+38918>:	jmp    0x1d1a6d <->+37181>
   0x00000000001d213b <+38923>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d2143 <+38931>:	mov    QWORD PTR [rsp+0x1a8],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001d214b <+38939>:	jmp    0x1d2166 <->+38966>
   0x00000000001d214d <+38941>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d2154 <+38948>:	mov    eax,0xba
   0x00000000001d2159 <+38953>:	cmp    eax,ecx
   0x00000000001d215b <+38955>:	je     0x1d2834 <->+40708>
   0x00000000001d2161 <+38961>:	jmp    0x1d2846 <->+40726>
   0x00000000001d2166 <+38966>:	mov    rsi,QWORD PTR [rsp+0x1a8]
   0x00000000001d216e <+38974>:	lea    rdi,[rsp+0x1ab8]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d2176 <+38982>:	call   0x365740 <next>
   0x00000000001d217b <+38987>:	mov    eax,DWORD PTR [rsp+0x1ab8]
   0x00000000001d2182 <+38994>:	mov    rcx,QWORD PTR [rsp+0x1ac0]
   0x00000000001d218a <+39002>:	mov    rdx,QWORD PTR [rsp+0x1ac8]
   0x00000000001d2192 <+39010>:	mov    rsi,QWORD PTR [rsp+0x1ad0]
   0x00000000001d219a <+39018>:	mov    rdi,QWORD PTR [rsp+0x1ad8]
   0x00000000001d21a2 <+39026>:	mov    QWORD PTR [rsp+0x2af0],rdi
   0x00000000001d21aa <+39034>:	mov    QWORD PTR [rsp+0x2ae8],rsi
   0x00000000001d21b2 <+39042>:	mov    QWORD PTR [rsp+0x2ae0],rdx
   0x00000000001d21ba <+39050>:	mov    QWORD PTR [rsp+0x2ad8],rcx
   0x00000000001d21c2 <+39058>:	mov    DWORD PTR [rsp+0x2ad0],eax
   0x00000000001d21c9 <+39065>:	mov    eax,DWORD PTR [rsp+0x2ad0]
   0x00000000001d21d0 <+39072>:	mov    rcx,QWORD PTR [rsp+0x2ad8]
   0x00000000001d21d8 <+39080>:	mov    rdx,QWORD PTR [rsp+0x2ae0]
   0x00000000001d21e0 <+39088>:	mov    rsi,QWORD PTR [rsp+0x2ae8]
   0x00000000001d21e8 <+39096>:	mov    rdi,QWORD PTR [rsp+0x2af0]
   0x00000000001d21f0 <+39104>:	mov    QWORD PTR [rsp+0x2b18],rdi
   0x00000000001d21f8 <+39112>:	mov    QWORD PTR [rsp+0x2b10],rsi
   0x00000000001d2200 <+39120>:	mov    QWORD PTR [rsp+0x2b08],rdx
   0x00000000001d2208 <+39128>:	mov    QWORD PTR [rsp+0x2b00],rcx
   0x00000000001d2210 <+39136>:	mov    DWORD PTR [rsp+0x2af8],eax

637	      break if value.is_a?(Stop)
   0x00000000001d2217 <+39143>:	mov    eax,0xa3
   0x00000000001d221c <+39148>:	cmp    eax,DWORD PTR [rsp+0x2af8]
   0x00000000001d2223 <+39155>:	jne    0x1d222a <->+39162>
   0x00000000001d2225 <+39157>:	jmp    0x1d22c9 <->+39321>
   0x00000000001d222a <+39162>:	mov    eax,DWORD PTR [rsp+0x2b00]
   0x00000000001d2231 <+39169>:	mov    rcx,QWORD PTR [rsp+0x2b08]
   0x00000000001d2239 <+39177>:	mov    rdx,QWORD PTR [rsp+0x2b10]
   0x00000000001d2241 <+39185>:	mov    rsi,QWORD PTR [rsp+0x2b18]
   0x00000000001d2249 <+39193>:	mov    QWORD PTR [rsp+0x2b38],rsi
   0x00000000001d2251 <+39201>:	mov    QWORD PTR [rsp+0x2b30],rdx
   0x00000000001d2259 <+39209>:	mov    QWORD PTR [rsp+0x2b28],rcx
   0x00000000001d2261 <+39217>:	mov    DWORD PTR [rsp+0x2b20],eax
   0x00000000001d2268 <+39224>:	mov    eax,DWORD PTR [rsp+0x2b20]
   0x00000000001d226f <+39231>:	mov    rcx,QWORD PTR [rsp+0x2b28]
   0x00000000001d2277 <+39239>:	mov    rdx,QWORD PTR [rsp+0x2b30]
   0x00000000001d227f <+39247>:	mov    rsi,QWORD PTR [rsp+0x2b38]
   0x00000000001d2287 <+39255>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001d228f <+39263>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001d2297 <+39271>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001d229f <+39279>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001d22a6 <+39286>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d22ad <+39293>:	mov    DWORD PTR [rsp+0x1a4],ecx
   0x00000000001d22b4 <+39300>:	mov    eax,0x4ed
   0x00000000001d22b9 <+39305>:	cmp    eax,ecx
   0x00000000001d22bb <+39307>:	sete   al
   0x00000000001d22be <+39310>:	and    al,0x1
   0x00000000001d22c0 <+39312>:	test   al,0x1
   0x00000000001d22c2 <+39314>:	jne    0x1d22ce <->+39326>
   0x00000000001d22c4 <+39316>:	jmp    0x1d234a <->+39450>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d22c9 <+39321>:	jmp    0x1cf0d6 <->+26534>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001d22ce <+39326>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d22d6 <+39334>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d22de <+39342>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d22e6 <+39350>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d22ed <+39357>:	lea    rdi,[rsp+0x1a58]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d22f5 <+39365>:	call   0x339d20 <new>
   0x00000000001d22fa <+39370>:	mov    eax,DWORD PTR [rsp+0x1a58]
   0x00000000001d2301 <+39377>:	mov    rcx,QWORD PTR [rsp+0x1a60]
   0x00000000001d2309 <+39385>:	mov    rdx,QWORD PTR [rsp+0x1a68]
   0x00000000001d2311 <+39393>:	mov    rsi,QWORD PTR [rsp+0x1a70]
   0x00000000001d2319 <+39401>:	mov    QWORD PTR [rsp+0x2ac8],rsi
   0x00000000001d2321 <+39409>:	mov    QWORD PTR [rsp+0x2ac0],rdx
   0x00000000001d2329 <+39417>:	mov    QWORD PTR [rsp+0x2ab8],rcx
   0x00000000001d2331 <+39425>:	mov    DWORD PTR [rsp+0x2ab0],eax
   0x00000000001d2338 <+39432>:	lea    rax,[rsp+0x2ab0]
   0x00000000001d2340 <+39440>:	mov    QWORD PTR [rsp+0x198],rax
   0x00000000001d2348 <+39448>:	jmp    0x1d2365 <->+39477>
   0x00000000001d234a <+39450>:	mov    edi,DWORD PTR [rsp+0x1a4]
   0x00000000001d2351 <+39457>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d2356 <+39462>:	and    al,0x1
   0x00000000001d2358 <+39464>:	test   al,0x1
   0x00000000001d235a <+39466>:	jne    0x1d26e2 <->+40370>
   0x00000000001d2360 <+39472>:	jmp    0x1d2761 <->+40497>
   0x00000000001d2365 <+39477>:	mov    rsi,QWORD PTR [rsp+0x198]
   0x00000000001d236d <+39485>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d236f <+39487>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d2373 <+39491>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d2377 <+39495>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d237b <+39499>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d2383 <+39507>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d238b <+39515>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d2393 <+39523>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d239a <+39530>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d23a1 <+39537>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d23a9 <+39545>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d23b1 <+39553>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d23b9 <+39561>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d23c1 <+39569>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d23c9 <+39577>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d23d1 <+39585>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d23d8 <+39592>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d23e0 <+39600>:	mov    QWORD PTR [rsp+0x180],rax
   0x00000000001d23e8 <+39608>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d23f0 <+39616>:	mov    QWORD PTR [rsp+0x188],rax
   0x00000000001d23f8 <+39624>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d2400 <+39632>:	mov    QWORD PTR [rsp+0x190],rax
   0x00000000001d2408 <+39640>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d2410 <+39648>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d2418 <+39656>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d2420 <+39664>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d2427 <+39671>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d242f <+39679>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d2437 <+39687>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d243f <+39695>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d2447 <+39703>:	mov    rax,rsp
   0x00000000001d244a <+39706>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d244e <+39710>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d2452 <+39714>:	mov    QWORD PTR [rax],rdi
   0x00000000001d2455 <+39717>:	lea    rdi,[rsp+0x1a38]
   0x00000000001d245d <+39725>:	call   0x511190 <resolve_getattr>
   0x00000000001d2462 <+39730>:	mov    rsi,QWORD PTR [rsp+0x180]
   0x00000000001d246a <+39738>:	mov    rdx,QWORD PTR [rsp+0x188]
   0x00000000001d2472 <+39746>:	mov    rcx,QWORD PTR [rsp+0x190]
   0x00000000001d247a <+39754>:	mov    eax,DWORD PTR [rsp+0x1a38]
   0x00000000001d2481 <+39761>:	mov    rdi,QWORD PTR [rsp+0x1a40]
   0x00000000001d2489 <+39769>:	mov    r8,QWORD PTR [rsp+0x1a48]
   0x00000000001d2491 <+39777>:	mov    r9,QWORD PTR [rsp+0x1a50]
   0x00000000001d2499 <+39785>:	mov    QWORD PTR [rsp+0x2a68],r9
   0x00000000001d24a1 <+39793>:	mov    QWORD PTR [rsp+0x2a60],r8
   0x00000000001d24a9 <+39801>:	mov    QWORD PTR [rsp+0x2a58],rdi
   0x00000000001d24b1 <+39809>:	mov    DWORD PTR [rsp+0x2a50],eax
   0x00000000001d24b8 <+39816>:	mov    r9,QWORD PTR [rsp+0x2a58]
   0x00000000001d24c0 <+39824>:	mov    r8d,DWORD PTR [rsp+0x2a50]
   0x00000000001d24c8 <+39832>:	mov    rdi,QWORD PTR [rsp+0x2a60]
   0x00000000001d24d0 <+39840>:	mov    r10,QWORD PTR [rsp+0x2a68]
   0x00000000001d24d8 <+39848>:	mov    rax,rsp
   0x00000000001d24db <+39851>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d24df <+39855>:	mov    QWORD PTR [rax],rdi
   0x00000000001d24e2 <+39858>:	lea    rdi,[rsp+0x19f0]
   0x00000000001d24ea <+39866>:	call   0x4bd1f0 <new:target>
   0x00000000001d24ef <+39871>:	mov    rax,QWORD PTR [rsp+0x19f0]
   0x00000000001d24f7 <+39879>:	mov    ecx,DWORD PTR [rsp+0x19f8]
   0x00000000001d24fe <+39886>:	mov    rdx,QWORD PTR [rsp+0x1a00]
   0x00000000001d2506 <+39894>:	mov    rsi,QWORD PTR [rsp+0x1a08]
   0x00000000001d250e <+39902>:	mov    rdi,QWORD PTR [rsp+0x1a10]
   0x00000000001d2516 <+39910>:	mov    r8,QWORD PTR [rsp+0x1a18]
   0x00000000001d251e <+39918>:	mov    r9,QWORD PTR [rsp+0x1a20]
   0x00000000001d2526 <+39926>:	mov    r10,QWORD PTR [rsp+0x1a28]
   0x00000000001d252e <+39934>:	mov    r11,QWORD PTR [rsp+0x1a30]
   0x00000000001d2536 <+39942>:	mov    QWORD PTR [rsp+0x2a48],r11
   0x00000000001d253e <+39950>:	mov    QWORD PTR [rsp+0x2a40],r10
   0x00000000001d2546 <+39958>:	mov    QWORD PTR [rsp+0x2a38],r9
   0x00000000001d254e <+39966>:	mov    QWORD PTR [rsp+0x2a30],r8
   0x00000000001d2556 <+39974>:	mov    QWORD PTR [rsp+0x2a28],rdi
   0x00000000001d255e <+39982>:	mov    QWORD PTR [rsp+0x2a20],rsi
   0x00000000001d2566 <+39990>:	mov    QWORD PTR [rsp+0x2a18],rdx
   0x00000000001d256e <+39998>:	mov    DWORD PTR [rsp+0x2a10],ecx
   0x00000000001d2575 <+40005>:	mov    QWORD PTR [rsp+0x2a08],rax
   0x00000000001d257d <+40013>:	mov    rax,QWORD PTR [rsp+0x2a08]
   0x00000000001d2585 <+40021>:	mov    ecx,DWORD PTR [rsp+0x2a10]
   0x00000000001d258c <+40028>:	mov    rdx,QWORD PTR [rsp+0x2a18]
   0x00000000001d2594 <+40036>:	mov    rsi,QWORD PTR [rsp+0x2a20]
   0x00000000001d259c <+40044>:	mov    rdi,QWORD PTR [rsp+0x2a28]
   0x00000000001d25a4 <+40052>:	mov    r8,QWORD PTR [rsp+0x2a30]
   0x00000000001d25ac <+40060>:	mov    r9,QWORD PTR [rsp+0x2a38]
   0x00000000001d25b4 <+40068>:	mov    r10,QWORD PTR [rsp+0x2a40]
   0x00000000001d25bc <+40076>:	mov    r11,QWORD PTR [rsp+0x2a48]
   0x00000000001d25c4 <+40084>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d25cc <+40092>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d25d4 <+40100>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d25dc <+40108>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d25e4 <+40116>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d25ec <+40124>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d25f4 <+40132>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d25fc <+40140>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d2603 <+40147>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d260b <+40155>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d2613 <+40163>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d261b <+40171>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d2623 <+40179>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d262b <+40187>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d2633 <+40195>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d263b <+40203>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d2643 <+40211>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d264b <+40219>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d2653 <+40227>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d265b <+40235>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d2663 <+40243>:	mov    rax,rsp
   0x00000000001d2666 <+40246>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d266a <+40250>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d266e <+40254>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d2672 <+40258>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d2676 <+40262>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d267a <+40266>:	mov    QWORD PTR [rax],rdi
   0x00000000001d267d <+40269>:	lea    rdi,[rsp+0x19d0]
   0x00000000001d2685 <+40277>:	call   0x3ae5e0 <execute_call>
   0x00000000001d268a <+40282>:	mov    eax,DWORD PTR [rsp+0x19d0]
   0x00000000001d2691 <+40289>:	mov    rcx,QWORD PTR [rsp+0x19d8]
   0x00000000001d2699 <+40297>:	mov    rdx,QWORD PTR [rsp+0x19e0]
   0x00000000001d26a1 <+40305>:	mov    rsi,QWORD PTR [rsp+0x19e8]
   0x00000000001d26a9 <+40313>:	mov    QWORD PTR [rsp+0x2a00],rsi
   0x00000000001d26b1 <+40321>:	mov    QWORD PTR [rsp+0x29f8],rdx
   0x00000000001d26b9 <+40329>:	mov    QWORD PTR [rsp+0x29f0],rcx
   0x00000000001d26c1 <+40337>:	mov    DWORD PTR [rsp+0x29e8],eax
   0x00000000001d26c8 <+40344>:	lea    rdi,[rsp+0x29e8]
   0x00000000001d26d0 <+40352>:	call   0x343280 <truthy?>
   0x00000000001d26d5 <+40357>:	test   al,0x1
   0x00000000001d26d7 <+40359>:	jne    0x1d27ff <->+40655>
   0x00000000001d26dd <+40365>:	jmp    0x1d282d <->+40701>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d26e2 <+40370>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d26ea <+40378>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d26f2 <+40386>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d26fa <+40394>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d2701 <+40401>:	lea    rdi,[rsp+0x1a78]
   0x00000000001d2709 <+40409>:	call   0x340b10 <new>
   0x00000000001d270e <+40414>:	mov    eax,DWORD PTR [rsp+0x1a78]
   0x00000000001d2715 <+40421>:	mov    rcx,QWORD PTR [rsp+0x1a80]
   0x00000000001d271d <+40429>:	mov    rdx,QWORD PTR [rsp+0x1a88]
   0x00000000001d2725 <+40437>:	mov    rsi,QWORD PTR [rsp+0x1a90]
   0x00000000001d272d <+40445>:	mov    QWORD PTR [rsp+0x2aa8],rsi
   0x00000000001d2735 <+40453>:	mov    QWORD PTR [rsp+0x2aa0],rdx
   0x00000000001d273d <+40461>:	mov    QWORD PTR [rsp+0x2a98],rcx
   0x00000000001d2745 <+40469>:	mov    DWORD PTR [rsp+0x2a90],eax
   0x00000000001d274c <+40476>:	lea    rax,[rsp+0x2a90]
   0x00000000001d2754 <+40484>:	mov    QWORD PTR [rsp+0x198],rax
   0x00000000001d275c <+40492>:	jmp    0x1d2365 <->+39477>
   0x00000000001d2761 <+40497>:	mov    edi,DWORD PTR [rsp+0x1a4]
   0x00000000001d2768 <+40504>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d276d <+40509>:	and    al,0x1
   0x00000000001d276f <+40511>:	test   al,0x1
   0x00000000001d2771 <+40513>:	jne    0x1d2778 <->+40520>
   0x00000000001d2773 <+40515>:	jmp    0x1d27ff <->+40655>
   0x00000000001d2778 <+40520>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d2780 <+40528>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d2788 <+40536>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d2790 <+40544>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d2798 <+40552>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d279f <+40559>:	lea    rdi,[rsp+0x1a98]
   0x00000000001d27a7 <+40567>:	call   0x340cb0 <new>
   0x00000000001d27ac <+40572>:	mov    eax,DWORD PTR [rsp+0x1a98]
   0x00000000001d27b3 <+40579>:	mov    rcx,QWORD PTR [rsp+0x1aa0]
   0x00000000001d27bb <+40587>:	mov    rdx,QWORD PTR [rsp+0x1aa8]
   0x00000000001d27c3 <+40595>:	mov    rsi,QWORD PTR [rsp+0x1ab0]
   0x00000000001d27cb <+40603>:	mov    QWORD PTR [rsp+0x2a88],rsi
   0x00000000001d27d3 <+40611>:	mov    QWORD PTR [rsp+0x2a80],rdx
   0x00000000001d27db <+40619>:	mov    QWORD PTR [rsp+0x2a78],rcx
   0x00000000001d27e3 <+40627>:	mov    DWORD PTR [rsp+0x2a70],eax
   0x00000000001d27ea <+40634>:	lea    rax,[rsp+0x2a70]
   0x00000000001d27f2 <+40642>:	mov    QWORD PTR [rsp+0x198],rax
   0x00000000001d27fa <+40650>:	jmp    0x1d2365 <->+39477>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d27ff <+40655>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d2807 <+40663>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d280f <+40671>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d2817 <+40679>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d281f <+40687>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d2826 <+40694>:	call   0x326080 <<<>
   0x00000000001d282b <+40699>:	jmp    0x1d282f <->+40703>
   0x00000000001d282d <+40701>:	jmp    0x1d282f <->+40703>
   0x00000000001d282f <+40703>:	jmp    0x1d2166 <->+38966>
   0x00000000001d2834 <+40708>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d283c <+40716>:	mov    QWORD PTR [rsp+0x178],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001d2844 <+40724>:	jmp    0x1d285f <->+40751>
   0x00000000001d2846 <+40726>:	mov    ecx,DWORD PTR [rsp+0x348]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d284d <+40733>:	mov    eax,0xbb
   0x00000000001d2852 <+40738>:	cmp    eax,ecx
   0x00000000001d2854 <+40740>:	je     0x1d2f2d <->+42493>
   0x00000000001d285a <+40746>:	jmp    0x1d2f3f <->+42511>
   0x00000000001d285f <+40751>:	mov    rsi,QWORD PTR [rsp+0x178]
   0x00000000001d2867 <+40759>:	lea    rdi,[rsp+0x1bc8]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d286f <+40767>:	call   0x3671b0 <next>
   0x00000000001d2874 <+40772>:	mov    eax,DWORD PTR [rsp+0x1bc8]
   0x00000000001d287b <+40779>:	mov    rcx,QWORD PTR [rsp+0x1bd0]
   0x00000000001d2883 <+40787>:	mov    rdx,QWORD PTR [rsp+0x1bd8]
   0x00000000001d288b <+40795>:	mov    rsi,QWORD PTR [rsp+0x1be0]
   0x00000000001d2893 <+40803>:	mov    rdi,QWORD PTR [rsp+0x1be8]
   0x00000000001d289b <+40811>:	mov    QWORD PTR [rsp+0x2998],rdi
   0x00000000001d28a3 <+40819>:	mov    QWORD PTR [rsp+0x2990],rsi
   0x00000000001d28ab <+40827>:	mov    QWORD PTR [rsp+0x2988],rdx
   0x00000000001d28b3 <+40835>:	mov    QWORD PTR [rsp+0x2980],rcx
   0x00000000001d28bb <+40843>:	mov    DWORD PTR [rsp+0x2978],eax
   0x00000000001d28c2 <+40850>:	mov    eax,DWORD PTR [rsp+0x2978]
   0x00000000001d28c9 <+40857>:	mov    rcx,QWORD PTR [rsp+0x2980]
   0x00000000001d28d1 <+40865>:	mov    rdx,QWORD PTR [rsp+0x2988]
   0x00000000001d28d9 <+40873>:	mov    rsi,QWORD PTR [rsp+0x2990]
   0x00000000001d28e1 <+40881>:	mov    rdi,QWORD PTR [rsp+0x2998]
   0x00000000001d28e9 <+40889>:	mov    QWORD PTR [rsp+0x29c0],rdi
   0x00000000001d28f1 <+40897>:	mov    QWORD PTR [rsp+0x29b8],rsi
   0x00000000001d28f9 <+40905>:	mov    QWORD PTR [rsp+0x29b0],rdx
   0x00000000001d2901 <+40913>:	mov    QWORD PTR [rsp+0x29a8],rcx
   0x00000000001d2909 <+40921>:	mov    DWORD PTR [rsp+0x29a0],eax

637	      break if value.is_a?(Stop)
   0x00000000001d2910 <+40928>:	mov    eax,0xa3
   0x00000000001d2915 <+40933>:	cmp    eax,DWORD PTR [rsp+0x29a0]
   0x00000000001d291c <+40940>:	jne    0x1d2923 <->+40947>
   0x00000000001d291e <+40942>:	jmp    0x1d29c2 <->+41106>
   0x00000000001d2923 <+40947>:	mov    eax,DWORD PTR [rsp+0x29a8]
   0x00000000001d292a <+40954>:	mov    rcx,QWORD PTR [rsp+0x29b0]
   0x00000000001d2932 <+40962>:	mov    rdx,QWORD PTR [rsp+0x29b8]
   0x00000000001d293a <+40970>:	mov    rsi,QWORD PTR [rsp+0x29c0]
   0x00000000001d2942 <+40978>:	mov    QWORD PTR [rsp+0x29e0],rsi
   0x00000000001d294a <+40986>:	mov    QWORD PTR [rsp+0x29d8],rdx
   0x00000000001d2952 <+40994>:	mov    QWORD PTR [rsp+0x29d0],rcx
   0x00000000001d295a <+41002>:	mov    DWORD PTR [rsp+0x29c8],eax
   0x00000000001d2961 <+41009>:	mov    eax,DWORD PTR [rsp+0x29c8]
   0x00000000001d2968 <+41016>:	mov    rcx,QWORD PTR [rsp+0x29d0]
   0x00000000001d2970 <+41024>:	mov    rdx,QWORD PTR [rsp+0x29d8]
   0x00000000001d2978 <+41032>:	mov    rsi,QWORD PTR [rsp+0x29e0]
   0x00000000001d2980 <+41040>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001d2988 <+41048>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001d2990 <+41056>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001d2998 <+41064>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001d299f <+41071>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d29a6 <+41078>:	mov    DWORD PTR [rsp+0x174],ecx
   0x00000000001d29ad <+41085>:	mov    eax,0x4ed
   0x00000000001d29b2 <+41090>:	cmp    eax,ecx
   0x00000000001d29b4 <+41092>:	sete   al
   0x00000000001d29b7 <+41095>:	and    al,0x1
   0x00000000001d29b9 <+41097>:	test   al,0x1
   0x00000000001d29bb <+41099>:	jne    0x1d29c7 <->+41111>
   0x00000000001d29bd <+41101>:	jmp    0x1d2a43 <->+41235>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d29c2 <+41106>:	jmp    0x1cf0d6 <->+26534>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001d29c7 <+41111>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d29cf <+41119>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d29d7 <+41127>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d29df <+41135>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d29e6 <+41142>:	lea    rdi,[rsp+0x1b68]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d29ee <+41150>:	call   0x339d20 <new>
   0x00000000001d29f3 <+41155>:	mov    eax,DWORD PTR [rsp+0x1b68]
   0x00000000001d29fa <+41162>:	mov    rcx,QWORD PTR [rsp+0x1b70]
   0x00000000001d2a02 <+41170>:	mov    rdx,QWORD PTR [rsp+0x1b78]
   0x00000000001d2a0a <+41178>:	mov    rsi,QWORD PTR [rsp+0x1b80]
   0x00000000001d2a12 <+41186>:	mov    QWORD PTR [rsp+0x2970],rsi
   0x00000000001d2a1a <+41194>:	mov    QWORD PTR [rsp+0x2968],rdx
   0x00000000001d2a22 <+41202>:	mov    QWORD PTR [rsp+0x2960],rcx
   0x00000000001d2a2a <+41210>:	mov    DWORD PTR [rsp+0x2958],eax
   0x00000000001d2a31 <+41217>:	lea    rax,[rsp+0x2958]
   0x00000000001d2a39 <+41225>:	mov    QWORD PTR [rsp+0x168],rax
   0x00000000001d2a41 <+41233>:	jmp    0x1d2a5e <->+41262>
   0x00000000001d2a43 <+41235>:	mov    edi,DWORD PTR [rsp+0x174]
   0x00000000001d2a4a <+41242>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d2a4f <+41247>:	and    al,0x1
   0x00000000001d2a51 <+41249>:	test   al,0x1
   0x00000000001d2a53 <+41251>:	jne    0x1d2ddb <->+42155>
   0x00000000001d2a59 <+41257>:	jmp    0x1d2e5a <->+42282>
   0x00000000001d2a5e <+41262>:	mov    rsi,QWORD PTR [rsp+0x168]
   0x00000000001d2a66 <+41270>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d2a68 <+41272>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d2a6c <+41276>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d2a70 <+41280>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d2a74 <+41284>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d2a7c <+41292>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d2a84 <+41300>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d2a8c <+41308>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d2a93 <+41315>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d2a9a <+41322>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d2aa2 <+41330>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d2aaa <+41338>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d2ab2 <+41346>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d2aba <+41354>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d2ac2 <+41362>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d2aca <+41370>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d2ad1 <+41377>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d2ad9 <+41385>:	mov    QWORD PTR [rsp+0x150],rax
   0x00000000001d2ae1 <+41393>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d2ae9 <+41401>:	mov    QWORD PTR [rsp+0x158],rax
   0x00000000001d2af1 <+41409>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d2af9 <+41417>:	mov    QWORD PTR [rsp+0x160],rax
   0x00000000001d2b01 <+41425>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d2b09 <+41433>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d2b11 <+41441>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d2b19 <+41449>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d2b20 <+41456>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d2b28 <+41464>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d2b30 <+41472>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d2b38 <+41480>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d2b40 <+41488>:	mov    rax,rsp
   0x00000000001d2b43 <+41491>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d2b47 <+41495>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d2b4b <+41499>:	mov    QWORD PTR [rax],rdi
   0x00000000001d2b4e <+41502>:	lea    rdi,[rsp+0x1b48]
   0x00000000001d2b56 <+41510>:	call   0x511190 <resolve_getattr>
   0x00000000001d2b5b <+41515>:	mov    rsi,QWORD PTR [rsp+0x150]
   0x00000000001d2b63 <+41523>:	mov    rdx,QWORD PTR [rsp+0x158]
   0x00000000001d2b6b <+41531>:	mov    rcx,QWORD PTR [rsp+0x160]
   0x00000000001d2b73 <+41539>:	mov    eax,DWORD PTR [rsp+0x1b48]
   0x00000000001d2b7a <+41546>:	mov    rdi,QWORD PTR [rsp+0x1b50]
   0x00000000001d2b82 <+41554>:	mov    r8,QWORD PTR [rsp+0x1b58]
   0x00000000001d2b8a <+41562>:	mov    r9,QWORD PTR [rsp+0x1b60]
   0x00000000001d2b92 <+41570>:	mov    QWORD PTR [rsp+0x2910],r9
   0x00000000001d2b9a <+41578>:	mov    QWORD PTR [rsp+0x2908],r8
   0x00000000001d2ba2 <+41586>:	mov    QWORD PTR [rsp+0x2900],rdi
   0x00000000001d2baa <+41594>:	mov    DWORD PTR [rsp+0x28f8],eax
   0x00000000001d2bb1 <+41601>:	mov    r9,QWORD PTR [rsp+0x2900]
   0x00000000001d2bb9 <+41609>:	mov    r8d,DWORD PTR [rsp+0x28f8]
   0x00000000001d2bc1 <+41617>:	mov    rdi,QWORD PTR [rsp+0x2908]
   0x00000000001d2bc9 <+41625>:	mov    r10,QWORD PTR [rsp+0x2910]
   0x00000000001d2bd1 <+41633>:	mov    rax,rsp
   0x00000000001d2bd4 <+41636>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d2bd8 <+41640>:	mov    QWORD PTR [rax],rdi
   0x00000000001d2bdb <+41643>:	lea    rdi,[rsp+0x1b00]
   0x00000000001d2be3 <+41651>:	call   0x4bd1f0 <new:target>
   0x00000000001d2be8 <+41656>:	mov    rax,QWORD PTR [rsp+0x1b00]
   0x00000000001d2bf0 <+41664>:	mov    ecx,DWORD PTR [rsp+0x1b08]
   0x00000000001d2bf7 <+41671>:	mov    rdx,QWORD PTR [rsp+0x1b10]
   0x00000000001d2bff <+41679>:	mov    rsi,QWORD PTR [rsp+0x1b18]
   0x00000000001d2c07 <+41687>:	mov    rdi,QWORD PTR [rsp+0x1b20]
   0x00000000001d2c0f <+41695>:	mov    r8,QWORD PTR [rsp+0x1b28]
   0x00000000001d2c17 <+41703>:	mov    r9,QWORD PTR [rsp+0x1b30]
   0x00000000001d2c1f <+41711>:	mov    r10,QWORD PTR [rsp+0x1b38]
   0x00000000001d2c27 <+41719>:	mov    r11,QWORD PTR [rsp+0x1b40]
   0x00000000001d2c2f <+41727>:	mov    QWORD PTR [rsp+0x28f0],r11
   0x00000000001d2c37 <+41735>:	mov    QWORD PTR [rsp+0x28e8],r10
   0x00000000001d2c3f <+41743>:	mov    QWORD PTR [rsp+0x28e0],r9
   0x00000000001d2c47 <+41751>:	mov    QWORD PTR [rsp+0x28d8],r8
   0x00000000001d2c4f <+41759>:	mov    QWORD PTR [rsp+0x28d0],rdi
   0x00000000001d2c57 <+41767>:	mov    QWORD PTR [rsp+0x28c8],rsi
   0x00000000001d2c5f <+41775>:	mov    QWORD PTR [rsp+0x28c0],rdx
   0x00000000001d2c67 <+41783>:	mov    DWORD PTR [rsp+0x28b8],ecx
   0x00000000001d2c6e <+41790>:	mov    QWORD PTR [rsp+0x28b0],rax
   0x00000000001d2c76 <+41798>:	mov    rax,QWORD PTR [rsp+0x28b0]
   0x00000000001d2c7e <+41806>:	mov    ecx,DWORD PTR [rsp+0x28b8]
   0x00000000001d2c85 <+41813>:	mov    rdx,QWORD PTR [rsp+0x28c0]
   0x00000000001d2c8d <+41821>:	mov    rsi,QWORD PTR [rsp+0x28c8]
   0x00000000001d2c95 <+41829>:	mov    rdi,QWORD PTR [rsp+0x28d0]
   0x00000000001d2c9d <+41837>:	mov    r8,QWORD PTR [rsp+0x28d8]
   0x00000000001d2ca5 <+41845>:	mov    r9,QWORD PTR [rsp+0x28e0]
   0x00000000001d2cad <+41853>:	mov    r10,QWORD PTR [rsp+0x28e8]
   0x00000000001d2cb5 <+41861>:	mov    r11,QWORD PTR [rsp+0x28f0]
   0x00000000001d2cbd <+41869>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d2cc5 <+41877>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d2ccd <+41885>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d2cd5 <+41893>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d2cdd <+41901>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d2ce5 <+41909>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d2ced <+41917>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d2cf5 <+41925>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d2cfc <+41932>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d2d04 <+41940>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d2d0c <+41948>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d2d14 <+41956>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d2d1c <+41964>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d2d24 <+41972>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d2d2c <+41980>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d2d34 <+41988>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d2d3c <+41996>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d2d44 <+42004>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d2d4c <+42012>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d2d54 <+42020>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d2d5c <+42028>:	mov    rax,rsp
   0x00000000001d2d5f <+42031>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d2d63 <+42035>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d2d67 <+42039>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d2d6b <+42043>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d2d6f <+42047>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d2d73 <+42051>:	mov    QWORD PTR [rax],rdi
   0x00000000001d2d76 <+42054>:	lea    rdi,[rsp+0x1ae0]
   0x00000000001d2d7e <+42062>:	call   0x3ae5e0 <execute_call>
   0x00000000001d2d83 <+42067>:	mov    eax,DWORD PTR [rsp+0x1ae0]
   0x00000000001d2d8a <+42074>:	mov    rcx,QWORD PTR [rsp+0x1ae8]
   0x00000000001d2d92 <+42082>:	mov    rdx,QWORD PTR [rsp+0x1af0]
   0x00000000001d2d9a <+42090>:	mov    rsi,QWORD PTR [rsp+0x1af8]
   0x00000000001d2da2 <+42098>:	mov    QWORD PTR [rsp+0x28a8],rsi
   0x00000000001d2daa <+42106>:	mov    QWORD PTR [rsp+0x28a0],rdx
   0x00000000001d2db2 <+42114>:	mov    QWORD PTR [rsp+0x2898],rcx
   0x00000000001d2dba <+42122>:	mov    DWORD PTR [rsp+0x2890],eax
   0x00000000001d2dc1 <+42129>:	lea    rdi,[rsp+0x2890]
   0x00000000001d2dc9 <+42137>:	call   0x343280 <truthy?>
   0x00000000001d2dce <+42142>:	test   al,0x1
   0x00000000001d2dd0 <+42144>:	jne    0x1d2ef8 <->+42440>
   0x00000000001d2dd6 <+42150>:	jmp    0x1d2f26 <->+42486>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d2ddb <+42155>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d2de3 <+42163>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d2deb <+42171>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d2df3 <+42179>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d2dfa <+42186>:	lea    rdi,[rsp+0x1b88]
   0x00000000001d2e02 <+42194>:	call   0x340b10 <new>
   0x00000000001d2e07 <+42199>:	mov    eax,DWORD PTR [rsp+0x1b88]
   0x00000000001d2e0e <+42206>:	mov    rcx,QWORD PTR [rsp+0x1b90]
   0x00000000001d2e16 <+42214>:	mov    rdx,QWORD PTR [rsp+0x1b98]
   0x00000000001d2e1e <+42222>:	mov    rsi,QWORD PTR [rsp+0x1ba0]
   0x00000000001d2e26 <+42230>:	mov    QWORD PTR [rsp+0x2950],rsi
   0x00000000001d2e2e <+42238>:	mov    QWORD PTR [rsp+0x2948],rdx
   0x00000000001d2e36 <+42246>:	mov    QWORD PTR [rsp+0x2940],rcx
   0x00000000001d2e3e <+42254>:	mov    DWORD PTR [rsp+0x2938],eax
   0x00000000001d2e45 <+42261>:	lea    rax,[rsp+0x2938]
   0x00000000001d2e4d <+42269>:	mov    QWORD PTR [rsp+0x168],rax
   0x00000000001d2e55 <+42277>:	jmp    0x1d2a5e <->+41262>
   0x00000000001d2e5a <+42282>:	mov    edi,DWORD PTR [rsp+0x174]
   0x00000000001d2e61 <+42289>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d2e66 <+42294>:	and    al,0x1
   0x00000000001d2e68 <+42296>:	test   al,0x1
   0x00000000001d2e6a <+42298>:	jne    0x1d2e71 <->+42305>
   0x00000000001d2e6c <+42300>:	jmp    0x1d2ef8 <->+42440>
   0x00000000001d2e71 <+42305>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d2e79 <+42313>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d2e81 <+42321>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d2e89 <+42329>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d2e91 <+42337>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d2e98 <+42344>:	lea    rdi,[rsp+0x1ba8]
   0x00000000001d2ea0 <+42352>:	call   0x340cb0 <new>
   0x00000000001d2ea5 <+42357>:	mov    eax,DWORD PTR [rsp+0x1ba8]
   0x00000000001d2eac <+42364>:	mov    rcx,QWORD PTR [rsp+0x1bb0]
   0x00000000001d2eb4 <+42372>:	mov    rdx,QWORD PTR [rsp+0x1bb8]
   0x00000000001d2ebc <+42380>:	mov    rsi,QWORD PTR [rsp+0x1bc0]
   0x00000000001d2ec4 <+42388>:	mov    QWORD PTR [rsp+0x2930],rsi
   0x00000000001d2ecc <+42396>:	mov    QWORD PTR [rsp+0x2928],rdx
   0x00000000001d2ed4 <+42404>:	mov    QWORD PTR [rsp+0x2920],rcx
   0x00000000001d2edc <+42412>:	mov    DWORD PTR [rsp+0x2918],eax
   0x00000000001d2ee3 <+42419>:	lea    rax,[rsp+0x2918]
   0x00000000001d2eeb <+42427>:	mov    QWORD PTR [rsp+0x168],rax
   0x00000000001d2ef3 <+42435>:	jmp    0x1d2a5e <->+41262>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d2ef8 <+42440>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d2f00 <+42448>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d2f08 <+42456>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d2f10 <+42464>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d2f18 <+42472>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d2f1f <+42479>:	call   0x326080 <<<>
   0x00000000001d2f24 <+42484>:	jmp    0x1d2f28 <->+42488>
   0x00000000001d2f26 <+42486>:	jmp    0x1d2f28 <->+42488>
   0x00000000001d2f28 <+42488>:	jmp    0x1d285f <->+40751>
   0x00000000001d2f2d <+42493>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d2f35 <+42501>:	mov    QWORD PTR [rsp+0x148],rax

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
244	      object.each { |value| yield value.as(Value).raw }
   0x00000000001d2f3d <+42509>:	jmp    0x1d2f3f <->+42511>
   0x00000000001d2f3f <+42511>:	mov    rsi,QWORD PTR [rsp+0x148]
   0x00000000001d2f47 <+42519>:	lea    rdi,[rsp+0x1cd8]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d2f4f <+42527>:	call   0x368be0 <next>
   0x00000000001d2f54 <+42532>:	mov    eax,DWORD PTR [rsp+0x1cd8]
   0x00000000001d2f5b <+42539>:	mov    rcx,QWORD PTR [rsp+0x1ce0]
   0x00000000001d2f63 <+42547>:	mov    rdx,QWORD PTR [rsp+0x1ce8]
   0x00000000001d2f6b <+42555>:	mov    rsi,QWORD PTR [rsp+0x1cf0]
   0x00000000001d2f73 <+42563>:	mov    rdi,QWORD PTR [rsp+0x1cf8]
   0x00000000001d2f7b <+42571>:	mov    QWORD PTR [rsp+0x2840],rdi
   0x00000000001d2f83 <+42579>:	mov    QWORD PTR [rsp+0x2838],rsi
   0x00000000001d2f8b <+42587>:	mov    QWORD PTR [rsp+0x2830],rdx
   0x00000000001d2f93 <+42595>:	mov    QWORD PTR [rsp+0x2828],rcx
   0x00000000001d2f9b <+42603>:	mov    DWORD PTR [rsp+0x2820],eax
   0x00000000001d2fa2 <+42610>:	mov    eax,DWORD PTR [rsp+0x2820]
   0x00000000001d2fa9 <+42617>:	mov    rcx,QWORD PTR [rsp+0x2828]
   0x00000000001d2fb1 <+42625>:	mov    rdx,QWORD PTR [rsp+0x2830]
   0x00000000001d2fb9 <+42633>:	mov    rsi,QWORD PTR [rsp+0x2838]
   0x00000000001d2fc1 <+42641>:	mov    rdi,QWORD PTR [rsp+0x2840]
   0x00000000001d2fc9 <+42649>:	mov    QWORD PTR [rsp+0x2868],rdi
   0x00000000001d2fd1 <+42657>:	mov    QWORD PTR [rsp+0x2860],rsi
   0x00000000001d2fd9 <+42665>:	mov    QWORD PTR [rsp+0x2858],rdx
   0x00000000001d2fe1 <+42673>:	mov    QWORD PTR [rsp+0x2850],rcx
   0x00000000001d2fe9 <+42681>:	mov    DWORD PTR [rsp+0x2848],eax

637	      break if value.is_a?(Stop)
   0x00000000001d2ff0 <+42688>:	mov    eax,0xa3
   0x00000000001d2ff5 <+42693>:	cmp    eax,DWORD PTR [rsp+0x2848]
   0x00000000001d2ffc <+42700>:	jne    0x1d3003 <->+42707>
   0x00000000001d2ffe <+42702>:	jmp    0x1d30a2 <->+42866>
   0x00000000001d3003 <+42707>:	mov    eax,DWORD PTR [rsp+0x2850]
   0x00000000001d300a <+42714>:	mov    rcx,QWORD PTR [rsp+0x2858]
   0x00000000001d3012 <+42722>:	mov    rdx,QWORD PTR [rsp+0x2860]
   0x00000000001d301a <+42730>:	mov    rsi,QWORD PTR [rsp+0x2868]
   0x00000000001d3022 <+42738>:	mov    QWORD PTR [rsp+0x2888],rsi
   0x00000000001d302a <+42746>:	mov    QWORD PTR [rsp+0x2880],rdx
   0x00000000001d3032 <+42754>:	mov    QWORD PTR [rsp+0x2878],rcx
   0x00000000001d303a <+42762>:	mov    DWORD PTR [rsp+0x2870],eax
   0x00000000001d3041 <+42769>:	mov    eax,DWORD PTR [rsp+0x2870]
   0x00000000001d3048 <+42776>:	mov    rcx,QWORD PTR [rsp+0x2878]
   0x00000000001d3050 <+42784>:	mov    rdx,QWORD PTR [rsp+0x2880]
   0x00000000001d3058 <+42792>:	mov    rsi,QWORD PTR [rsp+0x2888]
   0x00000000001d3060 <+42800>:	mov    QWORD PTR [rsp+0x3858],rsi
   0x00000000001d3068 <+42808>:	mov    QWORD PTR [rsp+0x3850],rdx
   0x00000000001d3070 <+42816>:	mov    QWORD PTR [rsp+0x3848],rcx
   0x00000000001d3078 <+42824>:	mov    DWORD PTR [rsp+0x3840],eax
   0x00000000001d307f <+42831>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d3086 <+42838>:	mov    DWORD PTR [rsp+0x144],ecx
   0x00000000001d308d <+42845>:	mov    eax,0x4ed
   0x00000000001d3092 <+42850>:	cmp    eax,ecx
   0x00000000001d3094 <+42852>:	sete   al
   0x00000000001d3097 <+42855>:	and    al,0x1
   0x00000000001d3099 <+42857>:	test   al,0x1
   0x00000000001d309b <+42859>:	jne    0x1d30a7 <->+42871>
   0x00000000001d309d <+42861>:	jmp    0x1d3123 <->+42995>

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d30a2 <+42866>:	jmp    0x1cf0d6 <->+26534>

/usr/lib/crystal/iterator.cr:
637	      break if value.is_a?(Stop)
   0x00000000001d30a7 <+42871>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d30af <+42879>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d30b7 <+42887>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d30bf <+42895>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d30c6 <+42902>:	lea    rdi,[rsp+0x1c78]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d30ce <+42910>:	call   0x339d20 <new>
   0x00000000001d30d3 <+42915>:	mov    eax,DWORD PTR [rsp+0x1c78]
   0x00000000001d30da <+42922>:	mov    rcx,QWORD PTR [rsp+0x1c80]
   0x00000000001d30e2 <+42930>:	mov    rdx,QWORD PTR [rsp+0x1c88]
   0x00000000001d30ea <+42938>:	mov    rsi,QWORD PTR [rsp+0x1c90]
   0x00000000001d30f2 <+42946>:	mov    QWORD PTR [rsp+0x2818],rsi
   0x00000000001d30fa <+42954>:	mov    QWORD PTR [rsp+0x2810],rdx
   0x00000000001d3102 <+42962>:	mov    QWORD PTR [rsp+0x2808],rcx
   0x00000000001d310a <+42970>:	mov    DWORD PTR [rsp+0x2800],eax
   0x00000000001d3111 <+42977>:	lea    rax,[rsp+0x2800]
   0x00000000001d3119 <+42985>:	mov    QWORD PTR [rsp+0x138],rax
   0x00000000001d3121 <+42993>:	jmp    0x1d313e <->+43022>
   0x00000000001d3123 <+42995>:	mov    edi,DWORD PTR [rsp+0x144]
   0x00000000001d312a <+43002>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d312f <+43007>:	and    al,0x1
   0x00000000001d3131 <+43009>:	test   al,0x1
   0x00000000001d3133 <+43011>:	jne    0x1d34bb <->+43915>
   0x00000000001d3139 <+43017>:	jmp    0x1d353a <->+44042>
   0x00000000001d313e <+43022>:	mov    rsi,QWORD PTR [rsp+0x138]
   0x00000000001d3146 <+43030>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d3148 <+43032>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d314c <+43036>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d3150 <+43040>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d3154 <+43044>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d315c <+43052>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d3164 <+43060>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d316c <+43068>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d3173 <+43075>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d317a <+43082>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d3182 <+43090>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d318a <+43098>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d3192 <+43106>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d319a <+43114>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d31a2 <+43122>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d31aa <+43130>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d31b1 <+43137>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d31b9 <+43145>:	mov    QWORD PTR [rsp+0x120],rax
   0x00000000001d31c1 <+43153>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d31c9 <+43161>:	mov    QWORD PTR [rsp+0x128],rax
   0x00000000001d31d1 <+43169>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d31d9 <+43177>:	mov    QWORD PTR [rsp+0x130],rax
   0x00000000001d31e1 <+43185>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d31e9 <+43193>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d31f1 <+43201>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d31f9 <+43209>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d3200 <+43216>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d3208 <+43224>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d3210 <+43232>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d3218 <+43240>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d3220 <+43248>:	mov    rax,rsp
   0x00000000001d3223 <+43251>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d3227 <+43255>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d322b <+43259>:	mov    QWORD PTR [rax],rdi
   0x00000000001d322e <+43262>:	lea    rdi,[rsp+0x1c58]
   0x00000000001d3236 <+43270>:	call   0x511190 <resolve_getattr>
   0x00000000001d323b <+43275>:	mov    rsi,QWORD PTR [rsp+0x120]
   0x00000000001d3243 <+43283>:	mov    rdx,QWORD PTR [rsp+0x128]
   0x00000000001d324b <+43291>:	mov    rcx,QWORD PTR [rsp+0x130]
   0x00000000001d3253 <+43299>:	mov    eax,DWORD PTR [rsp+0x1c58]
   0x00000000001d325a <+43306>:	mov    rdi,QWORD PTR [rsp+0x1c60]
   0x00000000001d3262 <+43314>:	mov    r8,QWORD PTR [rsp+0x1c68]
   0x00000000001d326a <+43322>:	mov    r9,QWORD PTR [rsp+0x1c70]
   0x00000000001d3272 <+43330>:	mov    QWORD PTR [rsp+0x27b8],r9
   0x00000000001d327a <+43338>:	mov    QWORD PTR [rsp+0x27b0],r8
   0x00000000001d3282 <+43346>:	mov    QWORD PTR [rsp+0x27a8],rdi
   0x00000000001d328a <+43354>:	mov    DWORD PTR [rsp+0x27a0],eax
   0x00000000001d3291 <+43361>:	mov    r9,QWORD PTR [rsp+0x27a8]
   0x00000000001d3299 <+43369>:	mov    r8d,DWORD PTR [rsp+0x27a0]
   0x00000000001d32a1 <+43377>:	mov    rdi,QWORD PTR [rsp+0x27b0]
   0x00000000001d32a9 <+43385>:	mov    r10,QWORD PTR [rsp+0x27b8]
   0x00000000001d32b1 <+43393>:	mov    rax,rsp
   0x00000000001d32b4 <+43396>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d32b8 <+43400>:	mov    QWORD PTR [rax],rdi
   0x00000000001d32bb <+43403>:	lea    rdi,[rsp+0x1c10]
   0x00000000001d32c3 <+43411>:	call   0x4bd1f0 <new:target>
   0x00000000001d32c8 <+43416>:	mov    rax,QWORD PTR [rsp+0x1c10]
   0x00000000001d32d0 <+43424>:	mov    ecx,DWORD PTR [rsp+0x1c18]
   0x00000000001d32d7 <+43431>:	mov    rdx,QWORD PTR [rsp+0x1c20]
   0x00000000001d32df <+43439>:	mov    rsi,QWORD PTR [rsp+0x1c28]
   0x00000000001d32e7 <+43447>:	mov    rdi,QWORD PTR [rsp+0x1c30]
   0x00000000001d32ef <+43455>:	mov    r8,QWORD PTR [rsp+0x1c38]
   0x00000000001d32f7 <+43463>:	mov    r9,QWORD PTR [rsp+0x1c40]
   0x00000000001d32ff <+43471>:	mov    r10,QWORD PTR [rsp+0x1c48]
   0x00000000001d3307 <+43479>:	mov    r11,QWORD PTR [rsp+0x1c50]
   0x00000000001d330f <+43487>:	mov    QWORD PTR [rsp+0x2798],r11
   0x00000000001d3317 <+43495>:	mov    QWORD PTR [rsp+0x2790],r10
   0x00000000001d331f <+43503>:	mov    QWORD PTR [rsp+0x2788],r9
   0x00000000001d3327 <+43511>:	mov    QWORD PTR [rsp+0x2780],r8
   0x00000000001d332f <+43519>:	mov    QWORD PTR [rsp+0x2778],rdi
   0x00000000001d3337 <+43527>:	mov    QWORD PTR [rsp+0x2770],rsi
   0x00000000001d333f <+43535>:	mov    QWORD PTR [rsp+0x2768],rdx
   0x00000000001d3347 <+43543>:	mov    DWORD PTR [rsp+0x2760],ecx
   0x00000000001d334e <+43550>:	mov    QWORD PTR [rsp+0x2758],rax
   0x00000000001d3356 <+43558>:	mov    rax,QWORD PTR [rsp+0x2758]
   0x00000000001d335e <+43566>:	mov    ecx,DWORD PTR [rsp+0x2760]
   0x00000000001d3365 <+43573>:	mov    rdx,QWORD PTR [rsp+0x2768]
   0x00000000001d336d <+43581>:	mov    rsi,QWORD PTR [rsp+0x2770]
   0x00000000001d3375 <+43589>:	mov    rdi,QWORD PTR [rsp+0x2778]
   0x00000000001d337d <+43597>:	mov    r8,QWORD PTR [rsp+0x2780]
   0x00000000001d3385 <+43605>:	mov    r9,QWORD PTR [rsp+0x2788]
   0x00000000001d338d <+43613>:	mov    r10,QWORD PTR [rsp+0x2790]
   0x00000000001d3395 <+43621>:	mov    r11,QWORD PTR [rsp+0x2798]
   0x00000000001d339d <+43629>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d33a5 <+43637>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d33ad <+43645>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d33b5 <+43653>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d33bd <+43661>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d33c5 <+43669>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d33cd <+43677>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d33d5 <+43685>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d33dc <+43692>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d33e4 <+43700>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d33ec <+43708>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d33f4 <+43716>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d33fc <+43724>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d3404 <+43732>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d340c <+43740>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d3414 <+43748>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d341c <+43756>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d3424 <+43764>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d342c <+43772>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d3434 <+43780>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d343c <+43788>:	mov    rax,rsp
   0x00000000001d343f <+43791>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d3443 <+43795>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d3447 <+43799>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d344b <+43803>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d344f <+43807>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d3453 <+43811>:	mov    QWORD PTR [rax],rdi
   0x00000000001d3456 <+43814>:	lea    rdi,[rsp+0x1bf0]
   0x00000000001d345e <+43822>:	call   0x3ae5e0 <execute_call>
   0x00000000001d3463 <+43827>:	mov    eax,DWORD PTR [rsp+0x1bf0]
   0x00000000001d346a <+43834>:	mov    rcx,QWORD PTR [rsp+0x1bf8]
   0x00000000001d3472 <+43842>:	mov    rdx,QWORD PTR [rsp+0x1c00]
   0x00000000001d347a <+43850>:	mov    rsi,QWORD PTR [rsp+0x1c08]
   0x00000000001d3482 <+43858>:	mov    QWORD PTR [rsp+0x2750],rsi
   0x00000000001d348a <+43866>:	mov    QWORD PTR [rsp+0x2748],rdx
   0x00000000001d3492 <+43874>:	mov    QWORD PTR [rsp+0x2740],rcx
   0x00000000001d349a <+43882>:	mov    DWORD PTR [rsp+0x2738],eax
   0x00000000001d34a1 <+43889>:	lea    rdi,[rsp+0x2738]
   0x00000000001d34a9 <+43897>:	call   0x343280 <truthy?>
   0x00000000001d34ae <+43902>:	test   al,0x1
   0x00000000001d34b0 <+43904>:	jne    0x1d35d8 <->+44200>
   0x00000000001d34b6 <+43910>:	jmp    0x1d3606 <->+44246>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d34bb <+43915>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d34c3 <+43923>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d34cb <+43931>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d34d3 <+43939>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d34da <+43946>:	lea    rdi,[rsp+0x1c98]
   0x00000000001d34e2 <+43954>:	call   0x340b10 <new>
   0x00000000001d34e7 <+43959>:	mov    eax,DWORD PTR [rsp+0x1c98]
   0x00000000001d34ee <+43966>:	mov    rcx,QWORD PTR [rsp+0x1ca0]
   0x00000000001d34f6 <+43974>:	mov    rdx,QWORD PTR [rsp+0x1ca8]
   0x00000000001d34fe <+43982>:	mov    rsi,QWORD PTR [rsp+0x1cb0]
   0x00000000001d3506 <+43990>:	mov    QWORD PTR [rsp+0x27f8],rsi
   0x00000000001d350e <+43998>:	mov    QWORD PTR [rsp+0x27f0],rdx
   0x00000000001d3516 <+44006>:	mov    QWORD PTR [rsp+0x27e8],rcx
   0x00000000001d351e <+44014>:	mov    DWORD PTR [rsp+0x27e0],eax
   0x00000000001d3525 <+44021>:	lea    rax,[rsp+0x27e0]
   0x00000000001d352d <+44029>:	mov    QWORD PTR [rsp+0x138],rax
   0x00000000001d3535 <+44037>:	jmp    0x1d313e <->+43022>
   0x00000000001d353a <+44042>:	mov    edi,DWORD PTR [rsp+0x144]
   0x00000000001d3541 <+44049>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d3546 <+44054>:	and    al,0x1
   0x00000000001d3548 <+44056>:	test   al,0x1
   0x00000000001d354a <+44058>:	jne    0x1d3551 <->+44065>
   0x00000000001d354c <+44060>:	jmp    0x1d35d8 <->+44200>
   0x00000000001d3551 <+44065>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d3559 <+44073>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d3561 <+44081>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d3569 <+44089>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d3571 <+44097>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d3578 <+44104>:	lea    rdi,[rsp+0x1cb8]
   0x00000000001d3580 <+44112>:	call   0x340cb0 <new>
   0x00000000001d3585 <+44117>:	mov    eax,DWORD PTR [rsp+0x1cb8]
   0x00000000001d358c <+44124>:	mov    rcx,QWORD PTR [rsp+0x1cc0]
   0x00000000001d3594 <+44132>:	mov    rdx,QWORD PTR [rsp+0x1cc8]
   0x00000000001d359c <+44140>:	mov    rsi,QWORD PTR [rsp+0x1cd0]
   0x00000000001d35a4 <+44148>:	mov    QWORD PTR [rsp+0x27d8],rsi
   0x00000000001d35ac <+44156>:	mov    QWORD PTR [rsp+0x27d0],rdx
   0x00000000001d35b4 <+44164>:	mov    QWORD PTR [rsp+0x27c8],rcx
   0x00000000001d35bc <+44172>:	mov    DWORD PTR [rsp+0x27c0],eax
   0x00000000001d35c3 <+44179>:	lea    rax,[rsp+0x27c0]
   0x00000000001d35cb <+44187>:	mov    QWORD PTR [rsp+0x138],rax
   0x00000000001d35d3 <+44195>:	jmp    0x1d313e <->+43022>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d35d8 <+44200>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d35e0 <+44208>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d35e8 <+44216>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d35f0 <+44224>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d35f8 <+44232>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d35ff <+44239>:	call   0x326080 <<<>
   0x00000000001d3604 <+44244>:	jmp    0x1d3608 <->+44248>
   0x00000000001d3606 <+44246>:	jmp    0x1d3608 <->+44248>
   0x00000000001d3608 <+44248>:	jmp    0x1d2f3f <->+42511>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001d360d <+44253>:	jmp    0x1ce97a <->+24650>

245	    when Iterable, ::Iterator
   0x00000000001d3612 <+44258>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d361a <+44266>:	mov    QWORD PTR [rsp+0x110],rax
   0x00000000001d3622 <+44274>:	mov    ecx,DWORD PTR [rax]
   0x00000000001d3624 <+44276>:	mov    DWORD PTR [rsp+0x11c],ecx
   0x00000000001d362b <+44283>:	mov    eax,0x193
   0x00000000001d3630 <+44288>:	cmp    eax,ecx
   0x00000000001d3632 <+44290>:	je     0x1d367b <->+44363>
   0x00000000001d3634 <+44292>:	jmp    0x1d367d <->+44365>

247	    when String
   0x00000000001d3636 <+44294>:	mov    eax,0x1
   0x00000000001d363b <+44299>:	cmp    eax,DWORD PTR [rsp+0x3820]
   0x00000000001d3642 <+44306>:	je     0x1d441d <->+47853>
   0x00000000001d3648 <+44312>:	jmp    0x1d4438 <->+47880>

245	    when Iterable, ::Iterator
   0x00000000001d364d <+44317>:	mov    al,0x1
   0x00000000001d364f <+44319>:	mov    BYTE PTR [rsp+0x10f],al
   0x00000000001d3656 <+44326>:	jmp    0x1d366e <->+44350>
   0x00000000001d3658 <+44328>:	mov    eax,0x193
   0x00000000001d365d <+44333>:	cmp    eax,DWORD PTR [rsp+0x3820]
   0x00000000001d3664 <+44340>:	sete   al
   0x00000000001d3667 <+44343>:	mov    BYTE PTR [rsp+0x10f],al
   0x00000000001d366e <+44350>:	mov    al,BYTE PTR [rsp+0x10f]
   0x00000000001d3675 <+44357>:	test   al,0x1
   0x00000000001d3677 <+44359>:	jne    0x1d3612 <->+44258>
   0x00000000001d3679 <+44361>:	jmp    0x1d3636 <->+44294>

246	      object.each { |value| yield value }
   0x00000000001d367b <+44363>:	jmp    0x1d3696 <->+44390>
   0x00000000001d367d <+44365>:	mov    ecx,DWORD PTR [rsp+0x11c]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d3684 <+44372>:	mov    eax,0x12a
   0x00000000001d3689 <+44377>:	cmp    eax,ecx
   0x00000000001d368b <+44379>:	je     0x1d3d34 <->+46084>
   0x00000000001d3691 <+44385>:	jmp    0x1d3d41 <->+46097>
   0x00000000001d3696 <+44390>:	mov    rsi,QWORD PTR [rsp+0x110]
   0x00000000001d369e <+44398>:	lea    rdi,[rsp+0x1de8]

/usr/lib/crystal/iterator.cr:
636	      value = self.next
   0x00000000001d36a6 <+44406>:	call   0x356ed0 <next>
   0x00000000001d36ab <+44411>:	mov    eax,DWORD PTR [rsp+0x1de8]
   0x00000000001d36b2 <+44418>:	mov    rcx,QWORD PTR [rsp+0x1df0]
   0x00000000001d36ba <+44426>:	mov    rdx,QWORD PTR [rsp+0x1df8]
   0x00000000001d36c2 <+44434>:	mov    rsi,QWORD PTR [rsp+0x1e00]
   0x00000000001d36ca <+44442>:	mov    QWORD PTR [rsp+0x26f0],rsi
   0x00000000001d36d2 <+44450>:	mov    QWORD PTR [rsp+0x26e8],rdx
   0x00000000001d36da <+44458>:	mov    QWORD PTR [rsp+0x26e0],rcx
   0x00000000001d36e2 <+44466>:	mov    DWORD PTR [rsp+0x26d8],eax
   0x00000000001d36e9 <+44473>:	mov    eax,DWORD PTR [rsp+0x26d8]
   0x00000000001d36f0 <+44480>:	mov    rcx,QWORD PTR [rsp+0x26e0]
   0x00000000001d36f8 <+44488>:	mov    rdx,QWORD PTR [rsp+0x26e8]
   0x00000000001d3700 <+44496>:	mov    rsi,QWORD PTR [rsp+0x26f0]
   0x00000000001d3708 <+44504>:	mov    QWORD PTR [rsp+0x2710],rsi
   0x00000000001d3710 <+44512>:	mov    QWORD PTR [rsp+0x2708],rdx
   0x00000000001d3718 <+44520>:	mov    QWORD PTR [rsp+0x2700],rcx
   0x00000000001d3720 <+44528>:	mov    DWORD PTR [rsp+0x26f8],eax
   0x00000000001d3727 <+44535>:	mov    eax,DWORD PTR [rsp+0x26f8]
   0x00000000001d372e <+44542>:	mov    rcx,QWORD PTR [rsp+0x2700]
   0x00000000001d3736 <+44550>:	mov    rdx,QWORD PTR [rsp+0x2708]
   0x00000000001d373e <+44558>:	mov    rsi,QWORD PTR [rsp+0x2710]
   0x00000000001d3746 <+44566>:	mov    QWORD PTR [rsp+0x2730],rsi
   0x00000000001d374e <+44574>:	mov    QWORD PTR [rsp+0x2728],rdx
   0x00000000001d3756 <+44582>:	mov    QWORD PTR [rsp+0x2720],rcx
   0x00000000001d375e <+44590>:	mov    DWORD PTR [rsp+0x2718],eax
   0x00000000001d3765 <+44597>:	mov    eax,DWORD PTR [rsp+0x2718]
   0x00000000001d376c <+44604>:	mov    rcx,QWORD PTR [rsp+0x2720]
   0x00000000001d3774 <+44612>:	mov    rdx,QWORD PTR [rsp+0x2728]
   0x00000000001d377c <+44620>:	mov    rsi,QWORD PTR [rsp+0x2730]
   0x00000000001d3784 <+44628>:	mov    DWORD PTR [rsp+0x3840],0x4ed
   0x00000000001d378f <+44639>:	mov    QWORD PTR [rsp+0x3860],rsi
   0x00000000001d3797 <+44647>:	mov    QWORD PTR [rsp+0x3858],rdx
   0x00000000001d379f <+44655>:	mov    QWORD PTR [rsp+0x3850],rcx
   0x00000000001d37a7 <+44663>:	mov    DWORD PTR [rsp+0x3848],eax
   0x00000000001d37ae <+44670>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d37b5 <+44677>:	mov    DWORD PTR [rsp+0x108],ecx
   0x00000000001d37bc <+44684>:	mov    eax,0x4ed
   0x00000000001d37c1 <+44689>:	cmp    eax,ecx
   0x00000000001d37c3 <+44691>:	sete   al
   0x00000000001d37c6 <+44694>:	and    al,0x1
   0x00000000001d37c8 <+44696>:	test   al,0x1
   0x00000000001d37ca <+44698>:	jne    0x1d37ce <->+44702>
   0x00000000001d37cc <+44700>:	jmp    0x1d384a <->+44826>
   0x00000000001d37ce <+44702>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d37d6 <+44710>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d37de <+44718>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d37e6 <+44726>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d37ed <+44733>:	lea    rdi,[rsp+0x1d88]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d37f5 <+44741>:	call   0x339d20 <new>
   0x00000000001d37fa <+44746>:	mov    eax,DWORD PTR [rsp+0x1d88]
   0x00000000001d3801 <+44753>:	mov    rcx,QWORD PTR [rsp+0x1d90]
   0x00000000001d3809 <+44761>:	mov    rdx,QWORD PTR [rsp+0x1d98]
   0x00000000001d3811 <+44769>:	mov    rsi,QWORD PTR [rsp+0x1da0]
   0x00000000001d3819 <+44777>:	mov    QWORD PTR [rsp+0x26d0],rsi
   0x00000000001d3821 <+44785>:	mov    QWORD PTR [rsp+0x26c8],rdx
   0x00000000001d3829 <+44793>:	mov    QWORD PTR [rsp+0x26c0],rcx
   0x00000000001d3831 <+44801>:	mov    DWORD PTR [rsp+0x26b8],eax
   0x00000000001d3838 <+44808>:	lea    rax,[rsp+0x26b8]
   0x00000000001d3840 <+44816>:	mov    QWORD PTR [rsp+0x100],rax
   0x00000000001d3848 <+44824>:	jmp    0x1d3865 <->+44853>
   0x00000000001d384a <+44826>:	mov    edi,DWORD PTR [rsp+0x108]
   0x00000000001d3851 <+44833>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d3856 <+44838>:	and    al,0x1
   0x00000000001d3858 <+44840>:	test   al,0x1
   0x00000000001d385a <+44842>:	jne    0x1d3be2 <->+45746>
   0x00000000001d3860 <+44848>:	jmp    0x1d3c61 <->+45873>
   0x00000000001d3865 <+44853>:	mov    rsi,QWORD PTR [rsp+0x100]
   0x00000000001d386d <+44861>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d386f <+44863>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d3873 <+44867>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d3877 <+44871>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d387b <+44875>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d3883 <+44883>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d388b <+44891>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d3893 <+44899>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d389a <+44906>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d38a1 <+44913>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d38a9 <+44921>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d38b1 <+44929>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d38b9 <+44937>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d38c1 <+44945>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d38c9 <+44953>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d38d1 <+44961>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d38d8 <+44968>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d38e0 <+44976>:	mov    QWORD PTR [rsp+0xe8],rax
   0x00000000001d38e8 <+44984>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d38f0 <+44992>:	mov    QWORD PTR [rsp+0xf0],rax
   0x00000000001d38f8 <+45000>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d3900 <+45008>:	mov    QWORD PTR [rsp+0xf8],rax
   0x00000000001d3908 <+45016>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d3910 <+45024>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d3918 <+45032>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d3920 <+45040>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d3927 <+45047>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d392f <+45055>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d3937 <+45063>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d393f <+45071>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d3947 <+45079>:	mov    rax,rsp
   0x00000000001d394a <+45082>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d394e <+45086>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d3952 <+45090>:	mov    QWORD PTR [rax],rdi
   0x00000000001d3955 <+45093>:	lea    rdi,[rsp+0x1d68]
   0x00000000001d395d <+45101>:	call   0x511190 <resolve_getattr>
   0x00000000001d3962 <+45106>:	mov    rsi,QWORD PTR [rsp+0xe8]
   0x00000000001d396a <+45114>:	mov    rdx,QWORD PTR [rsp+0xf0]
   0x00000000001d3972 <+45122>:	mov    rcx,QWORD PTR [rsp+0xf8]
   0x00000000001d397a <+45130>:	mov    eax,DWORD PTR [rsp+0x1d68]
   0x00000000001d3981 <+45137>:	mov    rdi,QWORD PTR [rsp+0x1d70]
   0x00000000001d3989 <+45145>:	mov    r8,QWORD PTR [rsp+0x1d78]
   0x00000000001d3991 <+45153>:	mov    r9,QWORD PTR [rsp+0x1d80]
   0x00000000001d3999 <+45161>:	mov    QWORD PTR [rsp+0x2670],r9
   0x00000000001d39a1 <+45169>:	mov    QWORD PTR [rsp+0x2668],r8
   0x00000000001d39a9 <+45177>:	mov    QWORD PTR [rsp+0x2660],rdi
   0x00000000001d39b1 <+45185>:	mov    DWORD PTR [rsp+0x2658],eax
   0x00000000001d39b8 <+45192>:	mov    r9,QWORD PTR [rsp+0x2660]
   0x00000000001d39c0 <+45200>:	mov    r8d,DWORD PTR [rsp+0x2658]
   0x00000000001d39c8 <+45208>:	mov    rdi,QWORD PTR [rsp+0x2668]
   0x00000000001d39d0 <+45216>:	mov    r10,QWORD PTR [rsp+0x2670]
   0x00000000001d39d8 <+45224>:	mov    rax,rsp
   0x00000000001d39db <+45227>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d39df <+45231>:	mov    QWORD PTR [rax],rdi
   0x00000000001d39e2 <+45234>:	lea    rdi,[rsp+0x1d20]
   0x00000000001d39ea <+45242>:	call   0x4bd1f0 <new:target>
   0x00000000001d39ef <+45247>:	mov    rax,QWORD PTR [rsp+0x1d20]
   0x00000000001d39f7 <+45255>:	mov    ecx,DWORD PTR [rsp+0x1d28]
   0x00000000001d39fe <+45262>:	mov    rdx,QWORD PTR [rsp+0x1d30]
   0x00000000001d3a06 <+45270>:	mov    rsi,QWORD PTR [rsp+0x1d38]
   0x00000000001d3a0e <+45278>:	mov    rdi,QWORD PTR [rsp+0x1d40]
   0x00000000001d3a16 <+45286>:	mov    r8,QWORD PTR [rsp+0x1d48]
   0x00000000001d3a1e <+45294>:	mov    r9,QWORD PTR [rsp+0x1d50]
   0x00000000001d3a26 <+45302>:	mov    r10,QWORD PTR [rsp+0x1d58]
   0x00000000001d3a2e <+45310>:	mov    r11,QWORD PTR [rsp+0x1d60]
   0x00000000001d3a36 <+45318>:	mov    QWORD PTR [rsp+0x2650],r11
   0x00000000001d3a3e <+45326>:	mov    QWORD PTR [rsp+0x2648],r10
   0x00000000001d3a46 <+45334>:	mov    QWORD PTR [rsp+0x2640],r9
   0x00000000001d3a4e <+45342>:	mov    QWORD PTR [rsp+0x2638],r8
   0x00000000001d3a56 <+45350>:	mov    QWORD PTR [rsp+0x2630],rdi
   0x00000000001d3a5e <+45358>:	mov    QWORD PTR [rsp+0x2628],rsi
   0x00000000001d3a66 <+45366>:	mov    QWORD PTR [rsp+0x2620],rdx
   0x00000000001d3a6e <+45374>:	mov    DWORD PTR [rsp+0x2618],ecx
   0x00000000001d3a75 <+45381>:	mov    QWORD PTR [rsp+0x2610],rax
   0x00000000001d3a7d <+45389>:	mov    rax,QWORD PTR [rsp+0x2610]
   0x00000000001d3a85 <+45397>:	mov    ecx,DWORD PTR [rsp+0x2618]
   0x00000000001d3a8c <+45404>:	mov    rdx,QWORD PTR [rsp+0x2620]
   0x00000000001d3a94 <+45412>:	mov    rsi,QWORD PTR [rsp+0x2628]
   0x00000000001d3a9c <+45420>:	mov    rdi,QWORD PTR [rsp+0x2630]
   0x00000000001d3aa4 <+45428>:	mov    r8,QWORD PTR [rsp+0x2638]
   0x00000000001d3aac <+45436>:	mov    r9,QWORD PTR [rsp+0x2640]
   0x00000000001d3ab4 <+45444>:	mov    r10,QWORD PTR [rsp+0x2648]
   0x00000000001d3abc <+45452>:	mov    r11,QWORD PTR [rsp+0x2650]
   0x00000000001d3ac4 <+45460>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d3acc <+45468>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d3ad4 <+45476>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d3adc <+45484>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d3ae4 <+45492>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d3aec <+45500>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d3af4 <+45508>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d3afc <+45516>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d3b03 <+45523>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d3b0b <+45531>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d3b13 <+45539>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d3b1b <+45547>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d3b23 <+45555>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d3b2b <+45563>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d3b33 <+45571>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d3b3b <+45579>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d3b43 <+45587>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d3b4b <+45595>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d3b53 <+45603>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d3b5b <+45611>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d3b63 <+45619>:	mov    rax,rsp
   0x00000000001d3b66 <+45622>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d3b6a <+45626>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d3b6e <+45630>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d3b72 <+45634>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d3b76 <+45638>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d3b7a <+45642>:	mov    QWORD PTR [rax],rdi
   0x00000000001d3b7d <+45645>:	lea    rdi,[rsp+0x1d00]
   0x00000000001d3b85 <+45653>:	call   0x3ae5e0 <execute_call>
   0x00000000001d3b8a <+45658>:	mov    eax,DWORD PTR [rsp+0x1d00]
   0x00000000001d3b91 <+45665>:	mov    rcx,QWORD PTR [rsp+0x1d08]
   0x00000000001d3b99 <+45673>:	mov    rdx,QWORD PTR [rsp+0x1d10]
   0x00000000001d3ba1 <+45681>:	mov    rsi,QWORD PTR [rsp+0x1d18]
   0x00000000001d3ba9 <+45689>:	mov    QWORD PTR [rsp+0x2608],rsi
   0x00000000001d3bb1 <+45697>:	mov    QWORD PTR [rsp+0x2600],rdx
   0x00000000001d3bb9 <+45705>:	mov    QWORD PTR [rsp+0x25f8],rcx
   0x00000000001d3bc1 <+45713>:	mov    DWORD PTR [rsp+0x25f0],eax
   0x00000000001d3bc8 <+45720>:	lea    rdi,[rsp+0x25f0]
   0x00000000001d3bd0 <+45728>:	call   0x343280 <truthy?>
   0x00000000001d3bd5 <+45733>:	test   al,0x1
   0x00000000001d3bd7 <+45735>:	jne    0x1d3cff <->+46031>
   0x00000000001d3bdd <+45741>:	jmp    0x1d3d2d <->+46077>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d3be2 <+45746>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d3bea <+45754>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d3bf2 <+45762>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d3bfa <+45770>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d3c01 <+45777>:	lea    rdi,[rsp+0x1da8]
   0x00000000001d3c09 <+45785>:	call   0x340b10 <new>
   0x00000000001d3c0e <+45790>:	mov    eax,DWORD PTR [rsp+0x1da8]
   0x00000000001d3c15 <+45797>:	mov    rcx,QWORD PTR [rsp+0x1db0]
   0x00000000001d3c1d <+45805>:	mov    rdx,QWORD PTR [rsp+0x1db8]
   0x00000000001d3c25 <+45813>:	mov    rsi,QWORD PTR [rsp+0x1dc0]
   0x00000000001d3c2d <+45821>:	mov    QWORD PTR [rsp+0x26b0],rsi
   0x00000000001d3c35 <+45829>:	mov    QWORD PTR [rsp+0x26a8],rdx
   0x00000000001d3c3d <+45837>:	mov    QWORD PTR [rsp+0x26a0],rcx
   0x00000000001d3c45 <+45845>:	mov    DWORD PTR [rsp+0x2698],eax
   0x00000000001d3c4c <+45852>:	lea    rax,[rsp+0x2698]
   0x00000000001d3c54 <+45860>:	mov    QWORD PTR [rsp+0x100],rax
   0x00000000001d3c5c <+45868>:	jmp    0x1d3865 <->+44853>
   0x00000000001d3c61 <+45873>:	mov    edi,DWORD PTR [rsp+0x108]
   0x00000000001d3c68 <+45880>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d3c6d <+45885>:	and    al,0x1
   0x00000000001d3c6f <+45887>:	test   al,0x1
   0x00000000001d3c71 <+45889>:	jne    0x1d3c78 <->+45896>
   0x00000000001d3c73 <+45891>:	jmp    0x1d3cff <->+46031>
   0x00000000001d3c78 <+45896>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d3c80 <+45904>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d3c88 <+45912>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d3c90 <+45920>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d3c98 <+45928>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d3c9f <+45935>:	lea    rdi,[rsp+0x1dc8]
   0x00000000001d3ca7 <+45943>:	call   0x340cb0 <new>
   0x00000000001d3cac <+45948>:	mov    eax,DWORD PTR [rsp+0x1dc8]
   0x00000000001d3cb3 <+45955>:	mov    rcx,QWORD PTR [rsp+0x1dd0]
   0x00000000001d3cbb <+45963>:	mov    rdx,QWORD PTR [rsp+0x1dd8]
   0x00000000001d3cc3 <+45971>:	mov    rsi,QWORD PTR [rsp+0x1de0]
   0x00000000001d3ccb <+45979>:	mov    QWORD PTR [rsp+0x2690],rsi
   0x00000000001d3cd3 <+45987>:	mov    QWORD PTR [rsp+0x2688],rdx
   0x00000000001d3cdb <+45995>:	mov    QWORD PTR [rsp+0x2680],rcx
   0x00000000001d3ce3 <+46003>:	mov    DWORD PTR [rsp+0x2678],eax
   0x00000000001d3cea <+46010>:	lea    rax,[rsp+0x2678]
   0x00000000001d3cf2 <+46018>:	mov    QWORD PTR [rsp+0x100],rax
   0x00000000001d3cfa <+46026>:	jmp    0x1d3865 <->+44853>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d3cff <+46031>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d3d07 <+46039>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d3d0f <+46047>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d3d17 <+46055>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d3d1f <+46063>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d3d26 <+46070>:	call   0x326080 <<<>
   0x00000000001d3d2b <+46075>:	jmp    0x1d3d2f <->+46079>
   0x00000000001d3d2d <+46077>:	jmp    0x1d3d2f <->+46079>
   0x00000000001d3d2f <+46079>:	jmp    0x1d3696 <->+44390>

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001d3d34 <+46084>:	mov    DWORD PTR [rsp+0x25c8],0x0
   0x00000000001d3d3f <+46095>:	jmp    0x1d3d41 <->+46097>
   0x00000000001d3d41 <+46097>:	mov    rdi,QWORD PTR [rsp+0x110]

574	    while i < size
   0x00000000001d3d49 <+46105>:	mov    eax,DWORD PTR [rsp+0x25c8]
   0x00000000001d3d50 <+46112>:	mov    DWORD PTR [rsp+0xe4],eax
   0x00000000001d3d57 <+46119>:	call   0x334030 <size>
   0x00000000001d3d5c <+46124>:	mov    ecx,eax
   0x00000000001d3d5e <+46126>:	mov    eax,DWORD PTR [rsp+0xe4]
   0x00000000001d3d65 <+46133>:	cmp    eax,ecx
   0x00000000001d3d67 <+46135>:	jge    0x1d3e7f <->+46415>
   0x00000000001d3d6d <+46141>:	mov    rsi,QWORD PTR [rsp+0x110]
   0x00000000001d3d75 <+46149>:	mov    eax,DWORD PTR [rsp+0x25c8]
   0x00000000001d3d7c <+46156>:	mov    DWORD PTR [rsp+0x25cc],eax
   0x00000000001d3d83 <+46163>:	mov    edx,DWORD PTR [rsp+0x25cc]
   0x00000000001d3d8a <+46170>:	lea    rdi,[rsp+0x1ef0]

495	      yield unsafe_fetch(i)
   0x00000000001d3d92 <+46178>:	call   0x334050 <unsafe_fetch>
   0x00000000001d3d97 <+46183>:	mov    eax,DWORD PTR [rsp+0x1ef0]
   0x00000000001d3d9e <+46190>:	mov    rcx,QWORD PTR [rsp+0x1ef8]
   0x00000000001d3da6 <+46198>:	mov    rdx,QWORD PTR [rsp+0x1f00]
   0x00000000001d3dae <+46206>:	mov    rsi,QWORD PTR [rsp+0x1f08]
   0x00000000001d3db6 <+46214>:	mov    QWORD PTR [rsp+0x25c0],rsi
   0x00000000001d3dbe <+46222>:	mov    QWORD PTR [rsp+0x25b8],rdx
   0x00000000001d3dc6 <+46230>:	mov    QWORD PTR [rsp+0x25b0],rcx
   0x00000000001d3dce <+46238>:	mov    DWORD PTR [rsp+0x25a8],eax
   0x00000000001d3dd5 <+46245>:	mov    eax,DWORD PTR [rsp+0x25a8]
   0x00000000001d3ddc <+46252>:	mov    rcx,QWORD PTR [rsp+0x25b0]
   0x00000000001d3de4 <+46260>:	mov    rdx,QWORD PTR [rsp+0x25b8]
   0x00000000001d3dec <+46268>:	mov    rsi,QWORD PTR [rsp+0x25c0]
   0x00000000001d3df4 <+46276>:	mov    QWORD PTR [rsp+0x25e8],rsi
   0x00000000001d3dfc <+46284>:	mov    QWORD PTR [rsp+0x25e0],rdx
   0x00000000001d3e04 <+46292>:	mov    QWORD PTR [rsp+0x25d8],rcx
   0x00000000001d3e0c <+46300>:	mov    DWORD PTR [rsp+0x25d0],eax
   0x00000000001d3e13 <+46307>:	mov    eax,DWORD PTR [rsp+0x25d0]
   0x00000000001d3e1a <+46314>:	mov    rcx,QWORD PTR [rsp+0x25d8]
   0x00000000001d3e22 <+46322>:	mov    rdx,QWORD PTR [rsp+0x25e0]
   0x00000000001d3e2a <+46330>:	mov    rsi,QWORD PTR [rsp+0x25e8]
   0x00000000001d3e32 <+46338>:	mov    DWORD PTR [rsp+0x3840],0x4ed
   0x00000000001d3e3d <+46349>:	mov    QWORD PTR [rsp+0x3860],rsi
   0x00000000001d3e45 <+46357>:	mov    QWORD PTR [rsp+0x3858],rdx
   0x00000000001d3e4d <+46365>:	mov    QWORD PTR [rsp+0x3850],rcx
   0x00000000001d3e55 <+46373>:	mov    DWORD PTR [rsp+0x3848],eax
   0x00000000001d3e5c <+46380>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d3e63 <+46387>:	mov    DWORD PTR [rsp+0xe0],ecx
   0x00000000001d3e6a <+46394>:	mov    eax,0x4ed
   0x00000000001d3e6f <+46399>:	cmp    eax,ecx
   0x00000000001d3e71 <+46401>:	sete   al
   0x00000000001d3e74 <+46404>:	and    al,0x1
   0x00000000001d3e76 <+46406>:	test   al,0x1
   0x00000000001d3e78 <+46408>:	jne    0x1d3e84 <->+46420>
   0x00000000001d3e7a <+46410>:	jmp    0x1d3f00 <->+46544>

575	      yield i
576	      i += 1
   0x00000000001d3e7f <+46415>:	jmp    0x1d4416 <->+47846>

495	      yield unsafe_fetch(i)
   0x00000000001d3e84 <+46420>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d3e8c <+46428>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d3e94 <+46436>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d3e9c <+46444>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d3ea3 <+46451>:	lea    rdi,[rsp+0x1e90]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d3eab <+46459>:	call   0x339d20 <new>
   0x00000000001d3eb0 <+46464>:	mov    eax,DWORD PTR [rsp+0x1e90]
   0x00000000001d3eb7 <+46471>:	mov    rcx,QWORD PTR [rsp+0x1e98]
   0x00000000001d3ebf <+46479>:	mov    rdx,QWORD PTR [rsp+0x1ea0]
   0x00000000001d3ec7 <+46487>:	mov    rsi,QWORD PTR [rsp+0x1ea8]
   0x00000000001d3ecf <+46495>:	mov    QWORD PTR [rsp+0x25a0],rsi
   0x00000000001d3ed7 <+46503>:	mov    QWORD PTR [rsp+0x2598],rdx
   0x00000000001d3edf <+46511>:	mov    QWORD PTR [rsp+0x2590],rcx
   0x00000000001d3ee7 <+46519>:	mov    DWORD PTR [rsp+0x2588],eax
   0x00000000001d3eee <+46526>:	lea    rax,[rsp+0x2588]
   0x00000000001d3ef6 <+46534>:	mov    QWORD PTR [rsp+0xd8],rax
   0x00000000001d3efe <+46542>:	jmp    0x1d3f1b <->+46571>
   0x00000000001d3f00 <+46544>:	mov    edi,DWORD PTR [rsp+0xe0]
   0x00000000001d3f07 <+46551>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d3f0c <+46556>:	and    al,0x1
   0x00000000001d3f0e <+46558>:	test   al,0x1
   0x00000000001d3f10 <+46560>:	jne    0x1d4298 <->+47464>
   0x00000000001d3f16 <+46566>:	jmp    0x1d4317 <->+47591>
   0x00000000001d3f1b <+46571>:	mov    rsi,QWORD PTR [rsp+0xd8]
   0x00000000001d3f23 <+46579>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d3f25 <+46581>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d3f29 <+46585>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d3f2d <+46589>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d3f31 <+46593>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d3f39 <+46601>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d3f41 <+46609>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d3f49 <+46617>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d3f50 <+46624>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d3f57 <+46631>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d3f5f <+46639>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d3f67 <+46647>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d3f6f <+46655>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d3f77 <+46663>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d3f7f <+46671>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d3f87 <+46679>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d3f8e <+46686>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d3f96 <+46694>:	mov    QWORD PTR [rsp+0xc0],rax
   0x00000000001d3f9e <+46702>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d3fa6 <+46710>:	mov    QWORD PTR [rsp+0xc8],rax
   0x00000000001d3fae <+46718>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d3fb6 <+46726>:	mov    QWORD PTR [rsp+0xd0],rax
   0x00000000001d3fbe <+46734>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d3fc6 <+46742>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d3fce <+46750>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d3fd6 <+46758>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d3fdd <+46765>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d3fe5 <+46773>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d3fed <+46781>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d3ff5 <+46789>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d3ffd <+46797>:	mov    rax,rsp
   0x00000000001d4000 <+46800>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d4004 <+46804>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4008 <+46808>:	mov    QWORD PTR [rax],rdi
   0x00000000001d400b <+46811>:	lea    rdi,[rsp+0x1e70]
   0x00000000001d4013 <+46819>:	call   0x511190 <resolve_getattr>
   0x00000000001d4018 <+46824>:	mov    rsi,QWORD PTR [rsp+0xc0]
   0x00000000001d4020 <+46832>:	mov    rdx,QWORD PTR [rsp+0xc8]
   0x00000000001d4028 <+46840>:	mov    rcx,QWORD PTR [rsp+0xd0]
   0x00000000001d4030 <+46848>:	mov    eax,DWORD PTR [rsp+0x1e70]
   0x00000000001d4037 <+46855>:	mov    rdi,QWORD PTR [rsp+0x1e78]
   0x00000000001d403f <+46863>:	mov    r8,QWORD PTR [rsp+0x1e80]
   0x00000000001d4047 <+46871>:	mov    r9,QWORD PTR [rsp+0x1e88]
   0x00000000001d404f <+46879>:	mov    QWORD PTR [rsp+0x2540],r9
   0x00000000001d4057 <+46887>:	mov    QWORD PTR [rsp+0x2538],r8
   0x00000000001d405f <+46895>:	mov    QWORD PTR [rsp+0x2530],rdi
   0x00000000001d4067 <+46903>:	mov    DWORD PTR [rsp+0x2528],eax
   0x00000000001d406e <+46910>:	mov    r9,QWORD PTR [rsp+0x2530]
   0x00000000001d4076 <+46918>:	mov    r8d,DWORD PTR [rsp+0x2528]
   0x00000000001d407e <+46926>:	mov    rdi,QWORD PTR [rsp+0x2538]
   0x00000000001d4086 <+46934>:	mov    r10,QWORD PTR [rsp+0x2540]
   0x00000000001d408e <+46942>:	mov    rax,rsp
   0x00000000001d4091 <+46945>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4095 <+46949>:	mov    QWORD PTR [rax],rdi
   0x00000000001d4098 <+46952>:	lea    rdi,[rsp+0x1e28]
   0x00000000001d40a0 <+46960>:	call   0x4bd1f0 <new:target>
   0x00000000001d40a5 <+46965>:	mov    rax,QWORD PTR [rsp+0x1e28]
   0x00000000001d40ad <+46973>:	mov    ecx,DWORD PTR [rsp+0x1e30]
   0x00000000001d40b4 <+46980>:	mov    rdx,QWORD PTR [rsp+0x1e38]
   0x00000000001d40bc <+46988>:	mov    rsi,QWORD PTR [rsp+0x1e40]
   0x00000000001d40c4 <+46996>:	mov    rdi,QWORD PTR [rsp+0x1e48]
   0x00000000001d40cc <+47004>:	mov    r8,QWORD PTR [rsp+0x1e50]
   0x00000000001d40d4 <+47012>:	mov    r9,QWORD PTR [rsp+0x1e58]
   0x00000000001d40dc <+47020>:	mov    r10,QWORD PTR [rsp+0x1e60]
   0x00000000001d40e4 <+47028>:	mov    r11,QWORD PTR [rsp+0x1e68]
   0x00000000001d40ec <+47036>:	mov    QWORD PTR [rsp+0x2520],r11
   0x00000000001d40f4 <+47044>:	mov    QWORD PTR [rsp+0x2518],r10
   0x00000000001d40fc <+47052>:	mov    QWORD PTR [rsp+0x2510],r9
   0x00000000001d4104 <+47060>:	mov    QWORD PTR [rsp+0x2508],r8
   0x00000000001d410c <+47068>:	mov    QWORD PTR [rsp+0x2500],rdi
   0x00000000001d4114 <+47076>:	mov    QWORD PTR [rsp+0x24f8],rsi
   0x00000000001d411c <+47084>:	mov    QWORD PTR [rsp+0x24f0],rdx
   0x00000000001d4124 <+47092>:	mov    DWORD PTR [rsp+0x24e8],ecx
   0x00000000001d412b <+47099>:	mov    QWORD PTR [rsp+0x24e0],rax
   0x00000000001d4133 <+47107>:	mov    rax,QWORD PTR [rsp+0x24e0]
   0x00000000001d413b <+47115>:	mov    ecx,DWORD PTR [rsp+0x24e8]
   0x00000000001d4142 <+47122>:	mov    rdx,QWORD PTR [rsp+0x24f0]
   0x00000000001d414a <+47130>:	mov    rsi,QWORD PTR [rsp+0x24f8]
   0x00000000001d4152 <+47138>:	mov    rdi,QWORD PTR [rsp+0x2500]
   0x00000000001d415a <+47146>:	mov    r8,QWORD PTR [rsp+0x2508]
   0x00000000001d4162 <+47154>:	mov    r9,QWORD PTR [rsp+0x2510]
   0x00000000001d416a <+47162>:	mov    r10,QWORD PTR [rsp+0x2518]
   0x00000000001d4172 <+47170>:	mov    r11,QWORD PTR [rsp+0x2520]
   0x00000000001d417a <+47178>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d4182 <+47186>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d418a <+47194>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d4192 <+47202>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d419a <+47210>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d41a2 <+47218>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d41aa <+47226>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d41b2 <+47234>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d41b9 <+47241>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d41c1 <+47249>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d41c9 <+47257>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d41d1 <+47265>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d41d9 <+47273>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d41e1 <+47281>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d41e9 <+47289>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d41f1 <+47297>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d41f9 <+47305>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d4201 <+47313>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d4209 <+47321>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d4211 <+47329>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d4219 <+47337>:	mov    rax,rsp
   0x00000000001d421c <+47340>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d4220 <+47344>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d4224 <+47348>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d4228 <+47352>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d422c <+47356>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4230 <+47360>:	mov    QWORD PTR [rax],rdi
   0x00000000001d4233 <+47363>:	lea    rdi,[rsp+0x1e08]
   0x00000000001d423b <+47371>:	call   0x3ae5e0 <execute_call>
   0x00000000001d4240 <+47376>:	mov    eax,DWORD PTR [rsp+0x1e08]
   0x00000000001d4247 <+47383>:	mov    rcx,QWORD PTR [rsp+0x1e10]
   0x00000000001d424f <+47391>:	mov    rdx,QWORD PTR [rsp+0x1e18]
   0x00000000001d4257 <+47399>:	mov    rsi,QWORD PTR [rsp+0x1e20]
   0x00000000001d425f <+47407>:	mov    QWORD PTR [rsp+0x24d8],rsi
   0x00000000001d4267 <+47415>:	mov    QWORD PTR [rsp+0x24d0],rdx
   0x00000000001d426f <+47423>:	mov    QWORD PTR [rsp+0x24c8],rcx
   0x00000000001d4277 <+47431>:	mov    DWORD PTR [rsp+0x24c0],eax
   0x00000000001d427e <+47438>:	lea    rdi,[rsp+0x24c0]
   0x00000000001d4286 <+47446>:	call   0x343280 <truthy?>
   0x00000000001d428b <+47451>:	test   al,0x1
   0x00000000001d428d <+47453>:	jne    0x1d43b5 <->+47749>
   0x00000000001d4293 <+47459>:	jmp    0x1d43e3 <->+47795>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d4298 <+47464>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d42a0 <+47472>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d42a8 <+47480>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d42b0 <+47488>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d42b7 <+47495>:	lea    rdi,[rsp+0x1eb0]
   0x00000000001d42bf <+47503>:	call   0x340b10 <new>
   0x00000000001d42c4 <+47508>:	mov    eax,DWORD PTR [rsp+0x1eb0]
   0x00000000001d42cb <+47515>:	mov    rcx,QWORD PTR [rsp+0x1eb8]
   0x00000000001d42d3 <+47523>:	mov    rdx,QWORD PTR [rsp+0x1ec0]
   0x00000000001d42db <+47531>:	mov    rsi,QWORD PTR [rsp+0x1ec8]
   0x00000000001d42e3 <+47539>:	mov    QWORD PTR [rsp+0x2580],rsi
   0x00000000001d42eb <+47547>:	mov    QWORD PTR [rsp+0x2578],rdx
   0x00000000001d42f3 <+47555>:	mov    QWORD PTR [rsp+0x2570],rcx
   0x00000000001d42fb <+47563>:	mov    DWORD PTR [rsp+0x2568],eax
   0x00000000001d4302 <+47570>:	lea    rax,[rsp+0x2568]
   0x00000000001d430a <+47578>:	mov    QWORD PTR [rsp+0xd8],rax
   0x00000000001d4312 <+47586>:	jmp    0x1d3f1b <->+46571>
   0x00000000001d4317 <+47591>:	mov    edi,DWORD PTR [rsp+0xe0]
   0x00000000001d431e <+47598>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d4323 <+47603>:	and    al,0x1
   0x00000000001d4325 <+47605>:	test   al,0x1
   0x00000000001d4327 <+47607>:	jne    0x1d432e <->+47614>
   0x00000000001d4329 <+47609>:	jmp    0x1d43b5 <->+47749>
   0x00000000001d432e <+47614>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d4336 <+47622>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d433e <+47630>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d4346 <+47638>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d434e <+47646>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d4355 <+47653>:	lea    rdi,[rsp+0x1ed0]
   0x00000000001d435d <+47661>:	call   0x340cb0 <new>
   0x00000000001d4362 <+47666>:	mov    eax,DWORD PTR [rsp+0x1ed0]
   0x00000000001d4369 <+47673>:	mov    rcx,QWORD PTR [rsp+0x1ed8]
   0x00000000001d4371 <+47681>:	mov    rdx,QWORD PTR [rsp+0x1ee0]
   0x00000000001d4379 <+47689>:	mov    rsi,QWORD PTR [rsp+0x1ee8]
   0x00000000001d4381 <+47697>:	mov    QWORD PTR [rsp+0x2560],rsi
   0x00000000001d4389 <+47705>:	mov    QWORD PTR [rsp+0x2558],rdx
   0x00000000001d4391 <+47713>:	mov    QWORD PTR [rsp+0x2550],rcx
   0x00000000001d4399 <+47721>:	mov    DWORD PTR [rsp+0x2548],eax
   0x00000000001d43a0 <+47728>:	lea    rax,[rsp+0x2548]
   0x00000000001d43a8 <+47736>:	mov    QWORD PTR [rsp+0xd8],rax
   0x00000000001d43b0 <+47744>:	jmp    0x1d3f1b <->+46571>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d43b5 <+47749>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d43bd <+47757>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d43c5 <+47765>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d43cd <+47773>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d43d5 <+47781>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d43dc <+47788>:	call   0x326080 <<<>
   0x00000000001d43e1 <+47793>:	jmp    0x1d43e5 <->+47797>
   0x00000000001d43e3 <+47795>:	jmp    0x1d43e5 <->+47797>
   0x00000000001d43e5 <+47797>:	mov    eax,DWORD PTR [rsp+0x25c8]
   0x00000000001d43ec <+47804>:	inc    eax
   0x00000000001d43ee <+47806>:	mov    DWORD PTR [rsp+0xbc],eax
   0x00000000001d43f5 <+47813>:	seto   al
   0x00000000001d43f8 <+47816>:	test   al,0x1
   0x00000000001d43fa <+47818>:	jne    0x1d43fe <->+47822>
   0x00000000001d43fc <+47820>:	jmp    0x1d4403 <->+47827>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001d43fe <+47822>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001d4403 <+47827>:	mov    eax,DWORD PTR [rsp+0xbc]
   0x00000000001d440a <+47834>:	mov    DWORD PTR [rsp+0x25c8],eax
   0x00000000001d4411 <+47841>:	jmp    0x1d3d41 <->+46097>
   0x00000000001d4416 <+47846>:	jmp    0x1d4418 <->+47848>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001d4418 <+47848>:	jmp    0x1d360d <->+44253>

247	    when String
   0x00000000001d441d <+47853>:	mov    rdi,QWORD PTR [rsp+0x3828]
   0x00000000001d4425 <+47861>:	mov    QWORD PTR [rsp+0xb0],rdi

/usr/lib/crystal/string.cr:
4814	    if single_byte_optimizable?
   0x00000000001d442d <+47869>:	call   0x21f0c0 <single_byte_optimizable?>
   0x00000000001d4432 <+47874>:	test   al,0x1
   0x00000000001d4434 <+47876>:	jne    0x1d444f <->+47903>
   0x00000000001d4436 <+47878>:	jmp    0x1d4482 <->+47954>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
249	    when StrictUndefined
   0x00000000001d4438 <+47880>:	mov    eax,0x123
   0x00000000001d443d <+47885>:	cmp    eax,DWORD PTR [rsp+0x3820]
   0x00000000001d4444 <+47892>:	je     0x1d5150 <->+51232>
   0x00000000001d444a <+47898>:	jmp    0x1d5183 <->+51283>
   0x00000000001d444f <+47903>:	mov    rdi,QWORD PTR [rsp+0xb0]

/usr/lib/crystal/string.cr:
4925	    to_slice.each do |byte|
   0x00000000001d4457 <+47911>:	call   0x21bcc0 <to_slice>
   0x00000000001d445c <+47916>:	mov    QWORD PTR [rsp+0x24b0],rcx
   0x00000000001d4464 <+47924>:	mov    DWORD PTR [rsp+0x24a8],eax
   0x00000000001d446b <+47931>:	and    dl,0x1
   0x00000000001d446e <+47934>:	mov    BYTE PTR [rsp+0x24ac],dl

/usr/lib/crystal/indexable.cr:
573	    i = 0
   0x00000000001d4475 <+47941>:	mov    DWORD PTR [rsp+0x249c],0x0
   0x00000000001d4480 <+47952>:	jmp    0x1d44f4 <->+48068>
   0x00000000001d4482 <+47954>:	mov    rsi,QWORD PTR [rsp+0xb0]
   0x00000000001d448a <+47962>:	lea    rdi,[rsp+0x20e0]

/usr/lib/crystal/string.cr:
4819	      Char::Reader.new(self).each do |char|
   0x00000000001d4492 <+47970>:	call   0x271400 <new>
   0x00000000001d4497 <+47975>:	mov    rax,QWORD PTR [rsp+0x20e0]
   0x00000000001d449f <+47983>:	mov    ecx,DWORD PTR [rsp+0x20e8]
   0x00000000001d44a6 <+47990>:	mov    edx,DWORD PTR [rsp+0x20ec]
   0x00000000001d44ad <+47997>:	mov    esi,DWORD PTR [rsp+0x20f0]
   0x00000000001d44b4 <+48004>:	mov    edi,DWORD PTR [rsp+0x20f8]
   0x00000000001d44bb <+48011>:	mov    r8,QWORD PTR [rsp+0x2100]
   0x00000000001d44c3 <+48019>:	mov    QWORD PTR [rsp+0x23a8],r8
   0x00000000001d44cb <+48027>:	mov    DWORD PTR [rsp+0x23a0],edi
   0x00000000001d44d2 <+48034>:	mov    DWORD PTR [rsp+0x2398],esi
   0x00000000001d44d9 <+48041>:	mov    DWORD PTR [rsp+0x2394],edx
   0x00000000001d44e0 <+48048>:	mov    DWORD PTR [rsp+0x2390],ecx
   0x00000000001d44e7 <+48055>:	mov    QWORD PTR [rsp+0x2388],rax
   0x00000000001d44ef <+48063>:	jmp    0x1d4b5b <->+49707>

/usr/lib/crystal/indexable.cr:
574	    while i < size
   0x00000000001d44f4 <+48068>:	mov    eax,DWORD PTR [rsp+0x249c]
   0x00000000001d44fb <+48075>:	cmp    eax,DWORD PTR [rsp+0x24a8]
   0x00000000001d4502 <+48082>:	jge    0x1d4553 <->+48163>
   0x00000000001d4504 <+48084>:	mov    eax,DWORD PTR [rsp+0x249c]
   0x00000000001d450b <+48091>:	mov    DWORD PTR [rsp+0x24a0],eax
   0x00000000001d4512 <+48098>:	mov    esi,DWORD PTR [rsp+0x24a0]

495	      yield unsafe_fetch(i)
   0x00000000001d4519 <+48105>:	lea    rdi,[rsp+0x24a8]
   0x00000000001d4521 <+48113>:	call   0x209830 <unsafe_fetch>
   0x00000000001d4526 <+48118>:	mov    BYTE PTR [rsp+0x24a7],al
   0x00000000001d452d <+48125>:	mov    al,BYTE PTR [rsp+0x24a7]
   0x00000000001d4534 <+48132>:	mov    BYTE PTR [rsp+0x24bb],al

/usr/lib/crystal/string.cr:
4816	        yield (byte < 0x80 ? byte.unsafe_chr : Char::REPLACEMENT)
   0x00000000001d453b <+48139>:	movzx  eax,BYTE PTR [rsp+0x24bb]
   0x00000000001d4543 <+48147>:	cmp    eax,0x80
   0x00000000001d4548 <+48152>:	setl   al
   0x00000000001d454b <+48155>:	and    al,0x1
   0x00000000001d454d <+48157>:	test   al,0x1
   0x00000000001d454f <+48159>:	jne    0x1d4558 <->+48168>
   0x00000000001d4551 <+48161>:	jmp    0x1d4569 <->+48185>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001d4553 <+48163>:	jmp    0x1d4b56 <->+49702>

/usr/lib/crystal/string.cr:
4816	        yield (byte < 0x80 ? byte.unsafe_chr : Char::REPLACEMENT)
   0x00000000001d4558 <+48168>:	movzx  eax,BYTE PTR [rsp+0x24bb]
   0x00000000001d4560 <+48176>:	mov    DWORD PTR [rsp+0xac],eax
   0x00000000001d4567 <+48183>:	jmp    0x1d4577 <->+48199>
   0x00000000001d4569 <+48185>:	mov    eax,0xfffd
   0x00000000001d456e <+48190>:	mov    DWORD PTR [rsp+0xac],eax
   0x00000000001d4575 <+48197>:	jmp    0x1d4577 <->+48199>
   0x00000000001d4577 <+48199>:	mov    eax,DWORD PTR [rsp+0xac]
   0x00000000001d457e <+48206>:	mov    DWORD PTR [rsp+0x24bc],eax
   0x00000000001d4585 <+48213>:	mov    edi,DWORD PTR [rsp+0x24bc]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
248	      object.each_char { |char| yield char.to_s }
   0x00000000001d458c <+48220>:	call   0x261c80 <to_s>
   0x00000000001d4591 <+48225>:	mov    DWORD PTR [rsp+0x3840],0x1
   0x00000000001d459c <+48236>:	mov    QWORD PTR [rsp+0x3848],rax
   0x00000000001d45a4 <+48244>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d45ab <+48251>:	mov    DWORD PTR [rsp+0xa8],ecx
   0x00000000001d45b2 <+48258>:	mov    eax,0x4ed
   0x00000000001d45b7 <+48263>:	cmp    eax,ecx
   0x00000000001d45b9 <+48265>:	sete   al
   0x00000000001d45bc <+48268>:	and    al,0x1
   0x00000000001d45be <+48270>:	test   al,0x1
   0x00000000001d45c0 <+48272>:	jne    0x1d45c4 <->+48276>
   0x00000000001d45c2 <+48274>:	jmp    0x1d4640 <->+48400>
   0x00000000001d45c4 <+48276>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d45cc <+48284>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d45d4 <+48292>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d45dc <+48300>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d45e3 <+48307>:	lea    rdi,[rsp+0x1f98]

254	    end
255	  end
256	
257	  # Assumes the underlying value is an `Iterable` and yields each
258	  # of the elements or key/values, always as `Value`.
259	  def each
260	    raw_each do |raw|
261	      yield Value.new raw
   0x00000000001d45eb <+48315>:	call   0x339d20 <new>
   0x00000000001d45f0 <+48320>:	mov    eax,DWORD PTR [rsp+0x1f98]
   0x00000000001d45f7 <+48327>:	mov    rcx,QWORD PTR [rsp+0x1fa0]
   0x00000000001d45ff <+48335>:	mov    rdx,QWORD PTR [rsp+0x1fa8]
   0x00000000001d4607 <+48343>:	mov    rsi,QWORD PTR [rsp+0x1fb0]
   0x00000000001d460f <+48351>:	mov    QWORD PTR [rsp+0x2490],rsi
   0x00000000001d4617 <+48359>:	mov    QWORD PTR [rsp+0x2488],rdx
   0x00000000001d461f <+48367>:	mov    QWORD PTR [rsp+0x2480],rcx
   0x00000000001d4627 <+48375>:	mov    DWORD PTR [rsp+0x2478],eax
   0x00000000001d462e <+48382>:	lea    rax,[rsp+0x2478]
   0x00000000001d4636 <+48390>:	mov    QWORD PTR [rsp+0xa0],rax
   0x00000000001d463e <+48398>:	jmp    0x1d465b <->+48427>
   0x00000000001d4640 <+48400>:	mov    edi,DWORD PTR [rsp+0xa8]
   0x00000000001d4647 <+48407>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d464c <+48412>:	and    al,0x1
   0x00000000001d464e <+48414>:	test   al,0x1
   0x00000000001d4650 <+48416>:	jne    0x1d49d8 <->+49320>
   0x00000000001d4656 <+48422>:	jmp    0x1d4a57 <->+49447>
   0x00000000001d465b <+48427>:	mov    rsi,QWORD PTR [rsp+0xa0]
   0x00000000001d4663 <+48435>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d4665 <+48437>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d4669 <+48441>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d466d <+48445>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d4671 <+48449>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d4679 <+48457>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d4681 <+48465>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d4689 <+48473>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d4690 <+48480>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d4697 <+48487>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d469f <+48495>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d46a7 <+48503>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d46af <+48511>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d46b7 <+48519>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d46bf <+48527>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d46c7 <+48535>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d46ce <+48542>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d46d6 <+48550>:	mov    QWORD PTR [rsp+0x88],rax
   0x00000000001d46de <+48558>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d46e6 <+48566>:	mov    QWORD PTR [rsp+0x90],rax
   0x00000000001d46ee <+48574>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d46f6 <+48582>:	mov    QWORD PTR [rsp+0x98],rax
   0x00000000001d46fe <+48590>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d4706 <+48598>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d470e <+48606>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d4716 <+48614>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d471d <+48621>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d4725 <+48629>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d472d <+48637>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d4735 <+48645>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d473d <+48653>:	mov    rax,rsp
   0x00000000001d4740 <+48656>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d4744 <+48660>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4748 <+48664>:	mov    QWORD PTR [rax],rdi
   0x00000000001d474b <+48667>:	lea    rdi,[rsp+0x1f78]
   0x00000000001d4753 <+48675>:	call   0x511190 <resolve_getattr>
   0x00000000001d4758 <+48680>:	mov    rsi,QWORD PTR [rsp+0x88]
   0x00000000001d4760 <+48688>:	mov    rdx,QWORD PTR [rsp+0x90]
   0x00000000001d4768 <+48696>:	mov    rcx,QWORD PTR [rsp+0x98]
   0x00000000001d4770 <+48704>:	mov    eax,DWORD PTR [rsp+0x1f78]
   0x00000000001d4777 <+48711>:	mov    rdi,QWORD PTR [rsp+0x1f80]
   0x00000000001d477f <+48719>:	mov    r8,QWORD PTR [rsp+0x1f88]
   0x00000000001d4787 <+48727>:	mov    r9,QWORD PTR [rsp+0x1f90]
   0x00000000001d478f <+48735>:	mov    QWORD PTR [rsp+0x2430],r9
   0x00000000001d4797 <+48743>:	mov    QWORD PTR [rsp+0x2428],r8
   0x00000000001d479f <+48751>:	mov    QWORD PTR [rsp+0x2420],rdi
   0x00000000001d47a7 <+48759>:	mov    DWORD PTR [rsp+0x2418],eax
   0x00000000001d47ae <+48766>:	mov    r9,QWORD PTR [rsp+0x2420]
   0x00000000001d47b6 <+48774>:	mov    r8d,DWORD PTR [rsp+0x2418]
   0x00000000001d47be <+48782>:	mov    rdi,QWORD PTR [rsp+0x2428]
   0x00000000001d47c6 <+48790>:	mov    r10,QWORD PTR [rsp+0x2430]
   0x00000000001d47ce <+48798>:	mov    rax,rsp
   0x00000000001d47d1 <+48801>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d47d5 <+48805>:	mov    QWORD PTR [rax],rdi
   0x00000000001d47d8 <+48808>:	lea    rdi,[rsp+0x1f30]
   0x00000000001d47e0 <+48816>:	call   0x4bd1f0 <new:target>
   0x00000000001d47e5 <+48821>:	mov    rax,QWORD PTR [rsp+0x1f30]
   0x00000000001d47ed <+48829>:	mov    ecx,DWORD PTR [rsp+0x1f38]
   0x00000000001d47f4 <+48836>:	mov    rdx,QWORD PTR [rsp+0x1f40]
   0x00000000001d47fc <+48844>:	mov    rsi,QWORD PTR [rsp+0x1f48]
   0x00000000001d4804 <+48852>:	mov    rdi,QWORD PTR [rsp+0x1f50]
   0x00000000001d480c <+48860>:	mov    r8,QWORD PTR [rsp+0x1f58]
   0x00000000001d4814 <+48868>:	mov    r9,QWORD PTR [rsp+0x1f60]
   0x00000000001d481c <+48876>:	mov    r10,QWORD PTR [rsp+0x1f68]
   0x00000000001d4824 <+48884>:	mov    r11,QWORD PTR [rsp+0x1f70]
   0x00000000001d482c <+48892>:	mov    QWORD PTR [rsp+0x2410],r11
   0x00000000001d4834 <+48900>:	mov    QWORD PTR [rsp+0x2408],r10
   0x00000000001d483c <+48908>:	mov    QWORD PTR [rsp+0x2400],r9
   0x00000000001d4844 <+48916>:	mov    QWORD PTR [rsp+0x23f8],r8
   0x00000000001d484c <+48924>:	mov    QWORD PTR [rsp+0x23f0],rdi
   0x00000000001d4854 <+48932>:	mov    QWORD PTR [rsp+0x23e8],rsi
   0x00000000001d485c <+48940>:	mov    QWORD PTR [rsp+0x23e0],rdx
   0x00000000001d4864 <+48948>:	mov    DWORD PTR [rsp+0x23d8],ecx
   0x00000000001d486b <+48955>:	mov    QWORD PTR [rsp+0x23d0],rax
   0x00000000001d4873 <+48963>:	mov    rax,QWORD PTR [rsp+0x23d0]
   0x00000000001d487b <+48971>:	mov    ecx,DWORD PTR [rsp+0x23d8]
   0x00000000001d4882 <+48978>:	mov    rdx,QWORD PTR [rsp+0x23e0]
   0x00000000001d488a <+48986>:	mov    rsi,QWORD PTR [rsp+0x23e8]
   0x00000000001d4892 <+48994>:	mov    rdi,QWORD PTR [rsp+0x23f0]
   0x00000000001d489a <+49002>:	mov    r8,QWORD PTR [rsp+0x23f8]
   0x00000000001d48a2 <+49010>:	mov    r9,QWORD PTR [rsp+0x2400]
   0x00000000001d48aa <+49018>:	mov    r10,QWORD PTR [rsp+0x2408]
   0x00000000001d48b2 <+49026>:	mov    r11,QWORD PTR [rsp+0x2410]
   0x00000000001d48ba <+49034>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d48c2 <+49042>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d48ca <+49050>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d48d2 <+49058>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d48da <+49066>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d48e2 <+49074>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d48ea <+49082>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d48f2 <+49090>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d48f9 <+49097>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d4901 <+49105>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d4909 <+49113>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d4911 <+49121>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d4919 <+49129>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d4921 <+49137>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d4929 <+49145>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d4931 <+49153>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d4939 <+49161>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d4941 <+49169>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d4949 <+49177>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d4951 <+49185>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d4959 <+49193>:	mov    rax,rsp
   0x00000000001d495c <+49196>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d4960 <+49200>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d4964 <+49204>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d4968 <+49208>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d496c <+49212>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4970 <+49216>:	mov    QWORD PTR [rax],rdi
   0x00000000001d4973 <+49219>:	lea    rdi,[rsp+0x1f10]
   0x00000000001d497b <+49227>:	call   0x3ae5e0 <execute_call>
   0x00000000001d4980 <+49232>:	mov    eax,DWORD PTR [rsp+0x1f10]
   0x00000000001d4987 <+49239>:	mov    rcx,QWORD PTR [rsp+0x1f18]
   0x00000000001d498f <+49247>:	mov    rdx,QWORD PTR [rsp+0x1f20]
   0x00000000001d4997 <+49255>:	mov    rsi,QWORD PTR [rsp+0x1f28]
   0x00000000001d499f <+49263>:	mov    QWORD PTR [rsp+0x23c8],rsi
   0x00000000001d49a7 <+49271>:	mov    QWORD PTR [rsp+0x23c0],rdx
   0x00000000001d49af <+49279>:	mov    QWORD PTR [rsp+0x23b8],rcx
   0x00000000001d49b7 <+49287>:	mov    DWORD PTR [rsp+0x23b0],eax
   0x00000000001d49be <+49294>:	lea    rdi,[rsp+0x23b0]
   0x00000000001d49c6 <+49302>:	call   0x343280 <truthy?>
   0x00000000001d49cb <+49307>:	test   al,0x1
   0x00000000001d49cd <+49309>:	jne    0x1d4af5 <->+49605>
   0x00000000001d49d3 <+49315>:	jmp    0x1d4b23 <->+49651>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d49d8 <+49320>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d49e0 <+49328>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d49e8 <+49336>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d49f0 <+49344>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d49f7 <+49351>:	lea    rdi,[rsp+0x1fb8]
   0x00000000001d49ff <+49359>:	call   0x340b10 <new>
   0x00000000001d4a04 <+49364>:	mov    eax,DWORD PTR [rsp+0x1fb8]
   0x00000000001d4a0b <+49371>:	mov    rcx,QWORD PTR [rsp+0x1fc0]
   0x00000000001d4a13 <+49379>:	mov    rdx,QWORD PTR [rsp+0x1fc8]
   0x00000000001d4a1b <+49387>:	mov    rsi,QWORD PTR [rsp+0x1fd0]
   0x00000000001d4a23 <+49395>:	mov    QWORD PTR [rsp+0x2470],rsi
   0x00000000001d4a2b <+49403>:	mov    QWORD PTR [rsp+0x2468],rdx
   0x00000000001d4a33 <+49411>:	mov    QWORD PTR [rsp+0x2460],rcx
   0x00000000001d4a3b <+49419>:	mov    DWORD PTR [rsp+0x2458],eax
   0x00000000001d4a42 <+49426>:	lea    rax,[rsp+0x2458]
   0x00000000001d4a4a <+49434>:	mov    QWORD PTR [rsp+0xa0],rax
   0x00000000001d4a52 <+49442>:	jmp    0x1d465b <->+48427>
   0x00000000001d4a57 <+49447>:	mov    edi,DWORD PTR [rsp+0xa8]
   0x00000000001d4a5e <+49454>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d4a63 <+49459>:	and    al,0x1
   0x00000000001d4a65 <+49461>:	test   al,0x1
   0x00000000001d4a67 <+49463>:	jne    0x1d4a6e <->+49470>
   0x00000000001d4a69 <+49465>:	jmp    0x1d4af5 <->+49605>
   0x00000000001d4a6e <+49470>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d4a76 <+49478>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d4a7e <+49486>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d4a86 <+49494>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d4a8e <+49502>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d4a95 <+49509>:	lea    rdi,[rsp+0x1fd8]
   0x00000000001d4a9d <+49517>:	call   0x340cb0 <new>
   0x00000000001d4aa2 <+49522>:	mov    eax,DWORD PTR [rsp+0x1fd8]
   0x00000000001d4aa9 <+49529>:	mov    rcx,QWORD PTR [rsp+0x1fe0]
   0x00000000001d4ab1 <+49537>:	mov    rdx,QWORD PTR [rsp+0x1fe8]
   0x00000000001d4ab9 <+49545>:	mov    rsi,QWORD PTR [rsp+0x1ff0]
   0x00000000001d4ac1 <+49553>:	mov    QWORD PTR [rsp+0x2450],rsi
   0x00000000001d4ac9 <+49561>:	mov    QWORD PTR [rsp+0x2448],rdx
   0x00000000001d4ad1 <+49569>:	mov    QWORD PTR [rsp+0x2440],rcx
   0x00000000001d4ad9 <+49577>:	mov    DWORD PTR [rsp+0x2438],eax
   0x00000000001d4ae0 <+49584>:	lea    rax,[rsp+0x2438]
   0x00000000001d4ae8 <+49592>:	mov    QWORD PTR [rsp+0xa0],rax
   0x00000000001d4af0 <+49600>:	jmp    0x1d465b <->+48427>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d4af5 <+49605>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d4afd <+49613>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d4b05 <+49621>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d4b0d <+49629>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d4b15 <+49637>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d4b1c <+49644>:	call   0x326080 <<<>
   0x00000000001d4b21 <+49649>:	jmp    0x1d4b25 <->+49653>
   0x00000000001d4b23 <+49651>:	jmp    0x1d4b25 <->+49653>
   0x00000000001d4b25 <+49653>:	mov    eax,DWORD PTR [rsp+0x249c]
   0x00000000001d4b2c <+49660>:	inc    eax
   0x00000000001d4b2e <+49662>:	mov    DWORD PTR [rsp+0x84],eax
   0x00000000001d4b35 <+49669>:	seto   al
   0x00000000001d4b38 <+49672>:	test   al,0x1
   0x00000000001d4b3a <+49674>:	jne    0x1d4b3e <->+49678>
   0x00000000001d4b3c <+49676>:	jmp    0x1d4b43 <->+49683>

/usr/lib/crystal/indexable.cr:
576	      i += 1
   0x00000000001d4b3e <+49678>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001d4b43 <+49683>:	mov    eax,DWORD PTR [rsp+0x84]
   0x00000000001d4b4a <+49690>:	mov    DWORD PTR [rsp+0x249c],eax
   0x00000000001d4b51 <+49697>:	jmp    0x1d44f4 <->+48068>

/usr/lib/crystal/char/reader.cr:
271	        decode_current_char
   0x00000000001d4b56 <+49702>:	jmp    0x1d514b <->+51227>

267	      while has_next?
   0x00000000001d4b5b <+49707>:	lea    rdi,[rsp+0x2388]
   0x00000000001d4b63 <+49715>:	call   0x271c30 <has_next?>
   0x00000000001d4b68 <+49720>:	test   al,0x1
   0x00000000001d4b6a <+49722>:	jne    0x1d4b6e <->+49726>
   0x00000000001d4b6c <+49724>:	jmp    0x1d4bc9 <->+49817>
   0x00000000001d4b6e <+49726>:	mov    eax,DWORD PTR [rsp+0x2390]
   0x00000000001d4b75 <+49733>:	mov    DWORD PTR [rsp+0x2384],eax
   0x00000000001d4b7c <+49740>:	mov    eax,DWORD PTR [rsp+0x2384]
   0x00000000001d4b83 <+49747>:	mov    DWORD PTR [rsp+0x24bc],eax
   0x00000000001d4b8a <+49754>:	mov    edi,DWORD PTR [rsp+0x24bc]

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
248	      object.each_char { |char| yield char.to_s }
   0x00000000001d4b91 <+49761>:	call   0x261c80 <to_s>
   0x00000000001d4b96 <+49766>:	mov    DWORD PTR [rsp+0x3840],0x1
   0x00000000001d4ba1 <+49777>:	mov    QWORD PTR [rsp+0x3848],rax
   0x00000000001d4ba9 <+49785>:	mov    ecx,DWORD PTR [rsp+0x3840]
   0x00000000001d4bb0 <+49792>:	mov    DWORD PTR [rsp+0x80],ecx
   0x00000000001d4bb7 <+49799>:	mov    eax,0x4ed
   0x00000000001d4bbc <+49804>:	cmp    eax,ecx
   0x00000000001d4bbe <+49806>:	sete   al
   0x00000000001d4bc1 <+49809>:	and    al,0x1
   0x00000000001d4bc3 <+49811>:	test   al,0x1
   0x00000000001d4bc5 <+49813>:	jne    0x1d4bcb <->+49819>
   0x00000000001d4bc7 <+49815>:	jmp    0x1d4c44 <->+49940>

/usr/lib/crystal/char/reader.cr:
271	        decode_current_char
   0x00000000001d4bc9 <+49817>:	jmp    0x1d4b56 <->+49702>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
248	      object.each_char { |char| yield char.to_s }
   0x00000000001d4bcb <+49819>:	mov    r8,QWORD PTR [rsp+0x3860]
   0x00000000001d4bd3 <+49827>:	mov    rcx,QWORD PTR [rsp+0x3858]
   0x00000000001d4bdb <+49835>:	mov    rdx,QWORD PTR [rsp+0x3850]
   0x00000000001d4be3 <+49843>:	mov    esi,DWORD PTR [rsp+0x3848]
   0x00000000001d4bea <+49850>:	lea    rdi,[rsp+0x2080]

254	    end
255	  end
256	
257	  # Assumes the underlying value is an `Iterable` and yields each
258	  # of the elements or key/values, always as `Value`.
259	  def each
260	    raw_each do |raw|
261	      yield Value.new raw
   0x00000000001d4bf2 <+49858>:	call   0x339d20 <new>
   0x00000000001d4bf7 <+49863>:	mov    eax,DWORD PTR [rsp+0x2080]
   0x00000000001d4bfe <+49870>:	mov    rcx,QWORD PTR [rsp+0x2088]
   0x00000000001d4c06 <+49878>:	mov    rdx,QWORD PTR [rsp+0x2090]
   0x00000000001d4c0e <+49886>:	mov    rsi,QWORD PTR [rsp+0x2098]
   0x00000000001d4c16 <+49894>:	mov    QWORD PTR [rsp+0x2378],rsi
   0x00000000001d4c1e <+49902>:	mov    QWORD PTR [rsp+0x2370],rdx
   0x00000000001d4c26 <+49910>:	mov    QWORD PTR [rsp+0x2368],rcx
   0x00000000001d4c2e <+49918>:	mov    DWORD PTR [rsp+0x2360],eax
   0x00000000001d4c35 <+49925>:	lea    rax,[rsp+0x2360]
   0x00000000001d4c3d <+49933>:	mov    QWORD PTR [rsp+0x78],rax
   0x00000000001d4c42 <+49938>:	jmp    0x1d4c5f <->+49967>
   0x00000000001d4c44 <+49940>:	mov    edi,DWORD PTR [rsp+0x80]
   0x00000000001d4c4b <+49947>:	call   0x17e6b0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d4c50 <+49952>:	and    al,0x1
   0x00000000001d4c52 <+49954>:	test   al,0x1
   0x00000000001d4c54 <+49956>:	jne    0x1d4fc7 <->+50839>
   0x00000000001d4c5a <+49962>:	jmp    0x1d5043 <->+50963>
   0x00000000001d4c5f <+49967>:	mov    rsi,QWORD PTR [rsp+0x78]
   0x00000000001d4c64 <+49972>:	mov    eax,DWORD PTR [rsi]
   0x00000000001d4c66 <+49974>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x00000000001d4c6a <+49978>:	mov    rdx,QWORD PTR [rsi+0x10]
   0x00000000001d4c6e <+49982>:	mov    rsi,QWORD PTR [rsi+0x18]
   0x00000000001d4c72 <+49986>:	mov    QWORD PTR [rsp+0x3880],rsi
   0x00000000001d4c7a <+49994>:	mov    QWORD PTR [rsp+0x3878],rdx
   0x00000000001d4c82 <+50002>:	mov    QWORD PTR [rsp+0x3870],rcx
   0x00000000001d4c8a <+50010>:	mov    DWORD PTR [rsp+0x3868],eax

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d4c91 <+50017>:	mov    eax,DWORD PTR [rsp+0x3868]
   0x00000000001d4c98 <+50024>:	mov    rcx,QWORD PTR [rsp+0x3870]
   0x00000000001d4ca0 <+50032>:	mov    rdx,QWORD PTR [rsp+0x3878]
   0x00000000001d4ca8 <+50040>:	mov    rsi,QWORD PTR [rsp+0x3880]
   0x00000000001d4cb0 <+50048>:	mov    QWORD PTR [rsp+0x38f0],rsi
   0x00000000001d4cb8 <+50056>:	mov    QWORD PTR [rsp+0x38e8],rdx
   0x00000000001d4cc0 <+50064>:	mov    QWORD PTR [rsp+0x38e0],rcx
   0x00000000001d4cc8 <+50072>:	mov    DWORD PTR [rsp+0x38d8],eax
   0x00000000001d4ccf <+50079>:	mov    rax,QWORD PTR [rsp+0x4a98]
   0x00000000001d4cd7 <+50087>:	mov    QWORD PTR [rsp+0x60],rax
   0x00000000001d4cdc <+50092>:	mov    rax,QWORD PTR [rsp+0x4a70]
   0x00000000001d4ce4 <+50100>:	mov    QWORD PTR [rsp+0x68],rax
   0x00000000001d4ce9 <+50105>:	mov    rax,QWORD PTR [rsp+0x4a30]
   0x00000000001d4cf1 <+50113>:	mov    QWORD PTR [rsp+0x70],rax
   0x00000000001d4cf6 <+50118>:	mov    r8,QWORD PTR [rsp+0x4a68]
   0x00000000001d4cfe <+50126>:	mov    rcx,QWORD PTR [rsp+0x4a60]
   0x00000000001d4d06 <+50134>:	mov    rdx,QWORD PTR [rsp+0x4a58]
   0x00000000001d4d0e <+50142>:	mov    esi,DWORD PTR [rsp+0x4a50]
   0x00000000001d4d15 <+50149>:	mov    r9d,DWORD PTR [rsp+0x38d8]
   0x00000000001d4d1d <+50157>:	mov    rdi,QWORD PTR [rsp+0x38e0]
   0x00000000001d4d25 <+50165>:	mov    r10,QWORD PTR [rsp+0x38e8]
   0x00000000001d4d2d <+50173>:	mov    r11,QWORD PTR [rsp+0x38f0]

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d4d35 <+50181>:	mov    rax,rsp
   0x00000000001d4d38 <+50184>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d4d3c <+50188>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4d40 <+50192>:	mov    QWORD PTR [rax],rdi
   0x00000000001d4d43 <+50195>:	lea    rdi,[rsp+0x2060]
   0x00000000001d4d4b <+50203>:	call   0x511190 <resolve_getattr>
   0x00000000001d4d50 <+50208>:	mov    rsi,QWORD PTR [rsp+0x60]
   0x00000000001d4d55 <+50213>:	mov    rdx,QWORD PTR [rsp+0x68]
   0x00000000001d4d5a <+50218>:	mov    rcx,QWORD PTR [rsp+0x70]
   0x00000000001d4d5f <+50223>:	mov    eax,DWORD PTR [rsp+0x2060]
   0x00000000001d4d66 <+50230>:	mov    rdi,QWORD PTR [rsp+0x2068]
   0x00000000001d4d6e <+50238>:	mov    r8,QWORD PTR [rsp+0x2070]
   0x00000000001d4d76 <+50246>:	mov    r9,QWORD PTR [rsp+0x2078]
   0x00000000001d4d7e <+50254>:	mov    QWORD PTR [rsp+0x2318],r9
   0x00000000001d4d86 <+50262>:	mov    QWORD PTR [rsp+0x2310],r8
   0x00000000001d4d8e <+50270>:	mov    QWORD PTR [rsp+0x2308],rdi
   0x00000000001d4d96 <+50278>:	mov    DWORD PTR [rsp+0x2300],eax
   0x00000000001d4d9d <+50285>:	mov    r9,QWORD PTR [rsp+0x2308]
   0x00000000001d4da5 <+50293>:	mov    r8d,DWORD PTR [rsp+0x2300]
   0x00000000001d4dad <+50301>:	mov    rdi,QWORD PTR [rsp+0x2310]
   0x00000000001d4db5 <+50309>:	mov    r10,QWORD PTR [rsp+0x2318]
   0x00000000001d4dbd <+50317>:	mov    rax,rsp
   0x00000000001d4dc0 <+50320>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4dc4 <+50324>:	mov    QWORD PTR [rax],rdi
   0x00000000001d4dc7 <+50327>:	lea    rdi,[rsp+0x2018]
   0x00000000001d4dcf <+50335>:	call   0x4bd1f0 <new:target>
   0x00000000001d4dd4 <+50340>:	mov    rax,QWORD PTR [rsp+0x2018]
   0x00000000001d4ddc <+50348>:	mov    ecx,DWORD PTR [rsp+0x2020]
   0x00000000001d4de3 <+50355>:	mov    rdx,QWORD PTR [rsp+0x2028]
   0x00000000001d4deb <+50363>:	mov    rsi,QWORD PTR [rsp+0x2030]
   0x00000000001d4df3 <+50371>:	mov    rdi,QWORD PTR [rsp+0x2038]
   0x00000000001d4dfb <+50379>:	mov    r8,QWORD PTR [rsp+0x2040]
   0x00000000001d4e03 <+50387>:	mov    r9,QWORD PTR [rsp+0x2048]
   0x00000000001d4e0b <+50395>:	mov    r10,QWORD PTR [rsp+0x2050]
   0x00000000001d4e13 <+50403>:	mov    r11,QWORD PTR [rsp+0x2058]
   0x00000000001d4e1b <+50411>:	mov    QWORD PTR [rsp+0x22f8],r11
   0x00000000001d4e23 <+50419>:	mov    QWORD PTR [rsp+0x22f0],r10
   0x00000000001d4e2b <+50427>:	mov    QWORD PTR [rsp+0x22e8],r9
   0x00000000001d4e33 <+50435>:	mov    QWORD PTR [rsp+0x22e0],r8
   0x00000000001d4e3b <+50443>:	mov    QWORD PTR [rsp+0x22d8],rdi
   0x00000000001d4e43 <+50451>:	mov    QWORD PTR [rsp+0x22d0],rsi
   0x00000000001d4e4b <+50459>:	mov    QWORD PTR [rsp+0x22c8],rdx
   0x00000000001d4e53 <+50467>:	mov    DWORD PTR [rsp+0x22c0],ecx
   0x00000000001d4e5a <+50474>:	mov    QWORD PTR [rsp+0x22b8],rax
   0x00000000001d4e62 <+50482>:	mov    rax,QWORD PTR [rsp+0x22b8]
   0x00000000001d4e6a <+50490>:	mov    ecx,DWORD PTR [rsp+0x22c0]
   0x00000000001d4e71 <+50497>:	mov    rdx,QWORD PTR [rsp+0x22c8]
   0x00000000001d4e79 <+50505>:	mov    rsi,QWORD PTR [rsp+0x22d0]
   0x00000000001d4e81 <+50513>:	mov    rdi,QWORD PTR [rsp+0x22d8]
   0x00000000001d4e89 <+50521>:	mov    r8,QWORD PTR [rsp+0x22e0]
   0x00000000001d4e91 <+50529>:	mov    r9,QWORD PTR [rsp+0x22e8]
   0x00000000001d4e99 <+50537>:	mov    r10,QWORD PTR [rsp+0x22f0]
   0x00000000001d4ea1 <+50545>:	mov    r11,QWORD PTR [rsp+0x22f8]
   0x00000000001d4ea9 <+50553>:	mov    QWORD PTR [rsp+0x38d0],r11
   0x00000000001d4eb1 <+50561>:	mov    QWORD PTR [rsp+0x38c8],r10
   0x00000000001d4eb9 <+50569>:	mov    QWORD PTR [rsp+0x38c0],r9
   0x00000000001d4ec1 <+50577>:	mov    QWORD PTR [rsp+0x38b8],r8
   0x00000000001d4ec9 <+50585>:	mov    QWORD PTR [rsp+0x38b0],rdi
   0x00000000001d4ed1 <+50593>:	mov    QWORD PTR [rsp+0x38a8],rsi
   0x00000000001d4ed9 <+50601>:	mov    QWORD PTR [rsp+0x38a0],rdx
   0x00000000001d4ee1 <+50609>:	mov    DWORD PTR [rsp+0x3898],ecx
   0x00000000001d4ee8 <+50616>:	mov    QWORD PTR [rsp+0x3890],rax
   0x00000000001d4ef0 <+50624>:	mov    rsi,QWORD PTR [rsp+0x4a98]
   0x00000000001d4ef8 <+50632>:	mov    rdx,QWORD PTR [rsp+0x4a48]
   0x00000000001d4f00 <+50640>:	mov    r9,QWORD PTR [rsp+0x38a0]
   0x00000000001d4f08 <+50648>:	mov    r8d,DWORD PTR [rsp+0x3898]
   0x00000000001d4f10 <+50656>:	mov    rcx,QWORD PTR [rsp+0x3890]
   0x00000000001d4f18 <+50664>:	mov    rdi,QWORD PTR [rsp+0x38a8]
   0x00000000001d4f20 <+50672>:	mov    r10,QWORD PTR [rsp+0x38b0]
   0x00000000001d4f28 <+50680>:	mov    r11,QWORD PTR [rsp+0x38b8]
   0x00000000001d4f30 <+50688>:	mov    rbx,QWORD PTR [rsp+0x38c0]
   0x00000000001d4f38 <+50696>:	mov    r14,QWORD PTR [rsp+0x38c8]
   0x00000000001d4f40 <+50704>:	mov    r15,QWORD PTR [rsp+0x38d0]
   0x00000000001d4f48 <+50712>:	mov    rax,rsp
   0x00000000001d4f4b <+50715>:	mov    QWORD PTR [rax+0x28],r15
   0x00000000001d4f4f <+50719>:	mov    QWORD PTR [rax+0x20],r14
   0x00000000001d4f53 <+50723>:	mov    QWORD PTR [rax+0x18],rbx
   0x00000000001d4f57 <+50727>:	mov    QWORD PTR [rax+0x10],r11
   0x00000000001d4f5b <+50731>:	mov    QWORD PTR [rax+0x8],r10
   0x00000000001d4f5f <+50735>:	mov    QWORD PTR [rax],rdi
   0x00000000001d4f62 <+50738>:	lea    rdi,[rsp+0x1ff8]
   0x00000000001d4f6a <+50746>:	call   0x3ae5e0 <execute_call>
   0x00000000001d4f6f <+50751>:	mov    eax,DWORD PTR [rsp+0x1ff8]
   0x00000000001d4f76 <+50758>:	mov    rcx,QWORD PTR [rsp+0x2000]
   0x00000000001d4f7e <+50766>:	mov    rdx,QWORD PTR [rsp+0x2008]
   0x00000000001d4f86 <+50774>:	mov    rsi,QWORD PTR [rsp+0x2010]
   0x00000000001d4f8e <+50782>:	mov    QWORD PTR [rsp+0x22b0],rsi
   0x00000000001d4f96 <+50790>:	mov    QWORD PTR [rsp+0x22a8],rdx
   0x00000000001d4f9e <+50798>:	mov    QWORD PTR [rsp+0x22a0],rcx
   0x00000000001d4fa6 <+50806>:	mov    DWORD PTR [rsp+0x2298],eax
   0x00000000001d4fad <+50813>:	lea    rdi,[rsp+0x2298]
   0x00000000001d4fb5 <+50821>:	call   0x343280 <truthy?>
   0x00000000001d4fba <+50826>:	test   al,0x1
   0x00000000001d4fbc <+50828>:	jne    0x1d50de <->+51118>
   0x00000000001d4fc2 <+50834>:	jmp    0x1d510c <->+51164>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
261	      yield Value.new raw
   0x00000000001d4fc7 <+50839>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d4fcf <+50847>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d4fd7 <+50855>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d4fdf <+50863>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d4fe6 <+50870>:	lea    rdi,[rsp+0x20a0]
   0x00000000001d4fee <+50878>:	call   0x340b10 <new>
   0x00000000001d4ff3 <+50883>:	mov    eax,DWORD PTR [rsp+0x20a0]
   0x00000000001d4ffa <+50890>:	mov    rcx,QWORD PTR [rsp+0x20a8]
   0x00000000001d5002 <+50898>:	mov    rdx,QWORD PTR [rsp+0x20b0]
   0x00000000001d500a <+50906>:	mov    rsi,QWORD PTR [rsp+0x20b8]
   0x00000000001d5012 <+50914>:	mov    QWORD PTR [rsp+0x2358],rsi
   0x00000000001d501a <+50922>:	mov    QWORD PTR [rsp+0x2350],rdx
   0x00000000001d5022 <+50930>:	mov    QWORD PTR [rsp+0x2348],rcx
   0x00000000001d502a <+50938>:	mov    DWORD PTR [rsp+0x2340],eax
   0x00000000001d5031 <+50945>:	lea    rax,[rsp+0x2340]
   0x00000000001d5039 <+50953>:	mov    QWORD PTR [rsp+0x78],rax
   0x00000000001d503e <+50958>:	jmp    0x1d4c5f <->+49967>
   0x00000000001d5043 <+50963>:	mov    edi,DWORD PTR [rsp+0x80]
   0x00000000001d504a <+50970>:	call   0x1827e0 <~match<(Array(Crinja::Value) | Bool | Crinja::Callable | Crinja::Object | Crinja::SafeString | Crinja::Undefined | Crinja::Value | Float64 | Hash(Crinja::Value, Crinja::Value) | Int32 | Int64 | Iterator(Crinja::Value) | Proc(Crinja::Arguments, Crinja::Value) | String | Time | Nil)>>
   0x00000000001d504f <+50975>:	and    al,0x1
   0x00000000001d5051 <+50977>:	test   al,0x1
   0x00000000001d5053 <+50979>:	jne    0x1d505a <->+50986>
   0x00000000001d5055 <+50981>:	jmp    0x1d50de <->+51118>
   0x00000000001d505a <+50986>:	mov    r9,QWORD PTR [rsp+0x3860]
   0x00000000001d5062 <+50994>:	mov    r8,QWORD PTR [rsp+0x3858]
   0x00000000001d506a <+51002>:	mov    rcx,QWORD PTR [rsp+0x3850]
   0x00000000001d5072 <+51010>:	mov    rdx,QWORD PTR [rsp+0x3848]
   0x00000000001d507a <+51018>:	mov    esi,DWORD PTR [rsp+0x3840]
   0x00000000001d5081 <+51025>:	lea    rdi,[rsp+0x20c0]
   0x00000000001d5089 <+51033>:	call   0x340cb0 <new>
   0x00000000001d508e <+51038>:	mov    eax,DWORD PTR [rsp+0x20c0]
   0x00000000001d5095 <+51045>:	mov    rcx,QWORD PTR [rsp+0x20c8]
   0x00000000001d509d <+51053>:	mov    rdx,QWORD PTR [rsp+0x20d0]
   0x00000000001d50a5 <+51061>:	mov    rsi,QWORD PTR [rsp+0x20d8]
   0x00000000001d50ad <+51069>:	mov    QWORD PTR [rsp+0x2338],rsi
   0x00000000001d50b5 <+51077>:	mov    QWORD PTR [rsp+0x2330],rdx
   0x00000000001d50bd <+51085>:	mov    QWORD PTR [rsp+0x2328],rcx
   0x00000000001d50c5 <+51093>:	mov    DWORD PTR [rsp+0x2320],eax
   0x00000000001d50cc <+51100>:	lea    rax,[rsp+0x2320]
   0x00000000001d50d4 <+51108>:	mov    QWORD PTR [rsp+0x78],rax
   0x00000000001d50d9 <+51113>:	jmp    0x1d4c5f <->+49967>

/home/lune/git/kagi/dispatch/lib/crinja/src/lib/filter/collections.cr:
10	    when .responds_to?(:to_a)
   0x00000000001d50de <+51118>:	mov    rdi,QWORD PTR [rsp+0x3888]
   0x00000000001d50e6 <+51126>:	mov    r8,QWORD PTR [rsp+0x3880]
   0x00000000001d50ee <+51134>:	mov    rcx,QWORD PTR [rsp+0x3878]
   0x00000000001d50f6 <+51142>:	mov    rdx,QWORD PTR [rsp+0x3870]
   0x00000000001d50fe <+51150>:	mov    esi,DWORD PTR [rsp+0x3868]

/usr/lib/crystal/enumerable.cr:
1621	    each { |e| ary << e if yield e }
   0x00000000001d5105 <+51157>:	call   0x326080 <<<>
   0x00000000001d510a <+51162>:	jmp    0x1d510e <->+51166>
   0x00000000001d510c <+51164>:	jmp    0x1d510e <->+51166>
   0x00000000001d510e <+51166>:	mov    eax,DWORD PTR [rsp+0x2398]
   0x00000000001d5115 <+51173>:	add    eax,DWORD PTR [rsp+0x2394]
   0x00000000001d511c <+51180>:	mov    DWORD PTR [rsp+0x5c],eax
   0x00000000001d5120 <+51184>:	seto   al
   0x00000000001d5123 <+51187>:	test   al,0x1
   0x00000000001d5125 <+51189>:	jne    0x1d5129 <->+51193>
   0x00000000001d5127 <+51191>:	jmp    0x1d512e <->+51198>

/usr/lib/crystal/char/reader.cr:
270	        @pos += @current_char_width
   0x00000000001d5129 <+51193>:	call   0x103f60 <__crystal_raise_overflow>
   0x00000000001d512e <+51198>:	mov    eax,DWORD PTR [rsp+0x5c]
   0x00000000001d5132 <+51202>:	mov    DWORD PTR [rsp+0x2398],eax

271	        decode_current_char
   0x00000000001d5139 <+51209>:	lea    rdi,[rsp+0x2388]
   0x00000000001d5141 <+51217>:	call   0x271510 <decode_current_char>
   0x00000000001d5146 <+51222>:	jmp    0x1d4b5b <->+49707>

/home/lune/git/kagi/dispatch/lib/crinja/src/runtime/value.cr:
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001d514b <+51227>:	jmp    0x1d4418 <->+47848>

249	    when StrictUndefined
   0x00000000001d5150 <+51232>:	mov    rcx,QWORD PTR [rsp+0x4a90]
   0x00000000001d5158 <+51240>:	mov    rdx,QWORD PTR [rsp+0x4a88]
   0x00000000001d5160 <+51248>:	mov    rsi,QWORD PTR [rsp+0x4a80]
   0x00000000001d5168 <+51256>:	mov    edi,DWORD PTR [rsp+0x4a78]

250	      raise TypeError.new(self, "can't iterate over undefined")
   0x00000000001d516f <+51263>:	lea    r8,[rip+0x38a9da]        # 0x55fb50
   0x00000000001d5176 <+51270>:	call   0x3002f0 <new>
   0x00000000001d517b <+51275>:	mov    rdi,rax
   0x00000000001d517e <+51278>:	call   0x182b50 <raise>

251	    when Undefined
   0x00000000001d5183 <+51283>:	mov    edi,DWORD PTR [rsp+0x3820]
   0x00000000001d518a <+51290>:	call   0x17e870 <~match<Crinja::Undefined+>>
   0x00000000001d518f <+51295>:	test   al,0x1
   0x00000000001d5191 <+51297>:	jne    0x1d5195 <->+51301>
   0x00000000001d5193 <+51299>:	jmp    0x1d5197 <->+51303>
   0x00000000001d5195 <+51301>:	jmp    0x1d51df <->+51375>
   0x00000000001d5197 <+51303>:	mov    rax,QWORD PTR [rsp+0x4a90]
   0x00000000001d519f <+51311>:	mov    QWORD PTR [rsp+0x38],rax
   0x00000000001d51a4 <+51316>:	mov    rax,QWORD PTR [rsp+0x4a88]
   0x00000000001d51ac <+51324>:	mov    QWORD PTR [rsp+0x40],rax
   0x00000000001d51b1 <+51329>:	mov    rax,QWORD PTR [rsp+0x4a80]
   0x00000000001d51b9 <+51337>:	mov    QWORD PTR [rsp+0x48],rax
   0x00000000001d51be <+51342>:	mov    eax,DWORD PTR [rsp+0x4a78]
   0x00000000001d51c5 <+51349>:	mov    DWORD PTR [rsp+0x54],eax
   0x00000000001d51c9 <+51353>:	mov    ecx,DWORD PTR [rsp+0x3820]
   0x00000000001d51d0 <+51360>:	mov    DWORD PTR [rsp+0x58],ecx
   0x00000000001d51d4 <+51364>:	mov    eax,0x1cd
   0x00000000001d51d9 <+51369>:	cmp    eax,ecx
   0x00000000001d51db <+51371>:	je     0x1d51e4 <->+51380>
   0x00000000001d51dd <+51373>:	jmp    0x1d5209 <->+51417>

252	    else
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001d51df <+51375>:	jmp    0x1d514b <->+51227>

251	    when Undefined
   0x00000000001d51e4 <+51380>:	mov    DWORD PTR [rsp+0x2288],0x72f
   0x00000000001d51ef <+51391>:	mov    DWORD PTR [rsp+0x2290],0x72f
   0x00000000001d51fa <+51402>:	lea    rax,[rsp+0x2288]
   0x00000000001d5202 <+51410>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5207 <+51415>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5209 <+51417>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d520d <+51421>:	mov    eax,0x125
   0x00000000001d5212 <+51426>:	cmp    eax,ecx
   0x00000000001d5214 <+51428>:	je     0x1d5252 <->+51490>
   0x00000000001d5216 <+51430>:	jmp    0x1d5277 <->+51527>
   0x00000000001d5218 <+51432>:	mov    rax,QWORD PTR [rsp+0x30]
   0x00000000001d521d <+51437>:	mov    rsi,QWORD PTR [rax+0x8]
   0x00000000001d5221 <+51441>:	mov    edi,DWORD PTR [rax]

252	    else
253	      raise TypeError.new(self, "#{object.class} is not iterable")
   0x00000000001d5223 <+51443>:	lea    rdx,[rip+0x38a956]        # 0x55fb80
   0x00000000001d522a <+51450>:	call   0x237a00 <interpolation>
   0x00000000001d522f <+51455>:	mov    edi,DWORD PTR [rsp+0x54]
   0x00000000001d5233 <+51459>:	mov    rsi,QWORD PTR [rsp+0x48]
   0x00000000001d5238 <+51464>:	mov    rdx,QWORD PTR [rsp+0x40]
   0x00000000001d523d <+51469>:	mov    rcx,QWORD PTR [rsp+0x38]
   0x00000000001d5242 <+51474>:	mov    r8,rax
   0x00000000001d5245 <+51477>:	call   0x3002f0 <new>
   0x00000000001d524a <+51482>:	mov    rdi,rax
   0x00000000001d524d <+51485>:	call   0x182b50 <raise>

251	    when Undefined
   0x00000000001d5252 <+51490>:	mov    DWORD PTR [rsp+0x2278],0x686
   0x00000000001d525d <+51501>:	mov    DWORD PTR [rsp+0x2280],0x686
   0x00000000001d5268 <+51512>:	lea    rax,[rsp+0x2278]
   0x00000000001d5270 <+51520>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5275 <+51525>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5277 <+51527>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d527b <+51531>:	mov    eax,0x196
   0x00000000001d5280 <+51536>:	cmp    eax,ecx
   0x00000000001d5282 <+51538>:	jne    0x1d52ac <->+51580>
   0x00000000001d5284 <+51540>:	mov    DWORD PTR [rsp+0x2268],0x6f7
   0x00000000001d528f <+51551>:	mov    DWORD PTR [rsp+0x2270],0x6f7
   0x00000000001d529a <+51562>:	lea    rax,[rsp+0x2268]
   0x00000000001d52a2 <+51570>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d52a7 <+51575>:	jmp    0x1d5218 <->+51432>
   0x00000000001d52ac <+51580>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d52b0 <+51584>:	mov    eax,0x197
   0x00000000001d52b5 <+51589>:	cmp    eax,ecx
   0x00000000001d52b7 <+51591>:	jne    0x1d52e1 <->+51633>
   0x00000000001d52b9 <+51593>:	mov    DWORD PTR [rsp+0x2258],0x6f9
   0x00000000001d52c4 <+51604>:	mov    DWORD PTR [rsp+0x2260],0x6f9
   0x00000000001d52cf <+51615>:	lea    rax,[rsp+0x2258]
   0x00000000001d52d7 <+51623>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d52dc <+51628>:	jmp    0x1d5218 <->+51432>
   0x00000000001d52e1 <+51633>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d52e5 <+51637>:	mov    eax,0x199
   0x00000000001d52ea <+51642>:	cmp    eax,ecx
   0x00000000001d52ec <+51644>:	jne    0x1d5316 <->+51686>
   0x00000000001d52ee <+51646>:	mov    DWORD PTR [rsp+0x2248],0x6fa
   0x00000000001d52f9 <+51657>:	mov    DWORD PTR [rsp+0x2250],0x6fa
   0x00000000001d5304 <+51668>:	lea    rax,[rsp+0x2248]
   0x00000000001d530c <+51676>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5311 <+51681>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5316 <+51686>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d531a <+51690>:	mov    eax,0x193
   0x00000000001d531f <+51695>:	cmp    eax,ecx
   0x00000000001d5321 <+51697>:	jne    0x1d534b <->+51739>
   0x00000000001d5323 <+51699>:	mov    DWORD PTR [rsp+0x2238],0x6f4
   0x00000000001d532e <+51710>:	mov    DWORD PTR [rsp+0x2240],0x6f4
   0x00000000001d5339 <+51721>:	lea    rax,[rsp+0x2238]
   0x00000000001d5341 <+51729>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5346 <+51734>:	jmp    0x1d5218 <->+51432>
   0x00000000001d534b <+51739>:	mov    edi,DWORD PTR [rsp+0x58]
   0x00000000001d534f <+51743>:	call   0x17e850 <~match<Crinja::Tag::For::ForLoop+>>
   0x00000000001d5354 <+51748>:	test   al,0x1
   0x00000000001d5356 <+51750>:	jne    0x1d535a <->+51754>
   0x00000000001d5358 <+51752>:	jmp    0x1d5389 <->+51801>
   0x00000000001d535a <+51754>:	mov    rax,QWORD PTR [rsp+0x3828]
   0x00000000001d5362 <+51762>:	mov    edi,DWORD PTR [rax]
   0x00000000001d5364 <+51764>:	call   0x17bc60 <~metaclass>
   0x00000000001d5369 <+51769>:	mov    DWORD PTR [rsp+0x2228],eax
   0x00000000001d5370 <+51776>:	mov    DWORD PTR [rsp+0x2230],eax
   0x00000000001d5377 <+51783>:	lea    rax,[rsp+0x2228]
   0x00000000001d537f <+51791>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5384 <+51796>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5389 <+51801>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d538d <+51805>:	mov    eax,0x12a
   0x00000000001d5392 <+51810>:	cmp    eax,ecx
   0x00000000001d5394 <+51812>:	jne    0x1d53be <->+51854>
   0x00000000001d5396 <+51814>:	mov    DWORD PTR [rsp+0x2218],0x68b
   0x00000000001d53a1 <+51825>:	mov    DWORD PTR [rsp+0x2220],0x68b
   0x00000000001d53ac <+51836>:	lea    rax,[rsp+0x2218]
   0x00000000001d53b4 <+51844>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d53b9 <+51849>:	jmp    0x1d5218 <->+51432>
   0x00000000001d53be <+51854>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d53c2 <+51858>:	mov    eax,0x1bb
   0x00000000001d53c7 <+51863>:	cmp    eax,ecx
   0x00000000001d53c9 <+51865>:	jne    0x1d53f3 <->+51907>
   0x00000000001d53cb <+51867>:	mov    DWORD PTR [rsp+0x2208],0x71c
   0x00000000001d53d6 <+51878>:	mov    DWORD PTR [rsp+0x2210],0x71c
   0x00000000001d53e1 <+51889>:	lea    rax,[rsp+0x2208]
   0x00000000001d53e9 <+51897>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d53ee <+51902>:	jmp    0x1d5218 <->+51432>
   0x00000000001d53f3 <+51907>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d53f7 <+51911>:	mov    eax,0x1bc
   0x00000000001d53fc <+51916>:	cmp    eax,ecx
   0x00000000001d53fe <+51918>:	jne    0x1d5428 <->+51960>
   0x00000000001d5400 <+51920>:	mov    DWORD PTR [rsp+0x21f8],0x71d
   0x00000000001d540b <+51931>:	mov    DWORD PTR [rsp+0x2200],0x71d
   0x00000000001d5416 <+51942>:	lea    rax,[rsp+0x21f8]
   0x00000000001d541e <+51950>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5423 <+51955>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5428 <+51960>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d542c <+51964>:	mov    eax,0x4ee
   0x00000000001d5431 <+51969>:	cmp    eax,ecx
   0x00000000001d5433 <+51971>:	jne    0x1d545d <->+52013>
   0x00000000001d5435 <+51973>:	mov    DWORD PTR [rsp+0x21e8],0xa52
   0x00000000001d5440 <+51984>:	mov    DWORD PTR [rsp+0x21f0],0xa52
   0x00000000001d544b <+51995>:	lea    rax,[rsp+0x21e8]
   0x00000000001d5453 <+52003>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5458 <+52008>:	jmp    0x1d5218 <->+51432>
   0x00000000001d545d <+52013>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d5461 <+52017>:	mov    eax,0x1ca
   0x00000000001d5466 <+52022>:	cmp    eax,ecx
   0x00000000001d5468 <+52024>:	jne    0x1d5492 <->+52066>
   0x00000000001d546a <+52026>:	mov    DWORD PTR [rsp+0x21d8],0x72d
   0x00000000001d5475 <+52037>:	mov    DWORD PTR [rsp+0x21e0],0x72d
   0x00000000001d5480 <+52048>:	lea    rax,[rsp+0x21d8]
   0x00000000001d5488 <+52056>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d548d <+52061>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5492 <+52066>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d5496 <+52070>:	mov    eax,0x1c2
   0x00000000001d549b <+52075>:	cmp    eax,ecx
   0x00000000001d549d <+52077>:	jne    0x1d54c7 <->+52119>
   0x00000000001d549f <+52079>:	mov    DWORD PTR [rsp+0x21c8],0x725
   0x00000000001d54aa <+52090>:	mov    DWORD PTR [rsp+0x21d0],0x725
   0x00000000001d54b5 <+52101>:	lea    rax,[rsp+0x21c8]
   0x00000000001d54bd <+52109>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d54c2 <+52114>:	jmp    0x1d5218 <->+51432>
   0x00000000001d54c7 <+52119>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d54cb <+52123>:	mov    eax,0x1c4
   0x00000000001d54d0 <+52128>:	cmp    eax,ecx
   0x00000000001d54d2 <+52130>:	jne    0x1d54fc <->+52172>
   0x00000000001d54d4 <+52132>:	mov    DWORD PTR [rsp+0x21b8],0x727
   0x00000000001d54df <+52143>:	mov    DWORD PTR [rsp+0x21c0],0x727
   0x00000000001d54ea <+52154>:	lea    rax,[rsp+0x21b8]
   0x00000000001d54f2 <+52162>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d54f7 <+52167>:	jmp    0x1d5218 <->+51432>
   0x00000000001d54fc <+52172>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d5500 <+52176>:	mov    eax,0x50a
   0x00000000001d5505 <+52181>:	cmp    eax,ecx
   0x00000000001d5507 <+52183>:	jne    0x1d5531 <->+52225>
   0x00000000001d5509 <+52185>:	mov    DWORD PTR [rsp+0x21a8],0xa54
   0x00000000001d5514 <+52196>:	mov    DWORD PTR [rsp+0x21b0],0xa54
   0x00000000001d551f <+52207>:	lea    rax,[rsp+0x21a8]
   0x00000000001d5527 <+52215>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d552c <+52220>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5531 <+52225>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d5535 <+52229>:	mov    eax,0x4da
   0x00000000001d553a <+52234>:	cmp    eax,ecx
   0x00000000001d553c <+52236>:	jne    0x1d5566 <->+52278>
   0x00000000001d553e <+52238>:	mov    DWORD PTR [rsp+0x2198],0xa3e
   0x00000000001d5549 <+52249>:	mov    DWORD PTR [rsp+0x21a0],0xa3e
   0x00000000001d5554 <+52260>:	lea    rax,[rsp+0x2198]
   0x00000000001d555c <+52268>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5561 <+52273>:	jmp    0x1d5218 <->+51432>
   0x00000000001d5566 <+52278>:	mov    ecx,DWORD PTR [rsp+0x58]
   0x00000000001d556a <+52282>:	xor    eax,eax
   0x00000000001d556c <+52284>:	cmp    eax,ecx
   0x00000000001d556e <+52286>:	jne    0x1d5598
   0x00000000001d5570 <+52288>:	mov    DWORD PTR [rsp+0x2188],0x72e
   0x00000000001d557b <+52299>:	mov    DWORD PTR [rsp+0x2190],0x72e
   0x00000000001d5586 <+52310>:	lea    rax,[rsp+0x2188]
   0x00000000001d558e <+52318>:	mov    QWORD PTR [rsp+0x30],rax
   0x00000000001d5593 <+52323>:	jmp    0x1d5218 <->+51432>
End of assembler dump.
quit
